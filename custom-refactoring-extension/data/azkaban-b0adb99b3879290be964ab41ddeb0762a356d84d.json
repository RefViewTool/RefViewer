[
    {
        "commit": "b0adb99b3879290be964ab41ddeb0762a356d84d",
        "source": [
            {
                "element": "azkaban.execapp.FlowRunner.runFlow()",
                "file": "src/java/azkaban/execapp/FlowRunner.java",
                "local": "L[300,369], C[2,2]"
            }
        ],
        "target": [
            {
                "element": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "file": "src/java/azkaban/execapp/FlowRunner.java",
                "local": "L[405,421], C[2,2]"
            }
        ],
        "type": "EXTRACT_METHOD",
        "related": [
            {
                "Metric": "ADDED_METHOD",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[405,421], C[2,2]",
                "Detail": {
                    "method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                    "blockPos": "L[405,421], C[53,2]"
                },
                "Code": "private void finalizeFlow(ExecutableFlowBase flow){\n  String id=flow == this.flow ? \"\" : flow.getPrintableId() + \" \";\nswitch (flow.getStatus()) {\ncase FAILED_FINISHING:    logger.info(\"Setting flow \" + id + \"status to Failed.\");\n  flow.setStatus(Status.FAILED);\ncase FAILED:case KILLED:case FAILED_SUCCEEDED:logger.info(\"Flow \" + id + \"is set to \"+ flow.getStatus().toString());\nbreak;\ndefault:flow.setStatus(Status.SUCCEEDED);\nlogger.info(\"Flow \" + id + \"is set to \"+ flow.getStatus().toString());\n}\n}\n",
                "relationType": "MENTIONED_DECLARATION",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[415,415], C[46,61]",
                "Detail": null,
                "Code": "flow.getStatus()",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[362,362], C[37,52]",
                "Detail": null,
                "Code": "flow.getStatus()",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_SYNCHRONIZEDSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.cancel()",
                "Local": "L[646,666], C[3,3]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "synchronized (mainSyncObj) {\n  logger.info(\"Cancel has been called on flow \" + execId);\n  flowPaused=false;\n  flowCancelled=true;\n  if (watcher != null) {\n    logger.info(\"Watcher is attached. Stopping watcher.\");\n    watcher.stopWatcher();\n    logger.info(\"Watcher cancelled status is \" + watcher.isWatchCancelled());\n  }\n  logger.info(\"Cancelling \" + activeJobRunners.size() + \" jobs.\");\n  for (  JobRunner runner : activeJobRunners) {\n    runner.cancel();\n  }\n  if (flow.getStatus() != Status.FAILED && flow.getStatus() != Status.FAILED_FINISHING) {\n    logger.info(\"Setting flow status to \" + Status.KILLED.toString());\n    flow.setStatus(Status.KILLED);\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[806,806], C[6,55]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>base[797,822]"
                },
                "Code": "ExecutableNode node=base.getExecutableNode(end);\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[808,808], C[6,42]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>output[808,814]"
                },
                "Code": "Props output=node.getOutputProps();\n",
                "relationType": "VAR_RELATED",
                "distance": 6,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[410,410], C[4,58]",
                "Detail": null,
                "Code": "logger.info(\"Setting flow \" + id + \"status to Failed.\")",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_CastExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase).retryFailures(String)",
                "Local": "L[687,687], C[20,43]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "(ExecutableFlowBase)node",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[818,818], C[9,36]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>base[797,822]"
                },
                "Code": "base.getParentFlow() != null",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase).info(UNKNOWN)",
                "Local": "L[419,419], C[16,72]",
                "Detail": null,
                "Code": "\"Flow \" + id + \"is set to \"+ flow.getStatus().toString()",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.runFlow().info(UNKNOWN)",
                "Local": "L[366,366], C[17,63]",
                "Detail": null,
                "Code": "\"Flow is set to \" + flow.getStatus().toString()",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[699,699], C[5,32]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.setStatus(Status.READY)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[660,660], C[6,33]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(String)>>>node[653,662]"
                },
                "Code": "node.setStatus(Status.READY)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String).error(UNKNOWN)",
                "Local": "L[673,673], C[19,109]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "\"Job \" + jobId + \" doesn't exist in execution \"+ flow.getExecutionId()+ \". Cannot retry.\"",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase).info(UNKNOWN)",
                "Local": "L[415,415], C[16,72]",
                "Detail": null,
                "Code": "\"Flow \" + id + \"is set to \"+ flow.getStatus().toString()",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.runFlow().info(UNKNOWN)",
                "Local": "L[362,362], C[17,63]",
                "Detail": null,
                "Code": "\"Flow is set to \" + flow.getStatus().toString()",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_ENHANCEDFORSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[684,706], C[3,3]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "for (ExecutableNode node : flow.getExecutableNodes()) {\n  if (node instanceof ExecutableFlowBase) {\n    if (node.getStatus() == Status.FAILED || node.getStatus() == Status.FAILED_FINISHING || node.getStatus() == Status.KILLED) {\n      retryFailures((ExecutableFlowBase)node);\n    }\n  }\n  if (node.getStatus() == Status.FAILED) {\n    node.resetForRetry();\n    logger.info(\"Re-enabling job \" + node.getPrintableId() + \" attempt \"+ node.getAttempt());\n    reEnableDependents(node);\n  }\n else   if (node.getStatus() == Status.KILLED) {\n    node.setStartTime(-1);\n    node.setEndTime(-1);\n    node.setStatus(Status.READY);\n  }\n else   if (node.getStatus() == Status.FAILED_FINISHING) {\n    node.setStartTime(-1);\n    node.setEndTime(-1);\n    node.setStatus(Status.READY);\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ENHANCEDFORSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[653,662], C[4,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "for (ExecutableNode node : flow.getExecutableNodes()) {\n  if (node.getStatus() == Status.FAILED) {\n    failures.add(node.getId());\n  }\n else   if (node.getStatus() == Status.KILLED) {\n    node.setStartTime(-1);\n    node.setEndTime(-1);\n    node.setStatus(Status.READY);\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[652,652], C[4,56]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(String)>>>failures[652,665]"
                },
                "Code": "ArrayList<String> failures=new ArrayList<String>();\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).info(UNKNOWN)",
                "Local": "L[755,755], C[20,112]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "\"Job \" + id + \" will be retried. Attempt \"+ node.getAttempt()+ \" of \"+ runner.getRetries()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "METHOD_CALL_ARGUMENTS_CHANGE",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).info(UNKNOWN)",
                "Local": "L[755,755], C[8,113]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "logger.info(\"Job \" + id + \" will be retried. Attempt \"+ node.getAttempt()+ \" of \"+ runner.getRetries())",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_EXPRESSIONSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[676,676], C[4,22]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flowFailed[57,879]"
                },
                "Code": "flowFailed=false;\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_EXPRESSIONSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[701,701], C[5,23]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flowFailed[41,845]"
                },
                "Code": "flowFailed=false;\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[799,799], C[8,19]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[57,879]"
                },
                "Code": "base == flow",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[818,818], C[9,28]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>base[797,822]"
                },
                "Code": "base.getParentFlow()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[749,749], C[7,53]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "logger.info(\"Job \" + id + \" had output props.\")",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[803,821], C[31,4]",
                "Detail": null,
                "Code": "{\n  Props previousOutput=null;\n  for (  String end : base.getEndNodes()) {\n    ExecutableNode node=base.getExecutableNode(end);\n    Props output=node.getOutputProps();\n    if (output != null) {\n      output=Props.clone(output);\n      output.setParent(previousOutput);\n      previousOutput=output;\n    }\n  }\n  base.setOutputProps(previousOutput);\n  finalizeFlow(base);\n  if (base.getParentFlow() != null) {\n    finalizeFlowIfFinished(base.getParentFlow());\n  }\n}\n",
                "relationType": "CALL_TARGET",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[809,813], C[26,6]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>output[808,814]"
                },
                "Code": "{\n  output=Props.clone(output);\n  output.setParent(previousOutput);\n  previousOutput=output;\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 6,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[818,820], C[39,5]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>base[797,822]"
                },
                "Code": "{\n  finalizeFlowIfFinished(base.getParentFlow());\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[806,806], C[28,54]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>base[797,822]"
                },
                "Code": "base.getExecutableNode(end)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_PrefixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[698,698], C[8,22]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>isFailureFound[689,706]"
                },
                "Code": "!isFailureFound",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[703,703], C[5,23]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.setEndTime(-1)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[810,810], C[16,34]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>output[808,814]"
                },
                "Code": "Props.clone(output)",
                "relationType": "VAR_RELATED",
                "distance": 6,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[803,803], C[8,28]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>base[797,822]"
                },
                "Code": "base.isFlowFinished()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[757,757], C[29,40]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "node.getId()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[684,684], C[6,89]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[41,845]"
                },
                "Code": "logger.error(\"Cannot retry job \" + jobId + \" since it hasn't run yet. User \"+ user)",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[761,761], C[9,67]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "logger.info(\"Job \" + id + \" has run out of retry attempts\")",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[692,692], C[5,24]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.resetForRetry()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[679,679], C[6,25]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>node[671,687]"
                },
                "Code": "node.resetForRetry()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[746,746], C[6,42]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "String id=node.getPrintableId(\":\");\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).info(UNKNOWN)",
                "Local": "L[749,749], C[19,52]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>id[746,786]"
                },
                "Code": "\"Job \" + id + \" had output props.\"",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).info(UNKNOWN)",
                "Local": "L[761,761], C[21,66]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>id[746,786]"
                },
                "Code": "\"Job \" + id + \" has run out of retry attempts\"",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "TRY_CATCH_CHANGE",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[352,361], C[4,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "try {\n  logger.info(\"Flow was force cancelled cleaning up.\");\n  for (  JobRunner activeRunner : activeJobRunners) {\n    activeRunner.cancel();\n  }\n  flow.killNode(System.currentTimeMillis());\n}\n catch (Exception e) {\n  logger.error(e);\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_TRYSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[352,361], C[4,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "try {\n  logger.info(\"Flow was force cancelled cleaning up.\");\n  for (  JobRunner activeRunner : activeJobRunners) {\n    activeRunner.cancel();\n  }\n  flow.killNode(System.currentTimeMillis());\n}\n catch (Exception e) {\n  logger.error(e);\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[697,697], C[5,25]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.setStartTime(-1)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[658,658], C[6,26]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(String)>>>node[653,662]"
                },
                "Code": "node.setStartTime(-1)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[671,671], C[5,56]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "ExecutableNode node=flow.getExecutableNode(jobId);\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase).info(UNKNOWN)",
                "Local": "L[693,693], C[17,92]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "\"Re-enabling job \" + node.getPrintableId() + \" attempt \"+ node.getAttempt()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String).info(UNKNOWN)",
                "Local": "L[681,681], C[18,84]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>node[671,687]"
                },
                "Code": "\"Re-enabling job \" + node.getId() + \" attempt \"+ node.getAttempt()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[819,819], C[6,49]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>base[797,822]"
                },
                "Code": "finalizeFlowIfFinished(base.getParentFlow())",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[672,675], C[23,5]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "{\n  logger.error(\"Job \" + jobId + \" doesn't exist in execution \"+ flow.getExecutionId()+ \". Cannot retry.\");\n  continue;\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[677,682], C[52,5]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[41,845]"
                },
                "Code": "{\n  node.resetForRetry();\n  reEnableDependents(node);\n  logger.info(\"Re-enabling job \" + node.getId() + \" attempt \"+ node.getAttempt());\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ELSE_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[683,686], C[10,5]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[41,845]"
                },
                "Code": "{\n  logger.error(\"Cannot retry job \" + jobId + \" since it hasn't run yet. User \"+ user);\n  continue;\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[692,695], C[69,5]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>isFailureFound[689,706]"
                },
                "Code": "{\n  isFailureFound=true;\n  break;\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[698,702], C[25,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "{\n  flow.setStatus(Status.RUNNING);\n  flow.setUpdateTime(System.currentTimeMillis());\n  flowFailed=false;\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[685,689], C[44,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "{\n  if (node.getStatus() == Status.FAILED || node.getStatus() == Status.FAILED_FINISHING || node.getStatus() == Status.KILLED) {\n    retryFailures((ExecutableFlowBase)node);\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[686,688], C[128,5]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "{\n  retryFailures((ExecutableFlowBase)node);\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[691,695], C[43,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "{\n  node.resetForRetry();\n  logger.info(\"Re-enabling job \" + node.getPrintableId() + \" attempt \"+ node.getAttempt());\n  reEnableDependents(node);\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[696,700], C[48,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "{\n  node.setStartTime(-1);\n  node.setEndTime(-1);\n  node.setStatus(Status.READY);\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[701,705], C[58,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "{\n  node.setStartTime(-1);\n  node.setEndTime(-1);\n  node.setStatus(Status.READY);\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener",
                "Local": "L[797,822], C[3,3]",
                "Detail": null,
                "Code": "private void finalizeFlowIfFinished(ExecutableFlowBase base){\n  if (base == flow) {\n    return;\n  }\n  if (base.isFlowFinished()) {\n    Props previousOutput=null;\n    for (    String end : base.getEndNodes()) {\n      ExecutableNode node=base.getExecutableNode(end);\n      Props output=node.getOutputProps();\n      if (output != null) {\n        output=Props.clone(output);\n        output.setParent(previousOutput);\n        previousOutput=output;\n      }\n    }\n    base.setOutputProps(previousOutput);\n    finalizeFlow(base);\n    if (base.getParentFlow() != null) {\n      finalizeFlowIfFinished(base.getParentFlow());\n    }\n  }\n}\n",
                "relationType": "CALL_TARGET",
                "distance": 5,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[698,698], C[5,23]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.setEndTime(-1)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[659,659], C[6,24]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(String)>>>node[653,662]"
                },
                "Code": "node.setEndTime(-1)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[694,694], C[5,28]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "reEnableDependents(node)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[680,680], C[6,29]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>node[671,687]"
                },
                "Code": "reEnableDependents(node)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_FieldAccess",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[406,406], C[23,31]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)>>>flow[405,421]"
                },
                "Code": "this.flow",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[419,419], C[46,61]",
                "Detail": null,
                "Code": "flow.getStatus()",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[366,366], C[37,52]",
                "Detail": null,
                "Code": "flow.getStatus()",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[696,696], C[13,28]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getStatus()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[657,657], C[14,29]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(String)>>>node[653,662]"
                },
                "Code": "node.getStatus()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[741,787], C[51,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "{\nsynchronized (mainSyncObj) {\n    ExecutableNode node=runner.getNode();\n    activeJobRunners.remove(node.getId());\n    String id=node.getPrintableId(\":\");\n    logger.info(\"Job Finished \" + id + \" with status \"+ node.getStatus());\n    if (node.getOutputProps() != null) {\n      logger.info(\"Job \" + id + \" had output props.\");\n    }\n    if (node.getStatus() == Status.FAILED) {\n      if (!runner.isCancelled() && runner.getRetries() > node.getAttempt()) {\n        logger.info(\"Job \" + id + \" will be retried. Attempt \"+ node.getAttempt()+ \" of \"+ runner.getRetries());\n        node.setDelayedExecution(runner.getRetryBackoff());\n        node.resetForRetry();\n      }\n else {\n        if (!runner.isCancelled() && runner.getRetries() > 0) {\n          logger.info(\"Job \" + id + \" has run out of retry attempts\");\n          node.setDelayedExecution(0);\n        }\n        flowFailed=true;\n        ExecutionOptions options=flow.getExecutionOptions();\n        if (flow.getStatus() != Status.KILLED && flow.getStatus() != Status.FAILED) {\n          propagateStatus(node.getParentFlow(),Status.FAILED_FINISHING);\n          if (options.getFailureAction() == FailureAction.CANCEL_ALL && !flowCancelled) {\n            logger.info(\"Flow failed. Failure option is Cancel All. Stopping execution.\");\n            cancel();\n          }\n        }\n      }\n    }\n    finalizeFlowIfFinished(node.getParentFlow());\n    updateFlow();\n    interrupt();\n    fireEventListeners(event);\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[747,750], C[43,6]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[41,845]"
                },
                "Code": "{\n  logger.info(\"Job \" + node.getId() + \" had output props.\");\n  jobOutputProps.put(node.getId(),runner.getOutputProps());\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[752,780], C[45,6]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "{\n  if (!runner.isCancelled() && runner.getRetries() > node.getAttempt()) {\n    logger.info(\"Job \" + id + \" will be retried. Attempt \"+ node.getAttempt()+ \" of \"+ runner.getRetries());\n    node.setDelayedExecution(runner.getRetryBackoff());\n    node.resetForRetry();\n  }\n else {\n    if (!runner.isCancelled() && runner.getRetries() > 0) {\n      logger.info(\"Job \" + id + \" has run out of retry attempts\");\n      node.setDelayedExecution(0);\n    }\n    flowFailed=true;\n    ExecutionOptions options=flow.getExecutionOptions();\n    if (flow.getStatus() != Status.KILLED && flow.getStatus() != Status.FAILED) {\n      propagateStatus(node.getParentFlow(),Status.FAILED_FINISHING);\n      if (options.getFailureAction() == FailureAction.CANCEL_ALL && !flowCancelled) {\n        logger.info(\"Flow failed. Failure option is Cancel All. Stopping execution.\");\n        cancel();\n      }\n    }\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[754,758], C[77,7]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "{\n  logger.info(\"Job \" + id + \" will be retried. Attempt \"+ node.getAttempt()+ \" of \"+ runner.getRetries());\n  node.setDelayedExecution(runner.getRetryBackoff());\n  node.resetForRetry();\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_EXISTING_ELSE_BLOCK",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[759,779], C[12,7]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "{\n  if (!runner.isCancelled() && runner.getRetries() > 0) {\n    logger.info(\"Job \" + id + \" has run out of retry attempts\");\n    node.setDelayedExecution(0);\n  }\n  flowFailed=true;\n  ExecutionOptions options=flow.getExecutionOptions();\n  if (flow.getStatus() != Status.KILLED && flow.getStatus() != Status.FAILED) {\n    propagateStatus(node.getParentFlow(),Status.FAILED_FINISHING);\n    if (options.getFailureAction() == FailureAction.CANCEL_ALL && !flowCancelled) {\n      logger.info(\"Flow failed. Failure option is Cancel All. Stopping execution.\");\n      cancel();\n    }\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[760,764], C[62,8]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "{\n  logger.info(\"Job \" + id + \" has run out of retry attempts\");\n  node.setDelayedExecution(0);\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[771,778], C[84,8]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "{\n  propagateStatus(node.getParentFlow(),Status.FAILED_FINISHING);\n  if (options.getFailureAction() == FailureAction.CANCEL_ALL && !flowCancelled) {\n    logger.info(\"Flow failed. Failure option is Cancel All. Stopping execution.\");\n    cancel();\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[748,750], C[41,6]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "{\n  logger.info(\"Job \" + id + \" had output props.\");\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_SYNCHRONIZEDSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[669,706], C[3,3]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "synchronized (mainSyncObj) {\n  for (  String jobId : jobIds) {\n    ExecutableNode node=flow.getExecutableNode(jobId);\n    if (node == null) {\n      logger.error(\"Job \" + jobId + \" doesn't exist in execution \"+ flow.getExecutionId()+ \". Cannot retry.\");\n      continue;\n    }\n    if (Status.isStatusFinished(node.getStatus())) {\n      node.resetForRetry();\n      reEnableDependents(node);\n      logger.info(\"Re-enabling job \" + node.getId() + \" attempt \"+ node.getAttempt());\n    }\n else {\n      logger.error(\"Cannot retry job \" + jobId + \" since it hasn't run yet. User \"+ user);\n      continue;\n    }\n  }\n  boolean isFailureFound=false;\n  for (  ExecutableNode node : flow.getExecutableNodes()) {\n    Status nodeStatus=node.getStatus();\n    if (nodeStatus == Status.FAILED || nodeStatus == Status.KILLED) {\n      isFailureFound=true;\n      break;\n    }\n  }\n  if (!isFailureFound) {\n    flow.setStatus(Status.RUNNING);\n    flow.setUpdateTime(System.currentTimeMillis());\n    flowFailed=false;\n  }\n  updateFlow();\n  interrupt();\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_ENHANCEDFORSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[354,356], C[5,5]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.runFlow()>>>activeRunner[354,356]"
                },
                "Code": "for (JobRunner activeRunner : activeJobRunners) {\n  activeRunner.cancel();\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[672,672], C[4,22]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[57,879]"
                },
                "Code": "retryFailures(flow)",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[805,805], C[21,38]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>base[797,822]"
                },
                "Code": "base.getEndNodes()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[815,815], C[5,39]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>base[797,822]"
                },
                "Code": "base.setOutputProps(previousOutput)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[781,781], C[29,48]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "node.getParentFlow()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).getId()",
                "Local": "L[746,746], C[36,47]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "node.getId()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_SWITCHSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[408,420], C[3,3]",
                "Detail": null,
                "Code": "switch (flow.getStatus()) {\ncase FAILED_FINISHING:  logger.info(\"Setting flow \" + id + \"status to Failed.\");\nflow.setStatus(Status.FAILED);\ncase FAILED:case KILLED:case FAILED_SUCCEEDED:logger.info(\"Flow \" + id + \"is set to \"+ flow.getStatus().toString());\nbreak;\ndefault:flow.setStatus(Status.SUCCEEDED);\nlogger.info(\"Flow \" + id + \"is set to \"+ flow.getStatus().toString());\n}\n",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_SWITCHSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[355,367], C[4,4]",
                "Detail": null,
                "Code": "switch (flow.getStatus()) {\ncase FAILED_FINISHING:  logger.info(\"Setting flow status to Failed.\");\nflow.setStatus(Status.FAILED);\ncase FAILED:case KILLED:case FAILED_SUCCEEDED:logger.info(\"Flow is set to \" + flow.getStatus().toString());\nbreak;\ndefault:flow.setStatus(Status.SUCCEEDED);\nlogger.info(\"Flow is set to \" + flow.getStatus().toString());\n}\n",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[406,406], C[3,67]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)>>>flow[405,421]"
                },
                "Code": "String id=flow == this.flow ? \"\" : flow.getPrintableId() + \" \";\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[687,687], C[6,44]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "retryFailures((ExecutableFlowBase)node)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[704,704], C[5,32]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.setStatus(Status.READY)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[406,406], C[40,60]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)>>>flow[405,421]"
                },
                "Code": "flow.getPrintableId()",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String).getExecutableNode(UNKNOWN)",
                "Local": "L[671,671], C[27,55]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "flow.getExecutableNode(jobId)",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[419,419], C[4,73]",
                "Detail": null,
                "Code": "logger.info(\"Flow \" + id + \"is set to \"+ flow.getStatus().toString())",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[366,366], C[5,64]",
                "Detail": null,
                "Code": "logger.info(\"Flow is set to \" + flow.getStatus().toString())",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[701,701], C[13,28]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getStatus()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String).getStatus()",
                "Local": "L[677,677], C[33,48]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>node[671,687]"
                },
                "Code": "node.getStatus()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String).getStatus()",
                "Local": "L[691,691], C[25,40]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>node[690,696]"
                },
                "Code": "node.getStatus()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[811,811], C[7,38]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>output[808,814]"
                },
                "Code": "output.setParent(previousOutput)",
                "relationType": "VAR_RELATED",
                "distance": 6,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InstanceofExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[685,685], C[8,41]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node instanceof ExecutableFlowBase",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_SWITCHCASE",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[413,413], C[3,14]",
                "Detail": null,
                "Code": "case KILLED:",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_SWITCHCASE",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[360,360], C[4,15]",
                "Detail": null,
                "Code": "case KILLED:",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[408,408], C[10,25]",
                "Detail": null,
                "Code": "flow.getStatus()",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[355,355], C[11,26]",
                "Detail": null,
                "Code": "flow.getStatus()",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_SWITCHCASE",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[412,412], C[3,14]",
                "Detail": null,
                "Code": "case FAILED:",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_SWITCHCASE",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[359,359], C[4,15]",
                "Detail": null,
                "Code": "case FAILED:",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_SWITCHCASE",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[414,414], C[3,24]",
                "Detail": null,
                "Code": "case FAILED_SUCCEEDED:",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_SWITCHCASE",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[361,361], C[4,25]",
                "Detail": null,
                "Code": "case FAILED_SUCCEEDED:",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_BREAKSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[416,416], C[4,9]",
                "Detail": null,
                "Code": "break;\n",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_BREAKSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[363,363], C[5,10]",
                "Detail": null,
                "Code": "break;\n",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_SWITCHCASE",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[409,409], C[3,24]",
                "Detail": null,
                "Code": "case FAILED_FINISHING:",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_SWITCHCASE",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[356,356], C[4,25]",
                "Detail": null,
                "Code": "case FAILED_FINISHING:",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_SWITCHCASE",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[417,417], C[3,10]",
                "Detail": null,
                "Code": "default:",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_SWITCHCASE",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[364,364], C[4,11]",
                "Detail": null,
                "Code": "default:",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[411,411], C[4,32]",
                "Detail": null,
                "Code": "flow.setStatus(Status.FAILED)",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[358,358], C[5,33]",
                "Detail": null,
                "Code": "flow.setStatus(Status.FAILED)",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String).error(UNKNOWN)",
                "Local": "L[684,684], C[19,88]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>user[668,707]"
                },
                "Code": "\"Cannot retry job \" + jobId + \" since it hasn't run yet. User \"+ user",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[675,675], C[4,49]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[57,879]"
                },
                "Code": "flow.setUpdateTime(System.currentTimeMillis())",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[700,700], C[5,50]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "flow.setUpdateTime(System.currentTimeMillis())",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[674,674], C[4,33]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[57,879]"
                },
                "Code": "flow.setStatus(Status.RUNNING)",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[699,699], C[5,34]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "flow.setStatus(Status.RUNNING)",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[406,406], C[15,31]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)>>>flow[405,421]"
                },
                "Code": "flow == this.flow",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[406,406], C[40,66]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)>>>flow[405,421]"
                },
                "Code": "flow.getPrintableId() + \" \"",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_EXPRESSIONSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[810,810], C[7,35]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>output[808,814]"
                },
                "Code": "output=Props.clone(output);\n",
                "relationType": "VAR_RELATED",
                "distance": 6,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_EXPRESSIONSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[812,812], C[7,30]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>output[808,814]"
                },
                "Code": "previousOutput=output;\n",
                "relationType": "VAR_RELATED",
                "distance": 6,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[677,677], C[9,49]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>node[671,687]"
                },
                "Code": "Status.isStatusFinished(node.getStatus())",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[804,804], C[5,32]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>previousOutput[804,821]"
                },
                "Code": "Props previousOutput=null;\n",
                "relationType": "VAR_RELATED",
                "distance": 6,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_ENHANCEDFORSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[805,814], C[5,5]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>base[797,822]"
                },
                "Code": "for (String end : base.getEndNodes()) {\n  ExecutableNode node=base.getExecutableNode(end);\n  Props output=node.getOutputProps();\n  if (output != null) {\n    output=Props.clone(output);\n    output.setParent(previousOutput);\n    previousOutput=output;\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[693,693], C[38,58]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getPrintableId()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[681,681], C[39,50]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>node[671,687]"
                },
                "Code": "node.getId()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[693,693], C[76,92]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getAttempt()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[681,681], C[68,84]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>node[671,687]"
                },
                "Code": "node.getAttempt()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[672,672], C[9,20]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>node[671,687]"
                },
                "Code": "node == null",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase).finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[819,819], C[29,48]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>base[797,822]"
                },
                "Code": "base.getParentFlow()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[405,405], C[2,8]",
                "Detail": null,
                "Code": "private",
                "relationType": "SIGNATURE",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[781,781], C[6,49]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "finalizeFlowIfFinished(node.getParentFlow())",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "VAR_TYPE_CHANGED",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[90,90], C[2,114]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>activeJobRunners[57,879]"
                },
                "Code": "private Set<JobRunner> activeJobRunners=Collections.newSetFromMap(new ConcurrentHashMap<JobRunner,Boolean>());\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_FieldDeclaration",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[90,90], C[2,114]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>activeJobRunners[57,879]"
                },
                "Code": "private Set<JobRunner> activeJobRunners=Collections.newSetFromMap(new ConcurrentHashMap<JobRunner,Boolean>());\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ACCESS_REDUCED",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[683,707], C[2,2]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "private void retryFailures(ExecutableFlowBase flow){\n  for (  ExecutableNode node : flow.getExecutableNodes()) {\n    if (node instanceof ExecutableFlowBase) {\n      if (node.getStatus() == Status.FAILED || node.getStatus() == Status.FAILED_FINISHING || node.getStatus() == Status.KILLED) {\n        retryFailures((ExecutableFlowBase)node);\n      }\n    }\n    if (node.getStatus() == Status.FAILED) {\n      node.resetForRetry();\n      logger.info(\"Re-enabling job \" + node.getPrintableId() + \" attempt \"+ node.getAttempt());\n      reEnableDependents(node);\n    }\n else     if (node.getStatus() == Status.KILLED) {\n      node.setStartTime(-1);\n      node.setEndTime(-1);\n      node.setStatus(Status.READY);\n    }\n else     if (node.getStatus() == Status.FAILED_FINISHING) {\n      node.setStartTime(-1);\n      node.setEndTime(-1);\n      node.setStatus(Status.READY);\n    }\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_PARAMETER",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[668,668], C[45,50]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "public void retryJobs(List<String> jobIds,String user){\nsynchronized (mainSyncObj) {\n    for (    String jobId : jobIds) {\n      ExecutableNode node=flow.getExecutableNode(jobId);\n      if (node == null) {\n        logger.error(\"Job \" + jobId + \" doesn't exist in execution \"+ flow.getExecutionId()+ \". Cannot retry.\");\n        continue;\n      }\n      if (Status.isStatusFinished(node.getStatus())) {\n        node.resetForRetry();\n        reEnableDependents(node);\n        logger.info(\"Re-enabling job \" + node.getId() + \" attempt \"+ node.getAttempt());\n      }\n else {\n        logger.error(\"Cannot retry job \" + jobId + \" since it hasn't run yet. User \"+ user);\n        continue;\n      }\n    }\n    boolean isFailureFound=false;\n    for (    ExecutableNode node : flow.getExecutableNodes()) {\n      Status nodeStatus=node.getStatus();\n      if (nodeStatus == Status.FAILED || nodeStatus == Status.KILLED) {\n        isFailureFound=true;\n        break;\n      }\n    }\n    if (!isFailureFound) {\n      flow.setStatus(Status.RUNNING);\n      flow.setUpdateTime(System.currentTimeMillis());\n      flowFailed=false;\n    }\n    updateFlow();\n    interrupt();\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_PARAMETER",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[668,668], C[24,35]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "public void retryJobs(List<String> jobIds,String user){\nsynchronized (mainSyncObj) {\n    for (    String jobId : jobIds) {\n      ExecutableNode node=flow.getExecutableNode(jobId);\n      if (node == null) {\n        logger.error(\"Job \" + jobId + \" doesn't exist in execution \"+ flow.getExecutionId()+ \". Cannot retry.\");\n        continue;\n      }\n      if (Status.isStatusFinished(node.getStatus())) {\n        node.resetForRetry();\n        reEnableDependents(node);\n        logger.info(\"Re-enabling job \" + node.getId() + \" attempt \"+ node.getAttempt());\n      }\n else {\n        logger.error(\"Cannot retry job \" + jobId + \" since it hasn't run yet. User \"+ user);\n        continue;\n      }\n    }\n    boolean isFailureFound=false;\n    for (    ExecutableNode node : flow.getExecutableNodes()) {\n      Status nodeStatus=node.getStatus();\n      if (nodeStatus == Status.FAILED || nodeStatus == Status.KILLED) {\n        isFailureFound=true;\n        break;\n      }\n    }\n    if (!isFailureFound) {\n      flow.setStatus(Status.RUNNING);\n      flow.setUpdateTime(System.currentTimeMillis());\n      flowFailed=false;\n    }\n    updateFlow();\n    interrupt();\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_PARAMETER",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[683,683], C[29,46]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "private void retryFailures(ExecutableFlowBase flow){\n  for (  ExecutableNode node : flow.getExecutableNodes()) {\n    if (node instanceof ExecutableFlowBase) {\n      if (node.getStatus() == Status.FAILED || node.getStatus() == Status.FAILED_FINISHING || node.getStatus() == Status.KILLED) {\n        retryFailures((ExecutableFlowBase)node);\n      }\n    }\n    if (node.getStatus() == Status.FAILED) {\n      node.resetForRetry();\n      logger.info(\"Re-enabling job \" + node.getPrintableId() + \" attempt \"+ node.getAttempt());\n      reEnableDependents(node);\n    }\n else     if (node.getStatus() == Status.KILLED) {\n      node.setStartTime(-1);\n      node.setEndTime(-1);\n      node.setStatus(Status.READY);\n    }\n else     if (node.getStatus() == Status.FAILED_FINISHING) {\n      node.setStartTime(-1);\n      node.setEndTime(-1);\n      node.setStatus(Status.READY);\n    }\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "RENAME_ELEMENT",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[683,707], C[2,2]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "private void retryFailures(ExecutableFlowBase flow){\n  for (  ExecutableNode node : flow.getExecutableNodes()) {\n    if (node instanceof ExecutableFlowBase) {\n      if (node.getStatus() == Status.FAILED || node.getStatus() == Status.FAILED_FINISHING || node.getStatus() == Status.KILLED) {\n        retryFailures((ExecutableFlowBase)node);\n      }\n    }\n    if (node.getStatus() == Status.FAILED) {\n      node.resetForRetry();\n      logger.info(\"Re-enabling job \" + node.getPrintableId() + \" attempt \"+ node.getAttempt());\n      reEnableDependents(node);\n    }\n else     if (node.getStatus() == Status.KILLED) {\n      node.setStartTime(-1);\n      node.setEndTime(-1);\n      node.setStatus(Status.READY);\n    }\n else     if (node.getStatus() == Status.FAILED_FINISHING) {\n      node.setStartTime(-1);\n      node.setEndTime(-1);\n      node.setStatus(Status.READY);\n    }\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_FieldDeclaration",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[73,73], C[2,35]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[57,879]"
                },
                "Code": "private final ExecutableFlow flow;\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_FieldDeclaration",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[67,67], C[2,74]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>jobOutputProps[41,845]"
                },
                "Code": "private Map<String,Props> jobOutputProps=new HashMap<String,Props>();\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[816,816], C[5,22]",
                "Detail": null,
                "Code": "finalizeFlow(base)",
                "relationType": "CALL_TARGET",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[746,746], C[18,41]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "node.getPrintableId(\":\")",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).getId()",
                "Local": "L[749,749], C[26,37]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "node.getId()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[747,747], C[10,40]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>runner[736,788]"
                },
                "Code": "runner.getOutputProps() != null",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_SYNCHRONIZEDSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[369,371], C[3,3]",
                "Detail": null,
                "Code": "synchronized (mainSyncObj) {\n  finalizeFlow(flow);\n}\n",
                "relationType": "CALL_TARGET",
                "distance": 3,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[370,370], C[4,21]",
                "Detail": null,
                "Code": "finalizeFlow(flow)",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[418,418], C[4,35]",
                "Detail": null,
                "Code": "flow.setStatus(Status.SUCCEEDED)",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[365,365], C[5,36]",
                "Detail": null,
                "Code": "flow.setStatus(Status.SUCCEEDED)",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[693,693], C[5,93]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "logger.info(\"Re-enabling job \" + node.getPrintableId() + \" attempt \"+ node.getAttempt())",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[681,681], C[6,85]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[41,845]"
                },
                "Code": "logger.info(\"Re-enabling job \" + node.getId() + \" attempt \"+ node.getAttempt())",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).propagateStatus(ExecutableFlowBase, Status)",
                "Local": "L[772,772], C[25,44]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "node.getParentFlow()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).info(UNKNOWN)",
                "Local": "L[763,763], C[30,41]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "node.getId()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "METHOD_CALL_ARGUMENTS_CHANGE",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).propagateStatus(ExecutableFlowBase, Status)",
                "Local": "L[772,772], C[9,70]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "propagateStatus(node.getParentFlow(),Status.FAILED_FINISHING)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[808,808], C[21,41]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>node[806,814]"
                },
                "Code": "node.getOutputProps()",
                "relationType": "VAR_RELATED",
                "distance": 6,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[654,656], C[44,5]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(String)>>>failures[652,665]"
                },
                "Code": "{\n  failures.add(node.getId());\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[657,661], C[49,5]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(String)>>>node[653,662]"
                },
                "Code": "{\n  node.setStartTime(-1);\n  node.setEndTime(-1);\n  node.setStatus(Status.READY);\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "TRY_CATCH_CHANGE",
                "Method": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode)",
                "Local": "L[506,511], C[4,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "try {\n  executorService.submit(runner);\n  activeJobRunners.add(runner);\n}\n catch (RejectedExecutionException e) {\n  logger.error(e);\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_TRYSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode)",
                "Local": "L[506,511], C[4,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "try {\n  executorService.submit(runner);\n  activeJobRunners.add(runner);\n}\n catch (RejectedExecutionException e) {\n  logger.error(e);\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_ENHANCEDFORSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.cancel()",
                "Local": "L[658,660], C[4,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.cancel()>>>runner[658,660]"
                },
                "Code": "for (JobRunner runner : activeJobRunners) {\n  runner.cancel();\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[357,357], C[5,49]",
                "Detail": null,
                "Code": "logger.info(\"Setting flow status to Failed.\")",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "METHOD_CALL_ARGUMENTS_CHANGE",
                "Method": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode).info(UNKNOWN)",
                "Local": "L[500,500], C[4,65]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "logger.info(\"Starting subflow \" + node.getPrintableId() + \".\")",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode).info(UNKNOWN)",
                "Local": "L[500,500], C[16,64]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode)>>>node[492,513]"
                },
                "Code": "\"Starting subflow \" + node.getPrintableId() + \".\"",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[748,748], C[7,63]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[41,845]"
                },
                "Code": "logger.info(\"Job \" + node.getId() + \" had output props.\")",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[696,696], C[13,45]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getStatus() == Status.KILLED",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[657,657], C[14,46]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(String)>>>node[653,662]"
                },
                "Code": "node.getStatus() == Status.KILLED",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[664,664], C[4,28]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(String)>>>failures[652,665]"
                },
                "Code": "retryJobs(failures,user)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_SYNCHRONIZEDSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[670,680], C[3,3]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "synchronized (mainSyncObj) {\n  logger.info(\"Retrying failures invoked by \" + user);\n  retryFailures(flow);\n  flow.setStatus(Status.RUNNING);\n  flow.setUpdateTime(System.currentTimeMillis());\n  flowFailed=false;\n  updateFlow();\n  interrupt();\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase).info(UNKNOWN)",
                "Local": "L[410,410], C[16,57]",
                "Detail": null,
                "Code": "\"Setting flow \" + id + \"status to Failed.\"",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).put(UNKNOWN, UNKNOWN)",
                "Local": "L[749,749], C[40,62]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>runner[736,788]"
                },
                "Code": "runner.getOutputProps()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[747,747], C[10,32]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>runner[736,788]"
                },
                "Code": "runner.getOutputProps()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[809,809], C[10,23]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)>>>output[808,814]"
                },
                "Code": "output != null",
                "relationType": "VAR_RELATED",
                "distance": 6,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode)",
                "Local": "L[496,501], C[43,3]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "{\n  node.setStatus(Status.RUNNING);\n  node.setStartTime(System.currentTimeMillis());\n  logger.info(\"Starting subflow \" + node.getPrintableId() + \".\");\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_EXISTING_ELSE_BLOCK",
                "Method": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode)",
                "Local": "L[502,512], C[8,3]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "{\n  node.setStatus(Status.QUEUED);\n  JobRunner runner=createJobRunner(node);\n  logger.info(\"Submitting job \" + node.getPrintableId() + \" to run.\");\n  try {\n    executorService.submit(runner);\n    activeJobRunners.add(runner);\n  }\n catch (  RejectedExecutionException e) {\n    logger.error(e);\n  }\n  ;\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[686,686], C[9,41]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getStatus() == Status.FAILED",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[686,686], C[93,125]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getStatus() == Status.KILLED",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[686,686], C[46,88]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getStatus() == Status.FAILED_FINISHING",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[691,691], C[8,40]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getStatus() == Status.FAILED",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[654,654], C[9,41]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(String)>>>node[653,662]"
                },
                "Code": "node.getStatus() == Status.FAILED",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[692,692], C[9,35]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>nodeStatus[691,696]"
                },
                "Code": "nodeStatus == Status.FAILED",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[692,692], C[40,66]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>nodeStatus[691,696]"
                },
                "Code": "nodeStatus == Status.KILLED",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[686,686], C[46,61]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getStatus()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String).getStatus()",
                "Local": "L[691,691], C[25,40]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>node[690,696]"
                },
                "Code": "node.getStatus()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_EXPRESSIONSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[693,693], C[6,27]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>isFailureFound[689,706]"
                },
                "Code": "isFailureFound=true;\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[702,702], C[5,25]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.setStartTime(-1)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[415,415], C[4,73]",
                "Detail": null,
                "Code": "logger.info(\"Flow \" + id + \"is set to \"+ flow.getStatus().toString())",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[362,362], C[5,64]",
                "Detail": null,
                "Code": "logger.info(\"Flow is set to \" + flow.getStatus().toString())",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ENHANCEDFORSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[670,687], C[4,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "for (String jobId : jobIds) {\n  ExecutableNode node=flow.getExecutableNode(jobId);\n  if (node == null) {\n    logger.error(\"Job \" + jobId + \" doesn't exist in execution \"+ flow.getExecutionId()+ \". Cannot retry.\");\n    continue;\n  }\n  if (Status.isStatusFinished(node.getStatus())) {\n    node.resetForRetry();\n    reEnableDependents(node);\n    logger.info(\"Re-enabling job \" + node.getId() + \" attempt \"+ node.getAttempt());\n  }\n else {\n    logger.error(\"Cannot retry job \" + jobId + \" since it hasn't run yet. User \"+ user);\n    continue;\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[689,689], C[4,34]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>isFailureFound[689,706]"
                },
                "Code": "boolean isFailureFound=false;\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ENHANCEDFORSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[690,696], C[4,4]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "for (ExecutableNode node : flow.getExecutableNodes()) {\n  Status nodeStatus=node.getStatus();\n  if (nodeStatus == Status.FAILED || nodeStatus == Status.KILLED) {\n    isFailureFound=true;\n    break;\n  }\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "METHOD_CALL_ARGUMENTS_CHANGE",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).info(UNKNOWN)",
                "Local": "L[747,747], C[6,75]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "logger.info(\"Job Finished \" + id + \" with status \"+ node.getStatus())",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).info(UNKNOWN)",
                "Local": "L[747,747], C[18,74]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "\"Job Finished \" + id + \" with status \"+ node.getStatus()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "METHOD_CALL_ARGUMENTS_CHANGE",
                "Method": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode).add(UNKNOWN)",
                "Local": "L[508,508], C[5,32]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode)>>>runner[504,512]"
                },
                "Code": "activeJobRunners.add(runner)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[749,749], C[7,63]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>runner[736,788]"
                },
                "Code": "jobOutputProps.put(node.getId(),runner.getOutputProps())",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[686,686], C[9,24]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getStatus()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.collectOutputProps(ExecutableNode)",
                "Local": "L[655,655], C[19,30]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(String)>>>node[653,662]"
                },
                "Code": "node.getId()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.collectOutputProps(ExecutableNode)",
                "Local": "L[655,655], C[6,31]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(String)>>>failures[652,665]"
                },
                "Code": "failures.add(node.getId())",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.collectOutputProps(ExecutableNode)",
                "Local": "L[546,546], C[19,48]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>jobOutputProps[41,845]"
                },
                "Code": "jobOutputProps.get(dependency)",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.collectOutputProps(ExecutableNode)",
                "Local": "L[749,749], C[26,37]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "node.getId()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.collectOutputProps(ExecutableNode)",
                "Local": "L[746,746], C[36,47]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "node.getId()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.collectOutputProps(ExecutableNode)",
                "Local": "L[763,763], C[30,41]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "node.getId()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "azkaban.execapp.FlowRunner.FieldDeclaration",
                "Local": "L[90,90], C[25,113]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>activeJobRunners[57,879]"
                },
                "Code": "activeJobRunners=Collections.newSetFromMap(new ConcurrentHashMap<JobRunner,Boolean>())",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_SYNCHRONIZEDSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[742,786], C[5,5]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "synchronized (mainSyncObj) {\n  ExecutableNode node=runner.getNode();\n  activeJobRunners.remove(node.getId());\n  String id=node.getPrintableId(\":\");\n  logger.info(\"Job Finished \" + id + \" with status \"+ node.getStatus());\n  if (node.getOutputProps() != null) {\n    logger.info(\"Job \" + id + \" had output props.\");\n  }\n  if (node.getStatus() == Status.FAILED) {\n    if (!runner.isCancelled() && runner.getRetries() > node.getAttempt()) {\n      logger.info(\"Job \" + id + \" will be retried. Attempt \"+ node.getAttempt()+ \" of \"+ runner.getRetries());\n      node.setDelayedExecution(runner.getRetryBackoff());\n      node.resetForRetry();\n    }\n else {\n      if (!runner.isCancelled() && runner.getRetries() > 0) {\n        logger.info(\"Job \" + id + \" has run out of retry attempts\");\n        node.setDelayedExecution(0);\n      }\n      flowFailed=true;\n      ExecutionOptions options=flow.getExecutionOptions();\n      if (flow.getStatus() != Status.KILLED && flow.getStatus() != Status.FAILED) {\n        propagateStatus(node.getParentFlow(),Status.FAILED_FINISHING);\n        if (options.getFailureAction() == FailureAction.CANCEL_ALL && !flowCancelled) {\n          logger.info(\"Flow failed. Failure option is Cancel All. Stopping execution.\");\n          cancel();\n        }\n      }\n    }\n  }\n  finalizeFlowIfFinished(node.getParentFlow());\n  updateFlow();\n  interrupt();\n  fireEventListeners(event);\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[701,701], C[13,55]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getStatus() == Status.FAILED_FINISHING",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_ConditionalExpression",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[406,406], C[15,66]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)>>>flow[405,421]"
                },
                "Code": "flow == this.flow ? \"\" : flow.getPrintableId() + \" \"",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[673,673], C[6,110]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "logger.error(\"Job \" + jobId + \" doesn't exist in execution \"+ flow.getExecutionId()+ \". Cannot retry.\")",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[673,673], C[69,89]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "flow.getExecutionId()",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[691,691], C[8,23]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getStatus()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[654,654], C[9,24]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(String)>>>node[653,662]"
                },
                "Code": "node.getStatus()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[351,364], C[22,3]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "{\n  try {\n    logger.info(\"Flow was force cancelled cleaning up.\");\n    for (    JobRunner activeRunner : activeJobRunners) {\n      activeRunner.cancel();\n    }\n    flow.killNode(System.currentTimeMillis());\n  }\n catch (  Exception e) {\n    logger.error(e);\n  }\n  updateFlow();\n}\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[684,684], C[29,53]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>flow[683,707]"
                },
                "Code": "flow.getExecutableNodes()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[690,690], C[30,54]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "flow.getExecutableNodes()",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[653,653], C[30,54]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "flow.getExecutableNodes()",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[774,774], C[9,47]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>flow[41,845]"
                },
                "Code": "flow.setStatus(Status.FAILED_FINISHING)",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[686,686], C[93,108]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)>>>node[684,706]"
                },
                "Code": "node.getStatus()",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[748,748], C[10,38]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "node.getOutputProps() != null",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[691,691], C[5,41]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)>>>node[690,696]"
                },
                "Code": "Status nodeStatus=node.getStatus();\n",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode).info(UNKNOWN)",
                "Local": "L[505,505], C[16,69]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode)>>>node[492,513]"
                },
                "Code": "\"Submitting job \" + node.getPrintableId() + \" to run.\"",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "METHOD_CALL_ARGUMENTS_CHANGE",
                "Method": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode).info(UNKNOWN)",
                "Local": "L[505,505], C[4,70]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner>>>logger[57,879]"
                },
                "Code": "logger.info(\"Submitting job \" + node.getPrintableId() + \" to run.\")",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event).info(UNKNOWN)",
                "Local": "L[748,748], C[19,62]",
                "Detail": {
                    "previousVar": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)>>>node[743,786]"
                },
                "Code": "\"Job \" + node.getId() + \" had output props.\"",
                "relationType": "VAR_RELATED",
                "distance": 2,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            }
        ],
        "notRelated": [
            {
                "Metric": "ADDED_PrefixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase).setEndTime(UNKNOWN)",
                "Local": "L[703,703], C[21,22]",
                "Detail": null,
                "Code": "-1",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.propagateStatus(ExecutableFlowBase, Status)",
                "Local": "L[791,791], C[4,25]",
                "Detail": null,
                "Code": "base.setStatus(status)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_Modifier",
                "Method": "azkaban.execapp.FlowRunner.FieldDeclaration",
                "Local": "L[67,67], C[2,8]",
                "Detail": null,
                "Code": "private",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ParameterizedType",
                "Method": "azkaban.execapp.FlowRunner.FieldDeclaration",
                "Local": "L[67,67], C[10,27]",
                "Detail": null,
                "Code": "Map<String,Props>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ParameterizedType",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[652,652], C[4,20]",
                "Detail": null,
                "Code": "ArrayList<String>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.propagateStatus(ExecutableFlowBase, Status)",
                "Local": "L[792,792], C[8,35]",
                "Detail": null,
                "Code": "base.getParentFlow() != null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_NullLiteral",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[818,818], C[33,36]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[799,801], C[22,4]",
                "Detail": null,
                "Code": "{\n  return;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[797,797], C[3,9]",
                "Detail": null,
                "Code": "private",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.propagateStatus(ExecutableFlowBase, Status)",
                "Local": "L[793,793], C[5,49]",
                "Detail": null,
                "Code": "propagateStatus(base.getParentFlow(),status)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_IF_CONDITION",
                "Method": "azkaban.execapp.FlowRunner.getImpliedStatus(ExecutableNode)",
                "Local": "L[522,524], C[95,3]",
                "Detail": null,
                "Code": "{\n  return Status.KILLED;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_IF_CONDITION",
                "Method": "azkaban.execapp.FlowRunner.getImpliedStatus(ExecutableNode)",
                "Local": "L[525,527], C[49,3]",
                "Detail": null,
                "Code": "{\n  return Status.DISABLED;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.getImpliedStatus(ExecutableNode)",
                "Local": "L[549,551], C[19,3]",
                "Detail": null,
                "Code": "{\n  return Status.KILLED;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.getImpliedStatus(ExecutableNode)",
                "Local": "L[554,556], C[44,3]",
                "Detail": null,
                "Code": "{\n  return Status.DISABLED;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_NullLiteral",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[748,748], C[35,38]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ParameterizedType",
                "Method": "azkaban.execapp.FlowRunner.HashMap<String,Props>",
                "Local": "L[67,67], C[50,71]",
                "Detail": null,
                "Code": "HashMap<String,Props>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[678,678], C[4,15]",
                "Detail": null,
                "Code": "updateFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[704,704], C[4,15]",
                "Detail": null,
                "Code": "updateFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode)",
                "Local": "L[487,487], C[5,40]",
                "Detail": null,
                "Code": "jobRunners.put(node.getId(),runner)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_NullLiteral",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[672,672], C[17,20]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_ParameterizedType",
                "Method": "azkaban.execapp.FlowRunner.ConcurrentHashMap<JobRunner,Boolean>",
                "Local": "L[90,90], C[74,110]",
                "Detail": null,
                "Code": "ConcurrentHashMap<JobRunner,Boolean>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ParameterizedType",
                "Method": "azkaban.execapp.FlowRunner.ConcurrentHashMap<String,JobRunner>",
                "Local": "L[75,75], C[56,91]",
                "Detail": null,
                "Code": "ConcurrentHashMap<String,JobRunner>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_PrefixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase).setEndTime(UNKNOWN)",
                "Local": "L[698,698], C[21,22]",
                "Detail": null,
                "Code": "-1",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_PrefixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String).setEndTime(UNKNOWN)",
                "Local": "L[659,659], C[22,23]",
                "Detail": null,
                "Code": "-1",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_BooleanLiteral",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[676,676], C[17,21]",
                "Detail": null,
                "Code": "false",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_BooleanLiteral",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[701,701], C[18,22]",
                "Detail": null,
                "Code": "false",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase)",
                "Local": "L[683,683], C[2,8]",
                "Detail": null,
                "Code": "private",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_Modifier",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[668,668], C[2,7]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener",
                "Local": "L[790,795], C[3,3]",
                "Detail": null,
                "Code": "private void propagateStatus(ExecutableFlowBase base,Status status){\n  base.setStatus(status);\n  if (base.getParentFlow() != null) {\n    propagateStatus(base.getParentFlow(),status);\n  }\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_BooleanLiteral",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[693,693], C[23,26]",
                "Detail": null,
                "Code": "true",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.runFlow()",
                "Local": "L[339,339], C[34,58]",
                "Detail": null,
                "Code": "activeJobRunners.values()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_PrefixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase).setStartTime(UNKNOWN)",
                "Local": "L[702,702], C[23,24]",
                "Detail": null,
                "Code": "-1",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.propagateStatus(ExecutableFlowBase, Status).propagateStatus(ExecutableFlowBase, Status)",
                "Local": "L[793,793], C[21,40]",
                "Detail": null,
                "Code": "base.getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_VARIABLE",
                "Method": "azkaban.execapp.FlowRunner.collectOutputProps(ExecutableNode)",
                "Local": "L[566,566], C[4,86]",
                "Detail": null,
                "Code": "Props output=node.getParentFlow().getExecutableNode(dependency).getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode).put(UNKNOWN, UNKNOWN)",
                "Local": "L[487,487], C[20,31]",
                "Detail": null,
                "Code": "node.getId()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "azkaban.execapp.FlowRunner.FieldDeclaration",
                "Local": "L[73,73], C[10,14]",
                "Detail": null,
                "Code": "final",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_RETURN_VALUE",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[800,800], C[5,11]",
                "Detail": null,
                "Code": "return;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ParameterizedType",
                "Method": "azkaban.execapp.FlowRunner.ConcurrentHashMap<String,JobRunner>",
                "Local": "L[74,74], C[50,85]",
                "Detail": null,
                "Code": "ConcurrentHashMap<String,JobRunner>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_IMPORT",
                "Method": "azkaban.execapp.CompilationUnit",
                "Local": "L[21,21], C[1,29]",
                "Detail": null,
                "Code": "import java.util.Collections;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_ImportDeclaration",
                "Method": "azkaban.execapp.CompilationUnit",
                "Local": "L[21,21], C[1,29]",
                "Detail": null,
                "Code": "import java.util.Collections;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_CLASS_INSTANCE",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[652,652], C[33,55]",
                "Detail": null,
                "Code": "new ArrayList<String>()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ClassInstanceCreation",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[652,652], C[33,55]",
                "Detail": null,
                "Code": "new ArrayList<String>()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_PrefixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(ExecutableFlowBase).setStartTime(UNKNOWN)",
                "Local": "L[697,697], C[23,24]",
                "Detail": null,
                "Code": "-1",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_PrefixExpression",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String).setStartTime(UNKNOWN)",
                "Local": "L[658,658], C[24,25]",
                "Detail": null,
                "Code": "-1",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "azkaban.execapp.FlowRunner.setNumJobThreads(int)",
                "Local": "L[140,140], C[2,7]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_Modifier",
                "Method": "azkaban.execapp.FlowRunner.FieldDeclaration",
                "Local": "L[74,74], C[2,8]",
                "Detail": null,
                "Code": "private",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_FieldDeclaration",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[74,74], C[2,88]",
                "Detail": null,
                "Code": "private Map<String,JobRunner> jobRunners=new ConcurrentHashMap<String,JobRunner>();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ParameterizedType",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String).SingleVariableDeclaration",
                "Local": "L[668,668], C[24,35]",
                "Detail": null,
                "Code": "List<String>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_CONTINUESTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[685,685], C[6,14]",
                "Detail": null,
                "Code": "continue;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_NullLiteral",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[809,809], C[20,23]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ClassInstanceCreation",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[75,75], C[52,93]",
                "Detail": null,
                "Code": "new ConcurrentHashMap<String,JobRunner>()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[90,90], C[44,113]",
                "Detail": null,
                "Code": "Collections.newSetFromMap(new ConcurrentHashMap<JobRunner,Boolean>())",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String)",
                "Local": "L[679,679], C[4,14]",
                "Detail": null,
                "Code": "interrupt()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[705,705], C[4,14]",
                "Detail": null,
                "Code": "interrupt()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.runExecutableNode(ExecutableNode).getId()",
                "Local": "L[488,488], C[26,37]",
                "Detail": null,
                "Code": "node.getId()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_CLASS_INSTANCE",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[67,67], C[46,73]",
                "Detail": null,
                "Code": "new HashMap<String,Props>()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ClassInstanceCreation",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[67,67], C[46,73]",
                "Detail": null,
                "Code": "new HashMap<String,Props>()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.cancel()",
                "Local": "L[638,638], C[28,52]",
                "Detail": null,
                "Code": "activeJobRunners.values()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_CLASS_INSTANCE",
                "Method": "azkaban.execapp.FlowRunner.newSetFromMap(Map<JobRunner,Boolean>)",
                "Local": "L[90,90], C[70,112]",
                "Detail": null,
                "Code": "new ConcurrentHashMap<JobRunner,Boolean>()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_CLASS_INSTANCE",
                "Method": "azkaban.execapp.FlowRunner.ConcurrentHashMap<String,JobRunner>",
                "Local": "L[75,75], C[52,93]",
                "Detail": null,
                "Code": "new ConcurrentHashMap<String,JobRunner>()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_ClassInstanceCreation",
                "Method": "azkaban.execapp.FlowRunner.newSetFromMap(Map<JobRunner,Boolean>)",
                "Local": "L[90,90], C[70,112]",
                "Detail": null,
                "Code": "new ConcurrentHashMap<JobRunner,Boolean>()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.propagateStatus(ExecutableFlowBase, Status)",
                "Local": "L[792,794], C[38,4]",
                "Detail": null,
                "Code": "{\n  propagateStatus(base.getParentFlow(),status);\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.propagateStatus(ExecutableFlowBase, Status)",
                "Local": "L[790,790], C[3,9]",
                "Detail": null,
                "Code": "private",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "azkaban.execapp.FlowRunner.collectOutputProps(ExecutableNode)",
                "Local": "L[566,566], C[10,85]",
                "Detail": null,
                "Code": "output=node.getParentFlow().getExecutableNode(dependency).getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String).setUpdateTime(UNKNOWN)",
                "Local": "L[675,675], C[23,48]",
                "Detail": null,
                "Code": "System.currentTimeMillis()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String).setUpdateTime(UNKNOWN)",
                "Local": "L[700,700], C[24,49]",
                "Detail": null,
                "Code": "System.currentTimeMillis()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_NullLiteral",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.handleEvent(Event)",
                "Local": "L[747,747], C[37,40]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_ENHANCEDFORSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.collectOutputProps(ExecutableNode)",
                "Local": "L[565,572], C[3,3]",
                "Detail": null,
                "Code": "for (String dependency : node.getInNodes()) {\n  Props output=node.getParentFlow().getExecutableNode(dependency).getOutputProps();\n  if (output != null) {\n    output=Props.clone(output);\n    output.setParent(previousOutput);\n    previousOutput=output;\n  }\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ParameterizedType",
                "Method": "azkaban.execapp.FlowRunner.retryFailures(String).ArrayList<String>",
                "Local": "L[652,652], C[37,53]",
                "Detail": null,
                "Code": "ArrayList<String>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "azkaban.execapp.FlowRunner.finalizeFlow(ExecutableFlowBase)",
                "Local": "L[406,406], C[23,26]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_BREAKSTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[694,694], C[6,11]",
                "Detail": null,
                "Code": "break;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_CLASS_INSTANCE",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[74,74], C[46,87]",
                "Detail": null,
                "Code": "new ConcurrentHashMap<String,JobRunner>()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ClassInstanceCreation",
                "Method": "azkaban.execapp.FlowRunner",
                "Local": "L[74,74], C[46,87]",
                "Detail": null,
                "Code": "new ConcurrentHashMap<String,JobRunner>()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.collectOutputProps(ExecutableNode)",
                "Local": "L[566,566], C[19,38]",
                "Detail": null,
                "Code": "node.getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.collectOutputProps(ExecutableNode)",
                "Local": "L[488,488], C[26,37]",
                "Detail": null,
                "Code": "node.getId()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_NullLiteral",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.finalizeFlowIfFinished(ExecutableFlowBase)",
                "Local": "L[804,804], C[28,31]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "CHANGED_ParameterizedType",
                "Method": "azkaban.execapp.FlowRunner.FieldDeclaration",
                "Local": "L[90,90], C[10,23]",
                "Detail": null,
                "Code": "Set<JobRunner>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_ParameterizedType",
                "Method": "azkaban.execapp.FlowRunner.FieldDeclaration",
                "Local": "L[75,75], C[10,31]",
                "Detail": null,
                "Code": "Map<String,JobRunner>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_CONTINUESTATEMENT",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[674,674], C[6,14]",
                "Detail": null,
                "Code": "continue;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.propagateStatus(ExecutableFlowBase, Status)",
                "Local": "L[792,792], C[8,27]",
                "Detail": null,
                "Code": "base.getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "ADDED_NullLiteral",
                "Method": "azkaban.execapp.FlowRunner.JobRunnerEventListener.propagateStatus(ExecutableFlowBase, Status)",
                "Local": "L[792,792], C[32,35]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_BooleanLiteral",
                "Method": "azkaban.execapp.FlowRunner.retryJobs(List<String>, String)",
                "Local": "L[689,689], C[29,33]",
                "Detail": null,
                "Code": "false",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunner.java"
            },
            {
                "Metric": "REMOVED_NullLiteral",
                "Method": "azkaban.execapp.FlowRunnerManager.retryJobs(int, String, List<String>)",
                "Local": "L[490,490], C[17,20]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "azkaban.execapp.FlowRunnerManager.retryJobs(int, String, List<String>)",
                "Local": "L[488,488], C[3,47]",
                "Detail": null,
                "Code": "FlowRunner runner=runningFlows.get(execId);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunnerManager.retryJobs(int, String, List<String>)",
                "Local": "L[494,494], C[3,31]",
                "Detail": null,
                "Code": "runner.retryJobs(jobId,user)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.FlowRunnerManager.retryJobs(int, String, List<String>)",
                "Local": "L[488,488], C[23,46]",
                "Detail": null,
                "Code": "runningFlows.get(execId)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_METHOD",
                "Method": "azkaban.execapp.FlowRunnerManager",
                "Local": "L[487,495], C[2,2]",
                "Detail": null,
                "Code": "public void retryJobs(int execId,String user,List<String> jobId) throws ExecutorManagerException {\n  FlowRunner runner=runningFlows.get(execId);\n  if (runner == null) {\n    throw new ExecutorManagerException(\"Execution \" + execId + \" is not running.\");\n  }\n  runner.retryJobs(jobId,user);\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_Modifier",
                "Method": "azkaban.execapp.FlowRunnerManager.retryJobs(int, String, List<String>)",
                "Local": "L[487,487], C[2,7]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunnerManager.retryJobs(int, String, List<String>)",
                "Local": "L[490,492], C[23,3]",
                "Detail": null,
                "Code": "{\n  throw new ExecutorManagerException(\"Execution \" + execId + \" is not running.\");\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunnerManager.retryJobs(int, String, List<String>).ExecutorManagerException",
                "Local": "L[491,491], C[39,80]",
                "Detail": null,
                "Code": "\"Execution \" + execId + \" is not running.\"",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_IMPORT",
                "Method": "azkaban.execapp.CompilationUnit",
                "Local": "L[28,28], C[1,22]",
                "Detail": null,
                "Code": "import java.util.List;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_ImportDeclaration",
                "Method": "azkaban.execapp.CompilationUnit",
                "Local": "L[28,28], C[1,22]",
                "Detail": null,
                "Code": "import java.util.List;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_THROWSTATEMENT",
                "Method": "azkaban.execapp.FlowRunnerManager.retryJobs(int, String, List<String>)",
                "Local": "L[491,491], C[4,82]",
                "Detail": null,
                "Code": "throw new ExecutorManagerException(\"Execution \" + execId + \" is not running.\");\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.execapp.FlowRunnerManager.retryJobs(int, String, List<String>)",
                "Local": "L[490,490], C[7,20]",
                "Detail": null,
                "Code": "runner == null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_CLASS_INSTANCE",
                "Method": "azkaban.execapp.FlowRunnerManager.retryJobs(int, String, List<String>)",
                "Local": "L[491,491], C[10,81]",
                "Detail": null,
                "Code": "new ExecutorManagerException(\"Execution \" + execId + \" is not running.\")",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_ClassInstanceCreation",
                "Method": "azkaban.execapp.FlowRunnerManager.retryJobs(int, String, List<String>)",
                "Local": "L[491,491], C[10,81]",
                "Detail": null,
                "Code": "new ExecutorManagerException(\"Execution \" + execId + \" is not running.\")",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.execapp.FlowRunnerManager.submitFlow(int)",
                "Local": "L[400,402], C[41,3]",
                "Detail": null,
                "Code": "{\n  throw new ExecutorManagerException(\"Execution \" + execId + \" is already running.\");\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_ParameterizedType",
                "Method": "azkaban.execapp.FlowRunnerManager.retryJobs(int, String, List<String>).SingleVariableDeclaration",
                "Local": "L[487,487], C[49,60]",
                "Detail": null,
                "Code": "List<String>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/FlowRunnerManager.java"
            },
            {
                "Metric": "REMOVED_RETURN_VALUE",
                "Method": "azkaban.execapp.JobRunner.getOutputProps()",
                "Local": "L[449,449], C[3,21]",
                "Detail": null,
                "Code": "return outputProps;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "CHANGED_SYNCHRONIZEDSTATEMENT",
                "Method": "azkaban.execapp.JobRunner.createLogger()",
                "Local": "L[146,171], C[3,3]",
                "Detail": null,
                "Code": "synchronized (logCreatorLock) {\n  String loggerName=System.currentTimeMillis() + \".\" + this.executionId+ \".\"+ this.jobId;\n  logger=Logger.getLogger(loggerName);\n  String id=this.jobId;\n  if (node.getExecutableFlow() != node.getParentFlow()) {\n    id=node.getPrintableId(\"._.\");\n  }\n  String logName=createLogFileName(this.executionId,id,node.getAttempt());\n  logFile=new File(workingDir,logName);\n  String absolutePath=logFile.getAbsolutePath();\n  jobAppender=null;\n  try {\n    RollingFileAppender fileAppender=new RollingFileAppender(loggerLayout,absolutePath,true);\n    fileAppender.setMaxBackupIndex(jobLogBackupIndex);\n    fileAppender.setMaxFileSize(jobLogChunkSize);\n    jobAppender=fileAppender;\n    logger.addAppender(jobAppender);\n  }\n catch (  IOException e) {\n    flowLogger.error(\"Could not open log file in \" + workingDir + \" for job \"+ this.jobId,e);\n  }\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "CHANGED_EXPRESSIONSTATEMENT",
                "Method": "azkaban.execapp.JobRunner.createLogger()",
                "Local": "L[153,153], C[5,36]",
                "Detail": null,
                "Code": "id=node.getPrintableId(\"._.\");\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "REMOVED_Modifier",
                "Method": "azkaban.execapp.JobRunner.FieldDeclaration",
                "Local": "L[57,57], C[2,8]",
                "Detail": null,
                "Code": "private",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.JobRunner.JobRunner(ExecutableNode, File, ExecutorLoader, JobTypeManager)",
                "Local": "L[95,95], C[22,41]",
                "Detail": null,
                "Code": "node.getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.JobRunner.JobRunner(ExecutableNode, File, ExecutorLoader, JobTypeManager)",
                "Local": "L[154,154], C[10,29]",
                "Detail": null,
                "Code": "node.getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "azkaban.execapp.JobRunner.runJob()",
                "Local": "L[404,406], C[20,3]",
                "Detail": null,
                "Code": "{\n  node.setOutputProps(job.getJobGeneratedProperties());\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "CHANGED_EXPRESSIONSTATEMENT",
                "Method": "azkaban.execapp.JobRunner.runJob()",
                "Local": "L[405,405], C[4,56]",
                "Detail": null,
                "Code": "node.setOutputProps(job.getJobGeneratedProperties());\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "REMOVED_Modifier",
                "Method": "azkaban.execapp.JobRunner.getOutputProps()",
                "Local": "L[448,448], C[2,7]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "azkaban.execapp.JobRunner.createLogger()",
                "Local": "L[152,154], C[58,4]",
                "Detail": null,
                "Code": "{\n  id=node.getPrintableId(\"._.\");\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.JobRunner.createLogger()",
                "Local": "L[153,153], C[10,35]",
                "Detail": null,
                "Code": "node.getPrintableId(\"._.\")",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.JobRunner.createLogger()",
                "Local": "L[154,154], C[10,29]",
                "Detail": null,
                "Code": "node.getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "REMOVED_FieldDeclaration",
                "Method": "azkaban.execapp.JobRunner",
                "Local": "L[57,57], C[2,27]",
                "Detail": null,
                "Code": "private Props outputProps;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD",
                "Method": "azkaban.execapp.JobRunner",
                "Local": "L[448,450], C[2,2]",
                "Detail": null,
                "Code": "public Props getOutputProps(){\n  return outputProps;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.execapp.JobRunner.runJob().setOutputProps(UNKNOWN)",
                "Local": "L[405,405], C[24,54]",
                "Detail": null,
                "Code": "job.getJobGeneratedProperties()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.execapp.JobRunner.runJob().setOutputProps(UNKNOWN)",
                "Local": "L[406,406], C[18,48]",
                "Detail": null,
                "Code": "job.getJobGeneratedProperties()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "METHOD_CALL_ARGUMENTS_CHANGE",
                "Method": "azkaban.execapp.JobRunner.runJob().setOutputProps(UNKNOWN)",
                "Local": "L[405,405], C[4,55]",
                "Detail": null,
                "Code": "node.setOutputProps(job.getJobGeneratedProperties())",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/execapp/JobRunner.java"
            },
            {
                "Metric": "REMOVED_RETURN_VALUE",
                "Method": "azkaban.executor.ExecutableFlowBase.getNestedId(String)",
                "Local": "L[83,83], C[4,76]",
                "Detail": null,
                "Code": "return this.getParentFlow().getNestedId(delimiter) + delimiter + getId();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.executor.ExecutableFlowBase.getNestedId(String)",
                "Local": "L[83,83], C[11,75]",
                "Detail": null,
                "Code": "this.getParentFlow().getNestedId(delimiter) + delimiter + getId()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "azkaban.executor.ExecutableFlowBase.getNestedId(String)",
                "Local": "L[82,82], C[7,34]",
                "Detail": null,
                "Code": "this.getParentFlow() != null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.executor.ExecutableFlowBase.getNestedId(String)",
                "Local": "L[82,82], C[7,26]",
                "Detail": null,
                "Code": "this.getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "REMOVED_NullLiteral",
                "Method": "azkaban.executor.ExecutableFlowBase.getNestedId(String)",
                "Local": "L[82,82], C[31,34]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "REMOVED_RETURN_VALUE",
                "Method": "azkaban.executor.ExecutableFlowBase.getNestedId(String)",
                "Local": "L[86,86], C[3,17]",
                "Detail": null,
                "Code": "return getId();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.executor.ExecutableFlowBase.getNestedId(String)",
                "Local": "L[83,83], C[11,30]",
                "Detail": null,
                "Code": "this.getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.executor.ExecutableFlowBase.getNestedId(String)",
                "Local": "L[83,83], C[69,75]",
                "Detail": null,
                "Code": "getId()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "REMOVED_Modifier",
                "Method": "azkaban.executor.ExecutableFlowBase.getNestedId(String)",
                "Local": "L[81,81], C[2,7]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "REMOVED_IF_STATEMENT",
                "Method": "azkaban.executor.ExecutableFlowBase.getNestedId(String)",
                "Local": "L[82,84], C[37,3]",
                "Detail": null,
                "Code": "{\n  return this.getParentFlow().getNestedId(delimiter) + delimiter + getId();\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "REMOVED_METHOD",
                "Method": "azkaban.executor.ExecutableFlowBase",
                "Local": "L[81,87], C[2,2]",
                "Detail": null,
                "Code": "public String getNestedId(String delimiter){\n  if (this.getParentFlow() != null) {\n    return this.getParentFlow().getNestedId(delimiter) + delimiter + getId();\n  }\n  return getId();\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "REMOVED_ThisExpression",
                "Method": "azkaban.executor.ExecutableFlowBase.getNestedId(String).getParentFlow()",
                "Local": "L[82,82], C[7,10]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.executor.ExecutableFlowBase.getNestedId(String)",
                "Local": "L[86,86], C[10,16]",
                "Detail": null,
                "Code": "getId()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "REMOVED_ThisExpression",
                "Method": "azkaban.executor.ExecutableFlowBase.getNestedId(String).getParentFlow()",
                "Local": "L[83,83], C[11,14]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableFlowBase.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId(String).getParentFlow()",
                "Local": "L[249,249], C[7,10]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId(String)",
                "Local": "L[250,250], C[11,17]",
                "Detail": null,
                "Code": "getId()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId(String)",
                "Local": "L[249,251], C[55,3]",
                "Detail": null,
                "Code": "{\n  return getId();\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId(String)",
                "Local": "L[248,248], C[2,7]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_RETURN_VALUE",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId(String)",
                "Local": "L[252,252], C[3,73]",
                "Detail": null,
                "Code": "return getParentFlow().getPrintableId(delimiter) + delimiter + getId();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId(String)",
                "Local": "L[249,249], C[7,26]",
                "Detail": null,
                "Code": "this.getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "CHANGED_IF_CONDITION",
                "Method": "azkaban.executor.ExecutableNode.updatePastAttempts(List<Object>)",
                "Local": "L[404,406], C[33,3]",
                "Detail": null,
                "Code": "{\n  return;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.executor.ExecutableNode.updatePastAttempts(List<Object>)",
                "Local": "L[414,416], C[61,4]",
                "Detail": null,
                "Code": "{\n  return;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_METHOD",
                "Method": "azkaban.executor.ExecutableNode",
                "Local": "L[244,246], C[2,2]",
                "Detail": null,
                "Code": "public String getPrintableId(){\n  return getPrintableId(\":\");\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_METHOD",
                "Method": "azkaban.executor.ExecutableNode",
                "Local": "L[248,253], C[2,2]",
                "Detail": null,
                "Code": "public String getPrintableId(String delimiter){\n  if (this.getParentFlow() instanceof ExecutableFlow) {\n    return getId();\n  }\n  return getParentFlow().getPrintableId(delimiter) + delimiter + getId();\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId(String)",
                "Local": "L[252,252], C[10,72]",
                "Detail": null,
                "Code": "getParentFlow().getPrintableId(delimiter) + delimiter + getId()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId()",
                "Local": "L[245,245], C[10,28]",
                "Detail": null,
                "Code": "getPrintableId(\":\")",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_RETURN_VALUE",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId()",
                "Local": "L[245,245], C[3,29]",
                "Detail": null,
                "Code": "return getPrintableId(\":\");\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_InstanceofExpression",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId(String)",
                "Local": "L[249,249], C[7,52]",
                "Detail": null,
                "Code": "this.getParentFlow() instanceof ExecutableFlow",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId()",
                "Local": "L[244,244], C[2,7]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_RETURN_VALUE",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId(String)",
                "Local": "L[250,250], C[4,18]",
                "Detail": null,
                "Code": "return getId();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId(String)",
                "Local": "L[252,252], C[10,24]",
                "Detail": null,
                "Code": "getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.executor.ExecutableNode.getPrintableId(String)",
                "Local": "L[252,252], C[66,72]",
                "Detail": null,
                "Code": "getId()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/ExecutableNode.java"
            },
            {
                "Metric": "CHANGED_IF_CONDITION",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[246,249], C[15,4]",
                "Detail": null,
                "Code": "{\n  query+=\" WHERE \";\n  first=false;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "CHANGED_ELSE_CONDITION",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[250,252], C[9,4]",
                "Detail": null,
                "Code": "{\n  query+=\" AND \";\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "CHANGED_IF_CONDITION",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[246,249], C[15,4]",
                "Detail": null,
                "Code": "{\n  query+=\" WHERE \";\n  first=false;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "CHANGED_ELSE_CONDITION",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[250,252], C[9,4]",
                "Detail": null,
                "Code": "{\n  query+=\" AND \";\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "CHANGED_IF_CONDITION",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[246,249], C[15,4]",
                "Detail": null,
                "Code": "{\n  query+=\" WHERE \";\n  first=false;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "CHANGED_ELSE_CONDITION",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[250,252], C[9,4]",
                "Detail": null,
                "Code": "{\n  query+=\" AND \";\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "CHANGED_IF_CONDITION",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[246,249], C[15,4]",
                "Detail": null,
                "Code": "{\n  query+=\" WHERE \";\n  first=false;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "CHANGED_ELSE_CONDITION",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[250,252], C[9,4]",
                "Detail": null,
                "Code": "{\n  query+=\" AND \";\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[259,262], C[15,4]",
                "Detail": null,
                "Code": "{\n  query+=\" WHERE \";\n  first=false;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[263,265], C[9,4]",
                "Detail": null,
                "Code": "{\n  query+=\" AND \";\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[271,274], C[15,4]",
                "Detail": null,
                "Code": "{\n  query+=\" WHERE \";\n  first=false;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[275,277], C[9,4]",
                "Detail": null,
                "Code": "{\n  query+=\" AND \";\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[283,286], C[15,4]",
                "Detail": null,
                "Code": "{\n  query+=\" WHERE \";\n  first=false;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[287,289], C[9,4]",
                "Detail": null,
                "Code": "{\n  query+=\" AND \";\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[295,298], C[15,4]",
                "Detail": null,
                "Code": "{\n  query+=\" WHERE \";\n  first=false;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "azkaban.executor.JdbcExecutorLoader.fetchFlowHistory(String, String, String, int, long, long, int, int)",
                "Local": "L[299,301], C[9,4]",
                "Detail": null,
                "Code": "{\n  query+=\" AND \";\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "azkaban.executor.JdbcExecutorLoader.uploadExecutableNode(ExecutableNode, Props)",
                "Local": "L[381,383], C[37,3]",
                "Detail": null,
                "Code": "{\n  flowId=flow.getId() + \"+\" + node.getParentFlow().getPrintableId(\"+\");\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.executor.JdbcExecutorLoader.uploadExecutableNode(ExecutableNode, Props)",
                "Local": "L[381,381], C[15,34]",
                "Detail": null,
                "Code": "node.getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.executor.JdbcExecutorLoader.uploadExecutableNode(ExecutableNode, Props)",
                "Local": "L[382,382], C[13,32]",
                "Detail": null,
                "Code": "node.getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "azkaban.executor.JdbcExecutorLoader.uploadExecutableNode(ExecutableNode, Props)",
                "Local": "L[382,382], C[13,73]",
                "Detail": null,
                "Code": "flow.getId() + \"+\" + node.getParentFlow().getPrintableId(\"+\")",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "CHANGED_EXPRESSIONSTATEMENT",
                "Method": "azkaban.executor.JdbcExecutorLoader.uploadExecutableNode(ExecutableNode, Props)",
                "Local": "L[382,382], C[4,74]",
                "Detail": null,
                "Code": "flowId=flow.getId() + \"+\" + node.getParentFlow().getPrintableId(\"+\");\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.executor.JdbcExecutorLoader.uploadExecutableNode(ExecutableNode, Props)",
                "Local": "L[382,382], C[34,53]",
                "Detail": null,
                "Code": "node.getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.executor.JdbcExecutorLoader.uploadExecutableNode(ExecutableNode, Props).getParentFlow()",
                "Local": "L[382,382], C[13,32]",
                "Detail": null,
                "Code": "node.getParentFlow()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.executor.JdbcExecutorLoader.uploadExecutableNode(ExecutableNode, Props)",
                "Local": "L[382,382], C[13,24]",
                "Detail": null,
                "Code": "flow.getId()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/executor/JdbcExecutorLoader.java"
            },
            {
                "Metric": "ADDED_ANNOTATION",
                "Method": "azkaban.webapp.servlet.ExecutorServlet.ajaxFetchJobMetaData(HttpServletRequest, HttpServletResponse, HashMap<String,Object>, User, ExecutableFlow)",
                "Local": "L[489,489], C[2,28]",
                "Detail": null,
                "Code": "/** \n * Gets the job metadata through ajax plain text stream to reduce memory overhead.\n * @param req\n * @param resp\n * @param user\n * @param exFlow\n * @throws ServletException\n */\n@SuppressWarnings(\"unused\") private void ajaxFetchJobMetaData(HttpServletRequest req,HttpServletResponse resp,HashMap<String,Object> ret,User user,ExecutableFlow exFlow) throws ServletException {\n  Project project=getProjectAjaxByPermission(ret,exFlow.getProjectId(),user,Type.READ);\n  if (project == null) {\n    return;\n  }\n  int offset=this.getIntParam(req,\"offset\");\n  int length=this.getIntParam(req,\"length\");\n  String jobId=this.getParam(req,\"jobId\");\n  resp.setCharacterEncoding(\"utf-8\");\n  try {\n    ExecutableNode node=exFlow.getExecutableNode(jobId);\n    if (node == null) {\n      ret.put(\"error\",\"Job \" + jobId + \" doesn't exist in \"+ exFlow.getExecutionId());\n      return;\n    }\n    int attempt=this.getIntParam(req,\"attempt\",node.getAttempt());\n    JobMetaData data=executorManager.getExecutionJobMetaData(exFlow,jobId,offset,length,attempt);\n    if (data == null) {\n      ret.put(\"length\",0);\n      ret.put(\"offset\",offset);\n      ret.put(\"data\",\"\");\n    }\n else {\n      ret.put(\"length\",data.getLength());\n      ret.put(\"offset\",data.getOffset());\n      ret.put(\"data\",data.getData());\n    }\n  }\n catch (  ExecutorManagerException e) {\n    throw new ServletException(e);\n  }\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/webapp/servlet/ExecutorServlet.java"
            },
            {
                "Metric": "ADDED_SingleMemberAnnotation",
                "Method": "azkaban.webapp.servlet.ExecutorServlet.ajaxFetchJobMetaData(HttpServletRequest, HttpServletResponse, HashMap<String,Object>, User, ExecutableFlow)",
                "Local": "L[489,489], C[2,28]",
                "Detail": null,
                "Code": "@SuppressWarnings(\"unused\")",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "src/java/azkaban/webapp/servlet/ExecutorServlet.java"
            },
            {
                "Metric": "CHANGED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testFailedRun()",
                "Local": "L[108,108], C[3,56]",
                "Detail": null,
                "Code": "Props outputProps=runner.getNode().getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testFailedRun()",
                "Local": "L[108,108], C[3,56]",
                "Detail": null,
                "Code": "Props outputProps=runner.getNode().getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testBasicRun()",
                "Local": "L[77,77], C[3,56]",
                "Detail": null,
                "Code": "Props outputProps=runner.getNode().getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testBasicRun()",
                "Local": "L[77,77], C[3,46]",
                "Detail": null,
                "Code": "Props outputProps=runner.getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "azkaban.test.execapp.JobRunnerTest.createJobRunner(int, String, int, boolean, ExecutorLoader, EventCollectorListener)",
                "Local": "L[360,360], C[13,76]",
                "Detail": null,
                "Code": "runner=new JobRunner(node,workingDir,loader,jobtypeManager)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testPreKilledRun()",
                "Local": "L[181,181], C[23,38]",
                "Detail": null,
                "Code": "runner.getNode()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testCancelRun()",
                "Local": "L[230,230], C[23,45]",
                "Detail": null,
                "Code": "runner.getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testCancelRun()",
                "Local": "L[230,230], C[3,46]",
                "Detail": null,
                "Code": "Props outputProps=runner.getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testCancelRun()",
                "Local": "L[230,230], C[3,56]",
                "Detail": null,
                "Code": "Props outputProps=runner.getNode().getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testBasicRun()",
                "Local": "L[77,77], C[23,38]",
                "Detail": null,
                "Code": "runner.getNode()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testPreKilledRun()",
                "Local": "L[181,181], C[23,45]",
                "Detail": null,
                "Code": "runner.getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testDisabledRun()",
                "Local": "L[143,143], C[23,38]",
                "Detail": null,
                "Code": "runner.getNode()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testDisabledRun()",
                "Local": "L[143,143], C[23,45]",
                "Detail": null,
                "Code": "runner.getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "CHANGED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testDisabledRun()",
                "Local": "L[143,143], C[3,56]",
                "Detail": null,
                "Code": "Props outputProps=runner.getNode().getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testDelayedExecutionCancelledJob()",
                "Local": "L[324,324], C[3,56]",
                "Detail": null,
                "Code": "Props outputProps=runner.getNode().getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testDelayedExecutionCancelledJob()",
                "Local": "L[324,324], C[3,46]",
                "Detail": null,
                "Code": "Props outputProps=runner.getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testPreKilledRun()",
                "Local": "L[181,181], C[3,46]",
                "Detail": null,
                "Code": "Props outputProps=runner.getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testPreKilledRun()",
                "Local": "L[181,181], C[3,56]",
                "Detail": null,
                "Code": "Props outputProps=runner.getNode().getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testCancelRun()",
                "Local": "L[230,230], C[23,38]",
                "Detail": null,
                "Code": "runner.getNode()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testDelayedExecutionCancelledJob()",
                "Local": "L[324,324], C[23,45]",
                "Detail": null,
                "Code": "runner.getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testDelayedExecutionCancelledJob()",
                "Local": "L[324,324], C[23,38]",
                "Detail": null,
                "Code": "runner.getNode()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testDelayedExecutionJob()",
                "Local": "L[267,267], C[23,45]",
                "Detail": null,
                "Code": "runner.getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "CHANGED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.createJobRunner(int, String, int, boolean, ExecutorLoader, EventCollectorListener)",
                "Local": "L[360,360], C[3,77]",
                "Detail": null,
                "Code": "JobRunner runner=new JobRunner(node,workingDir,loader,jobtypeManager);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testDelayedExecutionJob()",
                "Local": "L[267,267], C[3,46]",
                "Detail": null,
                "Code": "Props outputProps=runner.getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testDelayedExecutionJob()",
                "Local": "L[267,267], C[3,56]",
                "Detail": null,
                "Code": "Props outputProps=runner.getNode().getOutputProps();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testFailedRun()",
                "Local": "L[108,108], C[23,38]",
                "Detail": null,
                "Code": "runner.getNode()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testFailedRun()",
                "Local": "L[108,108], C[23,45]",
                "Detail": null,
                "Code": "runner.getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testDisabledRun()",
                "Local": "L[143,143], C[9,55]",
                "Detail": null,
                "Code": "outputProps=runner.getNode().getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "azkaban.test.execapp.JobRunnerTest.testFailedRun()",
                "Local": "L[108,108], C[9,55]",
                "Detail": null,
                "Code": "outputProps=runner.getNode().getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testDelayedExecutionJob()",
                "Local": "L[267,267], C[23,38]",
                "Detail": null,
                "Code": "runner.getNode()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testBasicRun()",
                "Local": "L[77,77], C[23,45]",
                "Detail": null,
                "Code": "runner.getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testBasicRun()",
                "Local": "L[181,181], C[23,45]",
                "Detail": null,
                "Code": "runner.getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testBasicRun()",
                "Local": "L[108,108], C[23,45]",
                "Detail": null,
                "Code": "runner.getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testBasicRun()",
                "Local": "L[143,143], C[23,45]",
                "Detail": null,
                "Code": "runner.getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testBasicRun()",
                "Local": "L[230,230], C[23,45]",
                "Detail": null,
                "Code": "runner.getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testBasicRun()",
                "Local": "L[324,324], C[23,45]",
                "Detail": null,
                "Code": "runner.getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.testBasicRun()",
                "Local": "L[267,267], C[23,45]",
                "Detail": null,
                "Code": "runner.getOutputProps()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "azkaban.test.execapp.JobRunnerTest.createJobRunner(int, String, int, boolean, ExecutorLoader, EventCollectorListener)",
                "Local": "L[357,357], C[3,27]",
                "Detail": null,
                "Code": "node.setInputProps(props)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "CLASS_INSTANCE_ARGUMENTS_CHANGE",
                "Method": "azkaban.test.execapp.JobRunnerTest.createJobRunner(int, String, int, boolean, ExecutorLoader, EventCollectorListener)",
                "Local": "L[360,360], C[22,76]",
                "Detail": null,
                "Code": "new JobRunner(node,workingDir,loader,jobtypeManager)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "CHANGED_ClassInstanceCreation",
                "Method": "azkaban.test.execapp.JobRunnerTest.createJobRunner(int, String, int, boolean, ExecutorLoader, EventCollectorListener)",
                "Local": "L[360,360], C[22,76]",
                "Detail": null,
                "Code": "new JobRunner(node,workingDir,loader,jobtypeManager)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/execapp/JobRunnerTest.java"
            },
            {
                "Metric": "ADDED_ANNOTATION",
                "Method": "azkaban.test.executor.ExecutableFlowTest.testExecutorFlowUpdates()",
                "Local": "L[134,134], C[2,30]",
                "Detail": null,
                "Code": "@SuppressWarnings(\"rawtypes\") @Test public void testExecutorFlowUpdates() throws Exception {\n  Flow flow=project.getFlow(\"jobe\");\n  ExecutableFlow exFlow=new ExecutableFlow(project,flow);\n  exFlow.setExecutionId(101);\n  Object obj=exFlow.toObject();\n  String exFlowJSON=JSONUtils.toJSON(obj);\n  @SuppressWarnings(\"unchecked\") Map<String,Object> flowObjMap=(Map<String,Object>)JSONUtils.parseJSONFromString(exFlowJSON);\n  ExecutableFlow copyFlow=ExecutableFlow.createExecutableFlowFromObject(flowObjMap);\n  testEquals(exFlow,copyFlow);\n  ExecutableNode joba=exFlow.getExecutableNode(\"joba\");\n  ExecutableFlowBase jobb=(ExecutableFlowBase)(exFlow.getExecutableNode(\"jobb\"));\n  ExecutableFlowBase jobc=(ExecutableFlowBase)(exFlow.getExecutableNode(\"jobc\"));\n  ExecutableFlowBase jobd=(ExecutableFlowBase)(exFlow.getExecutableNode(\"jobd\"));\n  ExecutableNode jobe=exFlow.getExecutableNode(\"jobe\");\n  assertNotNull(joba,jobb,jobc,jobd,jobe);\n  ExecutableNode jobbInnerFlowA=jobb.getExecutableNode(\"innerJobA\");\n  ExecutableNode jobbInnerFlowB=jobb.getExecutableNode(\"innerJobB\");\n  ExecutableNode jobbInnerFlowC=jobb.getExecutableNode(\"innerJobC\");\n  ExecutableNode jobbInnerFlow=jobb.getExecutableNode(\"innerFlow\");\n  assertNotNull(jobbInnerFlowA,jobbInnerFlowB,jobbInnerFlowC,jobbInnerFlow);\n  ExecutableNode jobcInnerFlowA=jobc.getExecutableNode(\"innerJobA\");\n  ExecutableNode jobcInnerFlowB=jobc.getExecutableNode(\"innerJobB\");\n  ExecutableNode jobcInnerFlowC=jobc.getExecutableNode(\"innerJobC\");\n  ExecutableNode jobcInnerFlow=jobc.getExecutableNode(\"innerFlow\");\n  assertNotNull(jobcInnerFlowA,jobcInnerFlowB,jobcInnerFlowC,jobcInnerFlow);\n  ExecutableNode jobdInnerFlowA=jobd.getExecutableNode(\"innerJobA\");\n  ExecutableNode jobdInnerFlowB=jobd.getExecutableNode(\"innerJobB\");\n  ExecutableNode jobdInnerFlowC=jobd.getExecutableNode(\"innerJobC\");\n  ExecutableNode jobdInnerFlow=jobd.getExecutableNode(\"innerFlow\");\n  assertNotNull(jobdInnerFlowA,jobdInnerFlowB,jobdInnerFlowC,jobdInnerFlow);\n  exFlow.setEndTime(1000);\n  exFlow.setStartTime(500);\n  exFlow.setStatus(Status.RUNNING);\n  exFlow.setUpdateTime(133);\n  jobe.setEndTime(System.currentTimeMillis());\n  jobe.setUpdateTime(System.currentTimeMillis());\n  jobe.setStatus(Status.DISABLED);\n  jobe.setStartTime(System.currentTimeMillis() - 1000);\n  Map<String,Object> updateObject=exFlow.toUpdateObject(0);\n  Assert.assertEquals(1,((List)(updateObject.get(\"nodes\"))).size());\n  copyFlow.applyUpdateObject(updateObject);\n  testEquals(exFlow,copyFlow);\n  updateObject=exFlow.toUpdateObject(System.currentTimeMillis());\n  Assert.assertNull(updateObject.get(\"nodes\"));\n  jobbInnerFlowA.setEndTime(System.currentTimeMillis());\n  jobbInnerFlowA.setUpdateTime(System.currentTimeMillis());\n  jobbInnerFlowA.setStatus(Status.DISABLED);\n  jobbInnerFlowA.setStartTime(System.currentTimeMillis() - 1000);\n  updateObject=exFlow.toUpdateObject(0);\n  Assert.assertEquals(2,((List)(updateObject.get(\"nodes\"))).size());\n  updateObject=exFlow.toUpdateObject(jobe.getUpdateTime());\n  Assert.assertEquals(1,((List)(updateObject.get(\"nodes\"))).size());\n  copyFlow.applyUpdateObject(updateObject);\n  testEquals(exFlow,copyFlow);\n  updateObject=exFlow.toUpdateObject(jobbInnerFlowA.getUpdateTime());\n  Assert.assertNull(updateObject.get(\"nodes\"));\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/executor/ExecutableFlowTest.java"
            },
            {
                "Metric": "ADDED_SingleMemberAnnotation",
                "Method": "azkaban.test.executor.ExecutableFlowTest.testExecutorFlowUpdates()",
                "Local": "L[134,134], C[2,30]",
                "Detail": null,
                "Code": "@SuppressWarnings(\"rawtypes\")",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/executor/ExecutableFlowTest.java"
            },
            {
                "Metric": "REMOVED_IMPORT",
                "Method": "azkaban.test.executor.CompilationUnit",
                "Local": "L[4,4], C[1,27]",
                "Detail": null,
                "Code": "import java.util.ArrayList;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/executor/ExecutableFlowTest.java"
            },
            {
                "Metric": "REMOVED_ImportDeclaration",
                "Method": "azkaban.test.executor.CompilationUnit",
                "Local": "L[4,4], C[1,27]",
                "Detail": null,
                "Code": "import java.util.ArrayList;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/executor/ExecutableFlowTest.java"
            },
            {
                "Metric": "REMOVED_IMPORT",
                "Method": "azkaban.test.executor.CompilationUnit",
                "Local": "L[7,7], C[1,25]",
                "Detail": null,
                "Code": "import java.util.HashSet;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/executor/ExecutableFlowTest.java"
            },
            {
                "Metric": "REMOVED_ImportDeclaration",
                "Method": "azkaban.test.executor.CompilationUnit",
                "Local": "L[7,7], C[1,25]",
                "Detail": null,
                "Code": "import java.util.HashSet;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/executor/ExecutableFlowTest.java"
            },
            {
                "Metric": "REMOVED_IMPORT",
                "Method": "azkaban.test.executor.CompilationUnit",
                "Local": "L[23,23], C[1,41]",
                "Detail": null,
                "Code": "import azkaban.executor.ExecutionAttempt;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/executor/ExecutableFlowTest.java"
            },
            {
                "Metric": "REMOVED_ImportDeclaration",
                "Method": "azkaban.test.executor.CompilationUnit",
                "Local": "L[23,23], C[1,41]",
                "Detail": null,
                "Code": "import azkaban.executor.ExecutionAttempt;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/executor/ExecutableFlowTest.java"
            },
            {
                "Metric": "REMOVED_IMPORT",
                "Method": "azkaban.test.executor.CompilationUnit",
                "Local": "L[28,28], C[1,30]",
                "Detail": null,
                "Code": "import azkaban.flow.FlowProps;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/executor/ExecutableFlowTest.java"
            },
            {
                "Metric": "REMOVED_ImportDeclaration",
                "Method": "azkaban.test.executor.CompilationUnit",
                "Local": "L[28,28], C[1,30]",
                "Detail": null,
                "Code": "import azkaban.flow.FlowProps;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/executor/ExecutableFlowTest.java"
            },
            {
                "Metric": "REMOVED_IMPORT",
                "Method": "azkaban.test.executor.CompilationUnit",
                "Local": "L[32,32], C[1,27]",
                "Detail": null,
                "Code": "import azkaban.utils.Props;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/executor/ExecutableFlowTest.java"
            },
            {
                "Metric": "REMOVED_ImportDeclaration",
                "Method": "azkaban.test.executor.CompilationUnit",
                "Local": "L[32,32], C[1,27]",
                "Detail": null,
                "Code": "import azkaban.utils.Props;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "unit/java/azkaban/test/executor/ExecutableFlowTest.java"
            }
        ],
        "metadata": {
            "type": "Extract Method",
            "description": "Extract Method private finalizeFlow(flow ExecutableFlowBase) : void extracted from private runFlow() : void in class azkaban.execapp.FlowRunner",
            "leftSideLocations": [
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 300,
                    "endLine": 369,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private runFlow() : void"
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 356,
                    "endLine": 356,
                    "startColumn": 4,
                    "endColumn": 26,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 358,
                    "endLine": 358,
                    "startColumn": 5,
                    "endColumn": 35,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 359,
                    "endLine": 359,
                    "startColumn": 4,
                    "endColumn": 16,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 360,
                    "endLine": 360,
                    "startColumn": 4,
                    "endColumn": 16,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 361,
                    "endLine": 361,
                    "startColumn": 4,
                    "endColumn": 26,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 363,
                    "endLine": 363,
                    "startColumn": 5,
                    "endColumn": 11,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 364,
                    "endLine": 364,
                    "startColumn": 4,
                    "endColumn": 12,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 365,
                    "endLine": 365,
                    "startColumn": 5,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 357,
                    "endLine": 357,
                    "startColumn": 5,
                    "endColumn": 51,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 362,
                    "endLine": 362,
                    "startColumn": 5,
                    "endColumn": 66,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 366,
                    "endLine": 366,
                    "startColumn": 5,
                    "endColumn": 66,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 355,
                    "endLine": 367,
                    "startColumn": 4,
                    "endColumn": 5,
                    "codeElementType": "SWITCH_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 405,
                    "endLine": 421,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private finalizeFlow(flow ExecutableFlowBase) : void"
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 409,
                    "endLine": 409,
                    "startColumn": 3,
                    "endColumn": 25,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 411,
                    "endLine": 411,
                    "startColumn": 4,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 412,
                    "endLine": 412,
                    "startColumn": 3,
                    "endColumn": 15,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 413,
                    "endLine": 413,
                    "startColumn": 3,
                    "endColumn": 15,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 414,
                    "endLine": 414,
                    "startColumn": 3,
                    "endColumn": 25,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 416,
                    "endLine": 416,
                    "startColumn": 4,
                    "endColumn": 10,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 417,
                    "endLine": 417,
                    "startColumn": 3,
                    "endColumn": 11,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 418,
                    "endLine": 418,
                    "startColumn": 4,
                    "endColumn": 37,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 415,
                    "endLine": 415,
                    "startColumn": 4,
                    "endColumn": 75,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 419,
                    "endLine": 419,
                    "startColumn": 4,
                    "endColumn": 75,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 410,
                    "endLine": 410,
                    "startColumn": 4,
                    "endColumn": 60,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 408,
                    "endLine": 420,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "SWITCH_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 315,
                    "endLine": 372,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private runFlow() : void"
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 370,
                    "endLine": 370,
                    "startColumn": 4,
                    "endColumn": 22,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "finalizeFlow(flow)"
                },
                {
                    "filePath": "src/java/azkaban/execapp/FlowRunner.java",
                    "startLine": 406,
                    "endLine": 406,
                    "startColumn": 3,
                    "endColumn": 68,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ]
        }
    }
]