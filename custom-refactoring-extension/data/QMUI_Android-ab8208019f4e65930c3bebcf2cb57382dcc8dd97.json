[
    {
        "commit": "ab8208019f4e65930c3bebcf2cb57382dcc8dd97",
        "source": [
            {
                "element": "com.qmuiteam.qmui.skin.QMUISkinManager.addTheme(int, int)",
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java",
                "local": "L[160,171], C[5,5]"
            }
        ],
        "target": [
            {
                "element": "com.qmuiteam.qmui.skin.QMUISkinManager.addSkin(int, int)",
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java",
                "local": "L[160,174], C[5,5]"
            }
        ],
        "type": "RENAME_METHOD",
        "related": [
            {
                "Metric": "RENAME_ELEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager",
                "Local": "L[160,174], C[5,5]",
                "Detail": {
                    "method": "com.qmuiteam.qmui.skin.QMUISkinManager.addSkin(int, int)",
                    "blockPos": "L[161,174], C[50,5]"
                },
                "Code": "@MainThread public void addSkin(int index,int styleRes){\n  if (index <= 0) {\n    throw new IllegalArgumentException(\"index must greater than 0\");\n  }\n  SkinItem skinItem=mSkins.get(index);\n  if (skinItem != null) {\n    if (skinItem.getStyleRes() == styleRes) {\n      return;\n    }\n    throw new RuntimeException(\"already exist the theme item for \" + index);\n  }\n  skinItem=new SkinItem(styleRes);\n  mSkins.append(index,skinItem);\n}\n",
                "relationType": "MENTIONED_DECLARATION",
                "distance": 0,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.getTheme(int)",
                "Local": "L[152,152], C[18,49]",
                "Detail": {
                    "previousVar": "com.qmuiteam.qmui.skin.QMUISkinManager>>>mSkins[50,329]"
                },
                "Code": "skinItem=mSkins.get(skinIndex)",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.dispatch(View, int)",
                "Local": "L[184,184], C[18,49]",
                "Detail": {
                    "previousVar": "com.qmuiteam.qmui.skin.QMUISkinManager>>>mSkins[50,329]"
                },
                "Code": "skinItem=mSkins.get(skinIndex)",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.addSkin(int, int)",
                "Local": "L[165,165], C[9,46]",
                "Detail": null,
                "Code": "SkinItem skinItem=mSkins.get(index);\n",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.addTheme(int, int)",
                "Local": "L[162,162], C[9,47]",
                "Detail": null,
                "Code": "SkinItem skinItem=mThemes.get(index);\n",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.addSkin(int, int)",
                "Local": "L[165,165], C[29,45]",
                "Detail": null,
                "Code": "mSkins.get(index)",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.addTheme(int, int)",
                "Local": "L[162,162], C[29,46]",
                "Detail": null,
                "Code": "mThemes.get(index)",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_CLASS_INSTANCE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.addSkin(int, int)",
                "Local": "L[163,163], C[19,75]",
                "Detail": null,
                "Code": "new IllegalArgumentException(\"index must greater than 0\")",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_ClassInstanceCreation",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.addSkin(int, int)",
                "Local": "L[163,163], C[19,75]",
                "Detail": null,
                "Code": "new IllegalArgumentException(\"index must greater than 0\")",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "CHANGED_VARIABLE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.dispatch(View, int)",
                "Local": "L[184,184], C[9,50]",
                "Detail": {
                    "previousVar": "com.qmuiteam.qmui.skin.QMUISkinManager>>>mSkins[50,329]"
                },
                "Code": "SkinItem skinItem=mSkins.get(skinIndex);\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "CHANGED_FieldDeclaration",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager",
                "Local": "L[85,85], C[5,63]",
                "Detail": {
                    "previousVar": "com.qmuiteam.qmui.skin.QMUISkinManager>>>mSkins[50,329]"
                },
                "Code": "private SparseArray<SkinItem> mSkins=new SparseArray<>();\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "CHANGED_VARIABLE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.getTheme(int)",
                "Local": "L[152,152], C[9,50]",
                "Detail": {
                    "previousVar": "com.qmuiteam.qmui.skin.QMUISkinManager>>>mSkins[50,329]"
                },
                "Code": "SkinItem skinItem=mSkins.get(skinIndex);\n",
                "relationType": "VAR_RELATED",
                "distance": 1,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.addSkin(int, int)",
                "Local": "L[162,162], C[12,21]",
                "Detail": null,
                "Code": "index <= 0",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.addSkin(int, int)",
                "Local": "L[162,164], C[23,9]",
                "Detail": null,
                "Code": "{\n  throw new IllegalArgumentException(\"index must greater than 0\");\n}\n",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_THROWSTATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.addSkin(int, int)",
                "Local": "L[163,163], C[13,76]",
                "Detail": null,
                "Code": "throw new IllegalArgumentException(\"index must greater than 0\");\n",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.addSkin(int, int)",
                "Local": "L[173,173], C[9,38]",
                "Detail": null,
                "Code": "mSkins.append(index,skinItem)",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.addTheme(int, int)",
                "Local": "L[170,170], C[9,39]",
                "Detail": null,
                "Code": "mThemes.append(index,skinItem)",
                "relationType": "MENTIONED",
                "distance": 0,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            }
        ],
        "notRelated": [
            {
                "Metric": "ADDED_CastExpression",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[27,27], C[24,74]",
                "Detail": null,
                "Code": "(Integer)view.getTag(R.id.qmui_skin_current_index)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[29,31], C[40,9]",
                "Detail": null,
                "Code": "{\n  theme=view.getContext().getTheme();\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[31,33], C[16,9]",
                "Detail": null,
                "Code": "{\n  theme=QMUISkinManager.getInstance(view.getContext()).getTheme(skin);\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_MarkerAnnotation",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[25,25], C[5,13]",
                "Detail": null,
                "Code": "@Nullable",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[26,26], C[5,10]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[26,26], C[12,17]",
                "Detail": null,
                "Code": "static",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[27,27], C[9,75]",
                "Detail": null,
                "Code": "Integer skin=(Integer)view.getTag(R.id.qmui_skin_current_index);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[28,28], C[9,30]",
                "Detail": null,
                "Code": "Resources.Theme theme;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_RETURN_VALUE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[34,34], C[9,85]",
                "Detail": null,
                "Code": "return QMUIResHelper.getAttrDrawable(view.getContext(),theme,drawableAttr);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[18,18], C[13,49]",
                "Detail": null,
                "Code": "theme=view.getContext().getTheme();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[20,20], C[13,82]",
                "Detail": null,
                "Code": "theme=QMUISkinManager.getInstance(view.getContext()).getTheme(skin);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_PackageDeclaration",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[1,1], C[1,31]",
                "Detail": null,
                "Code": "package com.qmuiteam.qmui.skin;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[3,3], C[1,37]",
                "Detail": null,
                "Code": "import android.content.res.Resources;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[3,3], C[1,37]",
                "Detail": null,
                "Code": "import android.content.res.Resources;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[4,4], C[1,42]",
                "Detail": null,
                "Code": "import android.graphics.drawable.Drawable;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[4,4], C[1,42]",
                "Detail": null,
                "Code": "import android.graphics.drawable.Drawable;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[5,5], C[1,25]",
                "Detail": null,
                "Code": "import android.view.View;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[5,5], C[1,25]",
                "Detail": null,
                "Code": "import android.view.View;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[7,7], C[1,27]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.R;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[7,7], C[1,27]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.R;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[8,8], C[1,44]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.util.QMUIResHelper;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[8,8], C[1,44]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.util.QMUIResHelper;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[10,10], C[1,36]",
                "Detail": null,
                "Code": "import androidx.annotation.Nullable;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[10,10], C[1,36]",
                "Detail": null,
                "Code": "import androidx.annotation.Nullable;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_CLASS",
                "Method": "com.qmuiteam.qmui.skin.CompilationUnit",
                "Local": "L[12,36], C[1,1]",
                "Detail": null,
                "Code": "public class QMUISkinHelper {\n  public static int getSkinColor(  View view,  int colorAttr){\n    Integer skin=(Integer)view.getTag(R.id.qmui_skin_current_index);\n    Resources.Theme theme;\n    if (skin == null || skin <= 0) {\n      theme=view.getContext().getTheme();\n    }\n else {\n      theme=QMUISkinManager.getInstance(view.getContext()).getTheme(skin);\n    }\n    return QMUIResHelper.getAttrColor(theme,colorAttr);\n  }\n  @Nullable public static Drawable getSkinDrawable(  View view,  int drawableAttr){\n    Integer skin=(Integer)view.getTag(R.id.qmui_skin_current_index);\n    Resources.Theme theme;\n    if (skin == null || skin <= 0) {\n      theme=view.getContext().getTheme();\n    }\n else {\n      theme=QMUISkinManager.getInstance(view.getContext()).getTheme(skin);\n    }\n    return QMUIResHelper.getAttrDrawable(view.getContext(),theme,drawableAttr);\n  }\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int).getInstance(UNKNOWN)",
                "Local": "L[32,32], C[49,65]",
                "Detail": null,
                "Code": "view.getContext()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[17,19], C[40,9]",
                "Detail": null,
                "Code": "{\n  theme=view.getContext().getTheme();\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[19,21], C[16,9]",
                "Detail": null,
                "Code": "{\n  theme=QMUISkinManager.getInstance(view.getContext()).getTheme(skin);\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[14,14], C[5,10]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[14,14], C[12,17]",
                "Detail": null,
                "Code": "static",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[18,18], C[21,37]",
                "Detail": null,
                "Code": "view.getContext()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[22,22], C[16,59]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(theme,colorAttr)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[15,15], C[9,75]",
                "Detail": null,
                "Code": "Integer skin=(Integer)view.getTag(R.id.qmui_skin_current_index);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[16,16], C[9,30]",
                "Detail": null,
                "Code": "Resources.Theme theme;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_RETURN_VALUE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[22,22], C[9,60]",
                "Detail": null,
                "Code": "return QMUIResHelper.getAttrColor(theme,colorAttr);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[34,34], C[16,84]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrDrawable(view.getContext(),theme,drawableAttr)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[29,29], C[13,24]",
                "Detail": null,
                "Code": "skin == null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[29,29], C[29,37]",
                "Detail": null,
                "Code": "skin <= 0",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper",
                "Local": "L[12,12], C[1,6]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_METHOD",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper",
                "Local": "L[14,23], C[5,5]",
                "Detail": null,
                "Code": "public static int getSkinColor(View view,int colorAttr){\n  Integer skin=(Integer)view.getTag(R.id.qmui_skin_current_index);\n  Resources.Theme theme;\n  if (skin == null || skin <= 0) {\n    theme=view.getContext().getTheme();\n  }\n else {\n    theme=QMUISkinManager.getInstance(view.getContext()).getTheme(skin);\n  }\n  return QMUIResHelper.getAttrColor(theme,colorAttr);\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_METHOD",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper",
                "Local": "L[25,35], C[5,5]",
                "Detail": null,
                "Code": "@Nullable public static Drawable getSkinDrawable(View view,int drawableAttr){\n  Integer skin=(Integer)view.getTag(R.id.qmui_skin_current_index);\n  Resources.Theme theme;\n  if (skin == null || skin <= 0) {\n    theme=view.getContext().getTheme();\n  }\n else {\n    theme=QMUISkinManager.getInstance(view.getContext()).getTheme(skin);\n  }\n  return QMUIResHelper.getAttrDrawable(view.getContext(),theme,drawableAttr);\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[27,27], C[34,74]",
                "Detail": null,
                "Code": "view.getTag(R.id.qmui_skin_current_index)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[20,20], C[21,66]",
                "Detail": null,
                "Code": "QMUISkinManager.getInstance(view.getContext())",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[15,15], C[34,74]",
                "Detail": null,
                "Code": "view.getTag(R.id.qmui_skin_current_index)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[17,17], C[13,24]",
                "Detail": null,
                "Code": "skin == null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[17,17], C[29,37]",
                "Detail": null,
                "Code": "skin <= 0",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int).getInstance(UNKNOWN)",
                "Local": "L[20,20], C[49,65]",
                "Detail": null,
                "Code": "view.getContext()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[30,30], C[21,37]",
                "Detail": null,
                "Code": "view.getContext()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[30,30], C[13,49]",
                "Detail": null,
                "Code": "theme=view.getContext().getTheme();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[32,32], C[13,82]",
                "Detail": null,
                "Code": "theme=QMUISkinManager.getInstance(view.getContext()).getTheme(skin);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[32,32], C[21,66]",
                "Detail": null,
                "Code": "QMUISkinManager.getInstance(view.getContext())",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int).getAttrDrawable(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[34,34], C[46,62]",
                "Detail": null,
                "Code": "view.getContext()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_NullLiteral",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[17,17], C[21,24]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_NullLiteral",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinDrawable(View, int)",
                "Local": "L[29,29], C[21,24]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "ADDED_CastExpression",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinHelper.getSkinColor(View, int)",
                "Local": "L[15,15], C[24,74]",
                "Detail": null,
                "Code": "(Integer)view.getTag(R.id.qmui_skin_current_index)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinHelper.java"
            },
            {
                "Metric": "CHANGED_IF_CONDITION",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.runDispatch(View, int, Resources.Theme)",
                "Local": "L[203,205], C[84,13]",
                "Detail": null,
                "Code": "{\n  return;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.runDispatch(View, int, Resources.Theme)",
                "Local": "L[209,211], C[64,9]",
                "Detail": null,
                "Code": "{\n  return;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_NullLiteral",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>)",
                "Local": "L[247,247], C[29,32]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_NullLiteral",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[238,238], C[29,32]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_ENHANCEDFORSTATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>)",
                "Local": "L[245,251], C[13,13]",
                "Detail": null,
                "Code": "for (String key : attrs.keySet()) {\n  Integer attr=attrs.get(key);\n  if (attr == null) {\n    continue;\n  }\n  defaultHandleSkinAttr(view,theme,key,attr);\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_ENHANCEDFORSTATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[236,242], C[13,13]",
                "Detail": null,
                "Code": "for (String key : attrs.keySet()) {\n  Integer attr=attrs.get(key);\n  if (attr == null) {\n    continue;\n  }\n  defaultHandleSkinAttr(view,theme,key,attr);\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "CHANGED_IF_CONDITION",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.getSkinAttrs(View)",
                "Local": "L[290,292], C[33,13]",
                "Detail": null,
                "Code": "{\n  continue;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.getSkinAttrs(View)",
                "Local": "L[294,296], C[52,13]",
                "Detail": null,
                "Code": "{\n  continue;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_MarkerAnnotation",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme).SingleVariableDeclaration",
                "Local": "L[231,231], C[29,36]",
                "Detail": null,
                "Code": "@NonNull",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[239,239], C[13,54]",
                "Detail": null,
                "Code": "defaultHandleSkinAttrs(view,theme,attrs)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_ParameterizedType",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>).SingleVariableDeclaration",
                "Local": "L[243,243], C[83,102]",
                "Detail": null,
                "Code": "Map<String,Integer>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[235,243], C[35,9]",
                "Detail": null,
                "Code": "{\n  for (  String key : attrs.keySet()) {\n    Integer attr=attrs.get(key);\n    if (attr == null) {\n      continue;\n    }\n    defaultHandleSkinAttr(view,theme,key,attr);\n  }\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[238,240], C[35,17]",
                "Detail": null,
                "Code": "{\n  continue;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[238,240], C[15,9]",
                "Detail": null,
                "Code": "{\n  defaultHandleSkinAttrs(view,theme,attrs);\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_NullLiteral",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>)",
                "Local": "L[244,244], C[21,24]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_NullLiteral",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[235,235], C[29,32]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_CONTINUESTATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>)",
                "Local": "L[248,248], C[21,29]",
                "Detail": null,
                "Code": "continue;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_CONTINUESTATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[239,239], C[21,29]",
                "Detail": null,
                "Code": "continue;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.dispatch(View, int)",
                "Local": "L[178,180], C[87,9]",
                "Detail": null,
                "Code": "{\n  Trace.beginSection(\"QMUISkin::dispatch\");\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.dispatch(View, int)",
                "Local": "L[195,197], C[87,9]",
                "Detail": null,
                "Code": "{\n  Trace.endSection();\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>)",
                "Local": "L[244,244], C[12,24]",
                "Detail": null,
                "Code": "attrs != null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[235,235], C[20,32]",
                "Detail": null,
                "Code": "attrs != null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_METHOD",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager",
                "Local": "L[243,253], C[5,5]",
                "Detail": null,
                "Code": "public void defaultHandleSkinAttrs(@NonNull View view,Resources.Theme theme,Map<String,Integer> attrs){\n  if (attrs != null) {\n    for (    String key : attrs.keySet()) {\n      Integer attr=attrs.get(key);\n      if (attr == null) {\n        continue;\n      }\n      defaultHandleSkinAttr(view,theme,key,attr);\n    }\n  }\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>)",
                "Local": "L[250,250], C[17,61]",
                "Detail": null,
                "Code": "defaultHandleSkinAttr(view,theme,key,attr)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[241,241], C[17,61]",
                "Detail": null,
                "Code": "defaultHandleSkinAttr(view,theme,key,attr)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>)",
                "Local": "L[246,246], C[32,45]",
                "Detail": null,
                "Code": "attrs.get(key)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[237,237], C[32,45]",
                "Detail": null,
                "Code": "attrs.get(key)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>)",
                "Local": "L[247,247], C[21,32]",
                "Detail": null,
                "Code": "attr == null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_InfixExpression",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[238,238], C[21,32]",
                "Detail": null,
                "Code": "attr == null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_MarkerAnnotation",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme).SingleVariableDeclaration",
                "Local": "L[234,234], C[29,36]",
                "Detail": null,
                "Code": "@NonNull",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>)",
                "Local": "L[246,246], C[17,46]",
                "Detail": null,
                "Code": "Integer attr=attrs.get(key);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[237,237], C[17,46]",
                "Detail": null,
                "Code": "Integer attr=attrs.get(key);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>)",
                "Local": "L[245,245], C[31,44]",
                "Detail": null,
                "Code": "attrs.keySet()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.applyTheme(View, int, Resources.Theme)",
                "Local": "L[236,236], C[31,44]",
                "Detail": null,
                "Code": "attrs.keySet()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_MarkerAnnotation",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>).SingleVariableDeclaration",
                "Local": "L[243,243], C[40,47]",
                "Detail": null,
                "Code": "@NonNull",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>)",
                "Local": "L[244,252], C[26,9]",
                "Detail": null,
                "Code": "{\n  for (  String key : attrs.keySet()) {\n    Integer attr=attrs.get(key);\n    if (attr == null) {\n      continue;\n    }\n    defaultHandleSkinAttr(view,theme,key,attr);\n  }\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>)",
                "Local": "L[247,249], C[35,17]",
                "Detail": null,
                "Code": "{\n  continue;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "com.qmuiteam.qmui.skin.QMUISkinManager.defaultHandleSkinAttrs(View, Resources.Theme, Map<String,Integer>)",
                "Local": "L[243,243], C[5,10]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java"
            },
            {
                "Metric": "VAR_TYPE_CHANGED",
                "Method": "com.qmuiteam.qmui.widget.QMUITopBar",
                "Local": "L[93,93], C[5,69]",
                "Detail": null,
                "Code": "private Map<String,Integer> mDefaultSkinAttrs=new HashMap<>();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/QMUITopBar.java"
            },
            {
                "Metric": "CHANGED_FieldDeclaration",
                "Method": "com.qmuiteam.qmui.widget.QMUITopBar",
                "Local": "L[93,93], C[5,69]",
                "Detail": null,
                "Code": "private Map<String,Integer> mDefaultSkinAttrs=new HashMap<>();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/QMUITopBar.java"
            },
            {
                "Metric": "CHANGED_IF_CONDITION",
                "Method": "com.qmuiteam.qmui.widget.QMUITopBar.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>)",
                "Local": "L[749,751], C[35,17]",
                "Detail": null,
                "Code": "{\n  continue;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/QMUITopBar.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.QMUITopBar.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>)",
                "Local": "L[754,757], C[85,17]",
                "Detail": null,
                "Code": "{\n  continue;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/QMUITopBar.java"
            },
            {
                "Metric": "CHANGED_ParameterizedType",
                "Method": "com.qmuiteam.qmui.widget.QMUITopBar.FieldDeclaration",
                "Local": "L[93,93], C[13,32]",
                "Detail": null,
                "Code": "Map<String,Integer>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/QMUITopBar.java"
            },
            {
                "Metric": "METHOD_CALL_ARGUMENTS_CHANGE",
                "Method": "com.qmuiteam.qmui.widget.QMUITopBar.initVar().put(String, Integer)",
                "Local": "L[115,115], C[9,85]",
                "Detail": null,
                "Code": "mDefaultSkinAttrs.put(QMUISkinValueBuilder.BACKGROUND,R.attr.qmui_topbar_bg)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/QMUITopBar.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.QMUITopBar.onMeasure(int, int)",
                "Local": "L[682,684], C[51,17]",
                "Detail": null,
                "Code": "{\n  leftViewWidth+=view.getMeasuredWidth();\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/QMUITopBar.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.QMUITopBar.onMeasure(int, int)",
                "Local": "L[690,692], C[51,17]",
                "Detail": null,
                "Code": "{\n  rightViewWidth+=view.getMeasuredWidth();\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/QMUITopBar.java"
            },
            {
                "Metric": "METHOD_CALL_ARGUMENTS_CHANGE",
                "Method": "com.qmuiteam.qmui.widget.QMUITopBarLayout.QMUITopBarLayout(Context, AttributeSet, int).put(String, Integer)",
                "Local": "L[64,64], C[9,85]",
                "Detail": null,
                "Code": "mDefaultSkinAttrs.put(QMUISkinValueBuilder.BACKGROUND,R.attr.qmui_topbar_bg)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/QMUITopBarLayout.java"
            },
            {
                "Metric": "CHANGED_FieldDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITab",
                "Local": "L[53,53], C[5,24]",
                "Detail": null,
                "Code": "int normalColorAttr;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITab.java"
            },
            {
                "Metric": "RENAME_ELEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITab",
                "Local": "L[135,137], C[5,5]",
                "Detail": null,
                "Code": "public int getSelectedColorAttr(){\n  return selectedColorAttr;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITab.java"
            },
            {
                "Metric": "CHANGED_FieldDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITab",
                "Local": "L[54,54], C[5,26]",
                "Detail": null,
                "Code": "int selectedColorAttr;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITab.java"
            },
            {
                "Metric": "RENAME_ELEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITab",
                "Local": "L[131,133], C[5,5]",
                "Detail": null,
                "Code": "public int getNormalColorAttr(){\n  return normalColorAttr;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITab.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITab.getNormalColorAttr()",
                "Local": "L[131,131], C[5,10]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITab.java"
            },
            {
                "Metric": "REMOVED_Modifier",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITab.getNormalColor()",
                "Local": "L[131,131], C[5,10]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITab.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITab.getSelectedColorAttr()",
                "Local": "L[135,135], C[5,10]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITab.java"
            },
            {
                "Metric": "REMOVED_Modifier",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITab.getSelectedColor()",
                "Local": "L[135,135], C[5,10]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITab.java"
            },
            {
                "Metric": "ADDED_RETURN_VALUE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITab.getSelectedColorAttr()",
                "Local": "L[136,136], C[9,33]",
                "Detail": null,
                "Code": "return selectedColorAttr;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITab.java"
            },
            {
                "Metric": "REMOVED_RETURN_VALUE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITab.getSelectedColor()",
                "Local": "L[136,136], C[9,29]",
                "Detail": null,
                "Code": "return selectedColor;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITab.java"
            },
            {
                "Metric": "ADDED_RETURN_VALUE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITab.getNormalColorAttr()",
                "Local": "L[132,132], C[9,31]",
                "Detail": null,
                "Code": "return normalColorAttr;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITab.java"
            },
            {
                "Metric": "REMOVED_RETURN_VALUE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITab.getNormalColor()",
                "Local": "L[132,132], C[9,27]",
                "Detail": null,
                "Code": "return normalColor;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITab.java"
            },
            {
                "Metric": "CHANGED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.build()",
                "Local": "L[261,261], C[9,55]",
                "Detail": null,
                "Code": "tab.selectedColorAttr=this.selectedColorAttr;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_RETURN_VALUE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColorAttr(int, int)",
                "Local": "L[218,218], C[9,20]",
                "Detail": null,
                "Code": "return this;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColorAttr(int, int)",
                "Local": "L[216,216], C[9,47]",
                "Detail": null,
                "Code": "this.normalColorAttr=normalColorAttr;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColorAttr(int, int)",
                "Local": "L[217,217], C[9,51]",
                "Detail": null,
                "Code": "this.selectedColorAttr=selectedColorAttr;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_FieldAccess",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColorAttr(int, int)",
                "Local": "L[217,217], C[9,30]",
                "Detail": null,
                "Code": "this.selectedColorAttr",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "REMOVED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColor(int, int)",
                "Local": "L[216,216], C[9,12]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "CHANGED_FieldAccess",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.build()",
                "Local": "L[261,261], C[33,54]",
                "Detail": null,
                "Code": "this.selectedColorAttr",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "REMOVED_FieldAccess",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColor(int, int)",
                "Local": "L[215,215], C[9,24]",
                "Detail": null,
                "Code": "this.normalColor",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "REMOVED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColor(int, int)",
                "Local": "L[215,215], C[9,12]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "CHANGED_FieldDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder",
                "Local": "L[54,57], C[5,63]",
                "Detail": null,
                "Code": "/** \n * text color(icon color in if dynamicChangeIconColor == true) in  normal state\n */\nprivate int normalColorAttr=R.attr.qmui_tab_normal_color;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "CHANGED_FieldDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder",
                "Local": "L[58,61], C[5,67]",
                "Detail": null,
                "Code": "/** \n * text color(icon color in if dynamicChangeIconColor == true) in  selected state\n */\nprivate int selectedColorAttr=R.attr.qmui_tab_selected_color;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_METHOD",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder",
                "Local": "L[215,219], C[5,5]",
                "Detail": null,
                "Code": "public QMUITabBuilder setColorAttr(int normalColorAttr,int selectedColorAttr){\n  this.normalColorAttr=normalColorAttr;\n  this.selectedColorAttr=selectedColorAttr;\n  return this;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "REMOVED_METHOD",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder",
                "Local": "L[214,218], C[5,5]",
                "Detail": null,
                "Code": "public QMUITabBuilder setColor(int normalColor,int selectedColor){\n  this.normalColor=normalColor;\n  this.selectedColor=selectedColor;\n  return this;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "CHANGED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.QMUITabBuilder(QMUITabBuilder)",
                "Local": "L[142,142], C[9,57]",
                "Detail": null,
                "Code": "this.selectedColorAttr=other.selectedColorAttr;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.FieldDeclaration",
                "Local": "L[61,61], C[17,66]",
                "Detail": null,
                "Code": "selectedColorAttr=R.attr.qmui_tab_selected_color",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "REMOVED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColor(int, int)",
                "Local": "L[217,217], C[16,19]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColorAttr(int, int)",
                "Local": "L[216,216], C[9,12]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColorAttr(int, int)",
                "Local": "L[215,215], C[5,10]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "REMOVED_FieldAccess",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColor(int, int)",
                "Local": "L[216,216], C[9,26]",
                "Detail": null,
                "Code": "this.selectedColor",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "REMOVED_RETURN_VALUE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColor(int, int)",
                "Local": "L[217,217], C[9,20]",
                "Detail": null,
                "Code": "return this;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "REMOVED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColor(int, int)",
                "Local": "L[215,215], C[9,39]",
                "Detail": null,
                "Code": "this.normalColor=normalColor;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "REMOVED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColor(int, int)",
                "Local": "L[216,216], C[9,43]",
                "Detail": null,
                "Code": "this.selectedColor=selectedColor;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "CHANGED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.QMUITabBuilder(QMUITabBuilder)",
                "Local": "L[141,141], C[9,53]",
                "Detail": null,
                "Code": "this.normalColorAttr=other.normalColorAttr;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColorAttr(int, int)",
                "Local": "L[217,217], C[9,12]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_FieldAccess",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColorAttr(int, int)",
                "Local": "L[216,216], C[9,28]",
                "Detail": null,
                "Code": "this.normalColorAttr",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_RETURN_VALUE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setNormalIconSizeInfo(int, int)",
                "Local": "L[189,189], C[9,20]",
                "Detail": null,
                "Code": "return this;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[23,23], C[1,27]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.R;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[23,23], C[1,27]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.R;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.FieldDeclaration",
                "Local": "L[57,57], C[17,62]",
                "Detail": null,
                "Code": "normalColorAttr=R.attr.qmui_tab_normal_color",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColorAttr(int, int)",
                "Local": "L[218,218], C[16,19]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "CHANGED_FieldAccess",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.QMUITabBuilder(QMUITabBuilder)",
                "Local": "L[141,141], C[9,28]",
                "Detail": null,
                "Code": "this.normalColorAttr",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "CHANGED_FieldAccess",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.QMUITabBuilder(QMUITabBuilder)",
                "Local": "L[142,142], C[9,30]",
                "Detail": null,
                "Code": "this.selectedColorAttr",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "CHANGED_FieldAccess",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.build()",
                "Local": "L[260,260], C[31,50]",
                "Detail": null,
                "Code": "this.normalColorAttr",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "REMOVED_Modifier",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.setColor(int, int)",
                "Local": "L[214,214], C[5,10]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "CHANGED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabBuilder.build()",
                "Local": "L[260,260], C[9,51]",
                "Detail": null,
                "Code": "tab.normalColorAttr=this.normalColorAttr;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabBuilder.java"
            },
            {
                "Metric": "ADDED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabIcon.QMUITabIcon(Drawable, Drawable)",
                "Local": "L[40,40], C[13,65]",
                "Detail": null,
                "Code": "selectedIconDrawable=selectedIconDrawable.mutate();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabIcon.java"
            },
            {
                "Metric": "ADDED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabIcon.QMUITabIcon(Drawable, Drawable)",
                "Local": "L[38,38], C[9,58]",
                "Detail": null,
                "Code": "mNormalIconDrawable=normalIconDrawable.mutate();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabIcon.java"
            },
            {
                "Metric": "REMOVED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabIcon.QMUITabIcon(Drawable, Drawable)",
                "Local": "L[38,38], C[9,49]",
                "Detail": null,
                "Code": "mNormalIconDrawable=normalIconDrawable;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabIcon.java"
            },
            {
                "Metric": "ADDED_NullLiteral",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabIcon.QMUITabIcon(Drawable, Drawable)",
                "Local": "L[39,39], C[36,39]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabIcon.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabIcon.QMUITabIcon(Drawable, Drawable)",
                "Local": "L[39,41], C[41,9]",
                "Detail": null,
                "Code": "{\n  selectedIconDrawable=selectedIconDrawable.mutate();\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabIcon.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabIcon.QMUITabIcon(Drawable, Drawable)",
                "Local": "L[40,40], C[36,64]",
                "Detail": null,
                "Code": "selectedIconDrawable.mutate()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabIcon.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabIcon.QMUITabIcon(Drawable, Drawable)",
                "Local": "L[38,38], C[31,57]",
                "Detail": null,
                "Code": "normalIconDrawable.mutate()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabIcon.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabIcon.QMUITabIcon(Drawable, Drawable)",
                "Local": "L[39,39], C[12,39]",
                "Detail": null,
                "Code": "selectedIconDrawable != null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabIcon.java"
            },
            {
                "Metric": "ADDED_CLASS_INSTANCE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment",
                "Local": "L[158,158], C[54,68]",
                "Detail": null,
                "Code": "new HashMap<>()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ClassInstanceCreation",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment",
                "Local": "L[158,158], C[54,68]",
                "Detail": null,
                "Code": "new HashMap<>()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.layoutIndicatorInTransition(QMUITab, QMUITab, float)",
                "Local": "L[581,582], C[30,81]",
                "Detail": null,
                "Code": "QMUIColorHelper.computeColor(preModel.selectedColor,targetModel.selectedColor,offsetPercent)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int)",
                "Local": "L[220,220], C[9,82]",
                "Detail": null,
                "Code": "mDefaultSkinAttrs.put(QMUISkinValueBuilder.BACKGROUND,R.attr.qmui_tab_bg)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int).getColor(UNKNOWN, UNKNOWN)",
                "Local": "L[187,187], C[17,81]",
                "Detail": null,
                "Code": "ContextCompat.getColor(context,R.color.qmui_config_color_gray_5)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>).defaultHandleSkinAttrs(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[1329,1329], C[40,43]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_FieldDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment",
                "Local": "L[158,158], C[5,69]",
                "Detail": null,
                "Code": "private Map<String,Integer> mDefaultSkinAttrs=new HashMap<>();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_METHOD",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment",
                "Local": "L[1321,1324], C[5,5]",
                "Detail": null,
                "Code": "@Override public Map<String,Integer> getDefaultSkinAttrs(){\n  return mDefaultSkinAttrs;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_METHOD",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment",
                "Local": "L[1326,1330], C[5,5]",
                "Detail": null,
                "Code": "@Override public void handle(QMUISkinManager manager,int skinIndex,Resources.Theme theme,Map<String,Integer> attrs){\n  layoutIndicator(mTabAdapter.getItem(mCurrentSelectedIndex),true);\n  manager.defaultHandleSkinAttrs(this,theme,attrs);\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.layoutIndicatorInTransition(QMUITab, QMUITab, float).computeColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[590,590], C[17,77]",
                "Detail": null,
                "Code": "QMUISkinHelper.getSkinColor(this,preModel.selectedColorAttr)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.layoutIndicatorInTransition(QMUITab, QMUITab, float).computeColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[591,591], C[17,80]",
                "Detail": null,
                "Code": "QMUISkinHelper.getSkinColor(this,targetModel.selectedColorAttr)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_CLASS_INSTANCE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int).setTextSize(UNKNOWN, UNKNOWN)",
                "Local": "L[203,203], C[23,49]",
                "Detail": null,
                "Code": "new QMUITabBuilder(context)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "REMOVED_CLASS_INSTANCE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int).setColor(UNKNOWN, UNKNOWN)",
                "Local": "L[198,198], C[23,49]",
                "Detail": null,
                "Code": "new QMUITabBuilder(context)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ClassInstanceCreation",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int).setTextSize(UNKNOWN, UNKNOWN)",
                "Local": "L[203,203], C[23,49]",
                "Detail": null,
                "Code": "new QMUITabBuilder(context)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_MarkerAnnotation",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>)",
                "Local": "L[1326,1326], C[5,13]",
                "Detail": null,
                "Code": "@Override",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>)",
                "Local": "L[1327,1327], C[5,10]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.layoutIndicatorInTransition(QMUITab, QMUITab, float)",
                "Local": "L[589,592], C[30,30]",
                "Detail": null,
                "Code": "QMUIColorHelper.computeColor(QMUISkinHelper.getSkinColor(this,preModel.selectedColorAttr),QMUISkinHelper.getSkinColor(this,targetModel.selectedColorAttr),offsetPercent)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.layoutIndicator(QMUITab, boolean).getSkinColor(UNKNOWN, UNKNOWN)",
                "Local": "L[575,575], C[98,101]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ParameterizedType",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>).SingleVariableDeclaration",
                "Local": "L[1327,1327], C[87,106]",
                "Detail": null,
                "Code": "Map<String,Integer>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int)",
                "Local": "L[186,187], C[9,83]",
                "Detail": null,
                "Code": "int normalTextColor=array.getColor(R.styleable.QMUITabSegment_qmui_tab_normal_color,ContextCompat.getColor(context,R.color.qmui_config_color_gray_5));\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int)",
                "Local": "L[188,189], C[9,84]",
                "Detail": null,
                "Code": "int selectedTextColor=array.getColor(R.styleable.QMUITabSegment_qmui_tab_selected_color,QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_blue));\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "CHANGED_IF_CONDITION",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.updateIndicatorPosition(int, float)",
                "Local": "L[598,600], C[78,9]",
                "Detail": null,
                "Code": "{\n  return;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.updateIndicatorPosition(int, float)",
                "Local": "L[611,613], C[75,9]",
                "Detail": null,
                "Code": "{\n  return;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "CHANGED_EXPRESSIONSTATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int)",
                "Local": "L[203,206], C[9,53]",
                "Detail": null,
                "Code": "mTabBuilder=new QMUITabBuilder(context).setTextSize(normalTextSize,selectedTextSize).setIconPosition(array.getInt(R.styleable.QMUITabSegment_qmui_tab_icon_position,QMUITab.ICON_POSITION_LEFT));\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int)",
                "Local": "L[203,204], C[23,62]",
                "Detail": null,
                "Code": "new QMUITabBuilder(context).setTextSize(normalTextSize,selectedTextSize)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int)",
                "Local": "L[198,199], C[23,61]",
                "Detail": null,
                "Code": "new QMUITabBuilder(context).setColor(normalTextColor,selectedTextColor)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>).layoutIndicator(QMUITab, boolean)",
                "Local": "L[1328,1328], C[25,66]",
                "Detail": null,
                "Code": "mTabAdapter.getItem(mCurrentSelectedIndex)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_BooleanLiteral",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>).layoutIndicator(QMUITab, boolean)",
                "Local": "L[1328,1328], C[69,72]",
                "Detail": null,
                "Code": "true",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.FieldDeclaration",
                "Local": "L[158,158], C[5,11]",
                "Detail": null,
                "Code": "private",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ParameterizedType",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.FieldDeclaration",
                "Local": "L[158,158], C[13,32]",
                "Detail": null,
                "Code": "Map<String,Integer>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int)",
                "Local": "L[218,218], C[9,101]",
                "Detail": null,
                "Code": "mDefaultSkinAttrs.put(QMUISkinValueBuilder.BOTTOM_SEPARATOR,R.attr.qmui_tab_separator_color)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>)",
                "Local": "L[1328,1328], C[9,73]",
                "Detail": null,
                "Code": "layoutIndicator(mTabAdapter.getItem(mCurrentSelectedIndex),true)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int)",
                "Local": "L[219,219], C[9,98]",
                "Detail": null,
                "Code": "mDefaultSkinAttrs.put(QMUISkinValueBuilder.TOP_SEPARATOR,R.attr.qmui_tab_separator_color)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>)",
                "Local": "L[1329,1329], C[9,58]",
                "Detail": null,
                "Code": "manager.defaultHandleSkinAttrs(this,theme,attrs)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int)",
                "Local": "L[188,189], C[33,83]",
                "Detail": null,
                "Code": "array.getColor(R.styleable.QMUITabSegment_qmui_tab_selected_color,QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_blue))",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.layoutIndicatorInTransition(QMUITab, QMUITab, float).getSkinColor(UNKNOWN, UNKNOWN)",
                "Local": "L[591,591], C[45,48]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.layoutIndicatorInTransition(QMUITab, QMUITab, float).getSkinColor(UNKNOWN, UNKNOWN)",
                "Local": "L[590,590], C[45,48]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_RETURN_VALUE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.getDefaultSkinAttrs()",
                "Local": "L[1323,1323], C[9,33]",
                "Detail": null,
                "Code": "return mDefaultSkinAttrs;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_INTERFACE",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[63,1331], C[1,1]",
                "Detail": null,
                "Code": "/** \n * <p>用于横向多个 Tab 的布局，可以灵活配置 Tab</p> <ul> <li>可以用 xml 和 QMUITabSegment 提供的 set 方法统一配置文字颜色、icon 位置、是否要下划线等</li> <li>每个 Tab 都可以非常灵活的配置，如果没有提供相关配置，则使用 QMUITabSegment 提供的配置，具体参考  {@link QMUITab}</li> <li>可以通过  {@link #setupWithViewPager(ViewPager)} 与 {@link ViewPager} 绑定</li></ul> <p> <h3>使用case: </h3> <ul> <li> 如果  {@link ViewPager} 的 {@link PagerAdapter} 有覆写 {@link PagerAdapter#getPageTitle(int)} 方法, 那么直接使用 {@link #setupWithViewPager(ViewPager)} 方法与 {@link ViewPager} 绑定即可。QMUITabSegment 会将  {@link PagerAdapter#getPageTitle(int)} 返回的字符串作为 Tab 的文案</li> <li> 如果你希望自己设置 Tab 的文案或图片，那么通过 {@link #addTab(QMUITab)}添加 Tab: <code> QMUITabSegment mTabSegment = new QMUITabSegment((getContext()); // config mTabSegment QMUITabBuilder tabBuilder = mTabSegment.tabBuilder() mTabSegment.addTab(tabBuilder.setText(\"item 1\").build()); mTabSegment.addTab(tabBuilder.setText(\"item 2\").build()); mTabSegment.setupWithViewPager(viewpager, false); //第二个参数要为false,表示不从adapter拿数据 </code> </li> <li> 如果你想更改tab,则调用 {@link #updateTabText(int,String)} 或者 {@link #replaceTab(int,QMUITab)}<code> mTabSegment.updateTabText(1, \"update item content\"); mTabSegment.replaceTab(1, tabBuilder.setText(\"replace item\").build()); </code> </li> <li> 如果你想更换全部Tab,需要在addTab前调用 {@link #reset()}进行重置，addTab后调用 {@link #notifyDataChanged()} 将数据应用到View上：<code> mTabSegment.reset(); // update mTabSegment with new config QMUITabBuilder tabBuilder = mTabSegment.tabBuilder() mTabSegment.addTab(tabBuilder.setText(\"new item 1\").build()); mTabSegment.addTab(tabBuilder.setText(\"new item 1\").build()); mTabSegment.notifyDataChanged(); </code> </li> </ul>\n * @author cginechen\n * @date 2016-01-27\n */\npublic class QMUITabSegment extends HorizontalScrollView implements IQMUILayout, IQMUISkinHandlerView, IQMUISkinDefaultAttrProvider {\n  private static final String TAG=\"QMUITabSegment\";\n  public static final int MODE_SCROLLABLE=0;\n  public static final int MODE_FIXED=1;\n  private static final int NO_POSITION=-1;\n  private final ArrayList<OnTabSelectedListener> mSelectedListeners=new ArrayList<>();\n  private Container mContentLayout;\n  private int mCurrentSelectedIndex=NO_POSITION;\n  private int mPendingSelectedIndex=NO_POSITION;\n  private QMUITabIndicator mIndicator=null;\n  /** \n * TabSegmentMode\n */\n  @Mode private int mMode=MODE_FIXED;\n  /** \n * item gap in MODE_SCROLLABLE\n */\n  private int mItemSpaceInScrollMode;\n  /** \n * the scrollState of ViewPager\n */\n  private int mViewPagerScrollState=ViewPager.SCROLL_STATE_IDLE;\n  private QMUITabAdapter mTabAdapter;\n  private QMUITabBuilder mTabBuilder;\n  private Animator mSelectAnimator;\n  private OnTabClickListener mOnTabClickListener;\n  private ViewPager mViewPager;\n  private PagerAdapter mPagerAdapter;\n  private DataSetObserver mPagerAdapterObserver;\n  private ViewPager.OnPageChangeListener mOnPageChangeListener;\n  private OnTabSelectedListener mViewPagerSelectedListener;\n  private AdapterChangeListener mAdapterChangeListener;\n  private boolean mIsInSelectTab=false;\n  private QMUILayoutHelper mLayoutHelper;\n  private Map<String,Integer> mDefaultSkinAttrs=new HashMap<>();\n  public QMUITabSegment(  Context context){\n    this(context,null);\n  }\n  public QMUITabSegment(  Context context,  AttributeSet attrs){\n    this(context,attrs,R.attr.QMUITabSegmentStyle);\n  }\n  public QMUITabSegment(  Context context,  AttributeSet attrs,  int defStyleAttr){\n    super(context,attrs,defStyleAttr);\n    setWillNotDraw(false);\n    mLayoutHelper=new QMUILayoutHelper(context,attrs,defStyleAttr,this);\n    init(context,attrs,defStyleAttr);\n    setHorizontalScrollBarEnabled(false);\n    setClipToPadding(false);\n    setClipChildren(false);\n  }\n  private void init(  Context context,  AttributeSet attrs,  int defStyleAttr){\n    TypedArray array=context.obtainStyledAttributes(attrs,R.styleable.QMUITabSegment,defStyleAttr,0);\n    boolean hasIndicator=array.getBoolean(R.styleable.QMUITabSegment_qmui_tab_has_indicator,false);\n    int indicatorHeight=array.getDimensionPixelSize(R.styleable.QMUITabSegment_qmui_tab_indicator_height,getResources().getDimensionPixelSize(R.dimen.qmui_tab_segment_indicator_height));\n    boolean indicatorTop=array.getBoolean(R.styleable.QMUITabSegment_qmui_tab_indicator_top,false);\n    boolean indicatorWidthFollowContent=array.getBoolean(R.styleable.QMUITabSegment_qmui_tab_indicator_with_follow_content,false);\n    mIndicator=createTabIndicatorFromXmlInfo(hasIndicator,indicatorHeight,indicatorTop,indicatorWidthFollowContent);\n    int normalTextSize=array.getDimensionPixelSize(R.styleable.QMUITabSegment_android_textSize,getResources().getDimensionPixelSize(R.dimen.qmui_tab_segment_text_size));\n    normalTextSize=array.getDimensionPixelSize(R.styleable.QMUITabSegment_qmui_tab_normal_text_size,normalTextSize);\n    int selectedTextSize=normalTextSize;\n    selectedTextSize=array.getDimensionPixelSize(R.styleable.QMUITabSegment_qmui_tab_selected_text_size,selectedTextSize);\n    mTabBuilder=new QMUITabBuilder(context).setTextSize(normalTextSize,selectedTextSize).setIconPosition(array.getInt(R.styleable.QMUITabSegment_qmui_tab_icon_position,QMUITab.ICON_POSITION_LEFT));\n    mMode=array.getInt(R.styleable.QMUITabSegment_qmui_tab_mode,MODE_FIXED);\n    mItemSpaceInScrollMode=array.getDimensionPixelSize(R.styleable.QMUITabSegment_qmui_tab_space,QMUIDisplayHelper.dp2px(context,10));\n    array.recycle();\n    mContentLayout=new Container(context);\n    addView(mContentLayout,new FrameLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.MATCH_PARENT));\n    mTabAdapter=createTabAdapter(mContentLayout);\n    mDefaultSkinAttrs.put(QMUISkinValueBuilder.BOTTOM_SEPARATOR,R.attr.qmui_tab_separator_color);\n    mDefaultSkinAttrs.put(QMUISkinValueBuilder.TOP_SEPARATOR,R.attr.qmui_tab_separator_color);\n    mDefaultSkinAttrs.put(QMUISkinValueBuilder.BACKGROUND,R.attr.qmui_tab_bg);\n  }\n  protected QMUITabAdapter createTabAdapter(  ViewGroup tabParentView){\n    return new QMUITabAdapter(this,tabParentView);\n  }\n  protected QMUITabIndicator createTabIndicatorFromXmlInfo(  boolean hasIndicator,  int indicatorHeight,  boolean indicatorTop,  boolean indicatorWidthFollowContent){\n    if (!hasIndicator) {\n      return null;\n    }\n    return new QMUITabIndicator(indicatorHeight,indicatorTop,indicatorWidthFollowContent);\n  }\n  public QMUITabBuilder tabBuilder(){\n    return new QMUITabBuilder(mTabBuilder);\n  }\n  /** \n * replace with custom indicator\n * @param indicator if null, present there is not a indicator\n */\n  public void setIndicator(  @Nullable QMUITabIndicator indicator){\n    mIndicator=indicator;\n    mContentLayout.requestLayout();\n  }\n  public void setItemSpaceInScrollMode(  int itemSpaceInScrollMode){\n    mItemSpaceInScrollMode=itemSpaceInScrollMode;\n  }\n  /** \n * clear all tabs\n */\n  public void reset(){\n    mTabAdapter.clear();\n    mCurrentSelectedIndex=NO_POSITION;\n    if (mSelectAnimator != null) {\n      mSelectAnimator.cancel();\n      mSelectAnimator=null;\n    }\n  }\n  /** \n * add a tab to QMUITabSegment\n * @param tab QMUITab\n * @return return this to chain\n */\n  public QMUITabSegment addTab(  QMUITab tab){\n    mTabAdapter.addItem(tab);\n    return this;\n  }\n  /** \n * notify dataChanged event to QMUITabSegment\n */\n  public void notifyDataChanged(){\n    mTabAdapter.setup();\n    populateFromPagerAdapter(false);\n  }\n  public void addOnTabSelectedListener(  @NonNull OnTabSelectedListener listener){\n    if (!mSelectedListeners.contains(listener)) {\n      mSelectedListeners.add(listener);\n    }\n  }\n  public void removeOnTabSelectedListener(  @NonNull OnTabSelectedListener listener){\n    mSelectedListeners.remove(listener);\n  }\n  public void clearOnTabSelectedListeners(){\n    mSelectedListeners.clear();\n  }\n  public int getMode(){\n    return mMode;\n  }\n  public void setMode(  @Mode int mode){\n    if (mMode != mode) {\n      mMode=mode;\n      mContentLayout.invalidate();\n    }\n  }\n  void onClickTab(  int index){\n    if (mSelectAnimator != null || mViewPagerScrollState != ViewPager.SCROLL_STATE_IDLE) {\n      return;\n    }\n    QMUITab model=mTabAdapter.getItem(index);\n    if (model != null) {\n      selectTab(index,false,true);\n    }\n    if (mOnTabClickListener != null) {\n      mOnTabClickListener.onTabClick(index);\n    }\n  }\n  void onDoubleClick(  int index){\n    if (mSelectedListeners.isEmpty()) {\n      return;\n    }\n    QMUITab model=mTabAdapter.getItem(index);\n    if (model != null) {\n      dispatchTabDoubleTap(index);\n    }\n  }\n  public void setupWithViewPager(  @Nullable ViewPager viewPager){\n    setupWithViewPager(viewPager,true);\n  }\n  public void setupWithViewPager(  @Nullable ViewPager viewPager,  boolean useAdapterTitle){\n    setupWithViewPager(viewPager,useAdapterTitle,true);\n  }\n  /** \n * associate QMUITabSegment with a  {@link ViewPager}\n * @param viewPager       the ViewPager to associate\n * @param useAdapterTitle populate the tab with viewPager.adapter.getTitle\n * @param autoRefresh     refresh QMUITabSegment when viewPager.adapter changed.\n */\n  public void setupWithViewPager(  @Nullable final ViewPager viewPager,  boolean useAdapterTitle,  boolean autoRefresh){\n    if (mViewPager != null) {\n      if (mOnPageChangeListener != null) {\n        mViewPager.removeOnPageChangeListener(mOnPageChangeListener);\n      }\n      if (mAdapterChangeListener != null) {\n        mViewPager.removeOnAdapterChangeListener(mAdapterChangeListener);\n      }\n    }\n    if (mViewPagerSelectedListener != null) {\n      removeOnTabSelectedListener(mViewPagerSelectedListener);\n      mViewPagerSelectedListener=null;\n    }\n    if (viewPager != null) {\n      mViewPager=viewPager;\n      if (mOnPageChangeListener == null) {\n        mOnPageChangeListener=new TabLayoutOnPageChangeListener(this);\n      }\n      viewPager.addOnPageChangeListener(mOnPageChangeListener);\n      mViewPagerSelectedListener=new ViewPagerOnTabSelectedListener(viewPager);\n      addOnTabSelectedListener(mViewPagerSelectedListener);\n      final PagerAdapter adapter=viewPager.getAdapter();\n      if (adapter != null) {\n        setPagerAdapter(adapter,useAdapterTitle,autoRefresh);\n      }\n      if (mAdapterChangeListener == null) {\n        mAdapterChangeListener=new AdapterChangeListener(useAdapterTitle);\n      }\n      mAdapterChangeListener.setAutoRefresh(autoRefresh);\n      viewPager.addOnAdapterChangeListener(mAdapterChangeListener);\n    }\n else {\n      mViewPager=null;\n      setPagerAdapter(null,false,false);\n    }\n  }\n  private void dispatchTabSelected(  int index){\n    for (int i=mSelectedListeners.size() - 1; i >= 0; i--) {\n      mSelectedListeners.get(i).onTabSelected(index);\n    }\n  }\n  private void dispatchTabUnselected(  int index){\n    for (int i=mSelectedListeners.size() - 1; i >= 0; i--) {\n      mSelectedListeners.get(i).onTabUnselected(index);\n    }\n  }\n  private void dispatchTabReselected(  int index){\n    for (int i=mSelectedListeners.size() - 1; i >= 0; i--) {\n      mSelectedListeners.get(i).onTabReselected(index);\n    }\n  }\n  private void dispatchTabDoubleTap(  int index){\n    for (int i=mSelectedListeners.size() - 1; i >= 0; i--) {\n      mSelectedListeners.get(i).onDoubleTap(index);\n    }\n  }\n  private void setViewPagerScrollState(  int state){\n    mViewPagerScrollState=state;\n    if (mViewPagerScrollState == ViewPager.SCROLL_STATE_IDLE) {\n      if (mPendingSelectedIndex != NO_POSITION && mSelectAnimator == null) {\n        selectTab(mPendingSelectedIndex,true,false);\n        mPendingSelectedIndex=NO_POSITION;\n      }\n    }\n  }\n  public void selectTab(  int index){\n    selectTab(index,false,false);\n  }\n  public void selectTab(  final int index,  boolean noAnimation,  boolean fromTabClick){\n    if (mIsInSelectTab) {\n      return;\n    }\n    mIsInSelectTab=true;\n    List<QMUITabView> listViews=mTabAdapter.getViews();\n    if (listViews.size() != mTabAdapter.getSize()) {\n      mTabAdapter.setup();\n      listViews=mTabAdapter.getViews();\n    }\n    if (listViews.size() == 0 || listViews.size() <= index) {\n      mIsInSelectTab=false;\n      return;\n    }\n    if (mSelectAnimator != null || mViewPagerScrollState != ViewPager.SCROLL_STATE_IDLE) {\n      mPendingSelectedIndex=index;\n      mIsInSelectTab=false;\n      return;\n    }\n    if (mCurrentSelectedIndex == index) {\n      if (fromTabClick) {\n        dispatchTabReselected(index);\n      }\n      mIsInSelectTab=false;\n      mContentLayout.invalidate();\n      return;\n    }\n    if (mCurrentSelectedIndex > listViews.size()) {\n      Log.i(TAG,\"selectTab: current selected index is bigger than views size.\");\n      mCurrentSelectedIndex=NO_POSITION;\n    }\n    if (mCurrentSelectedIndex == NO_POSITION) {\n      QMUITab model=mTabAdapter.getItem(index);\n      layoutIndicator(model,true);\n      listViews.get(index).setSelectFraction(1f);\n      dispatchTabSelected(index);\n      mCurrentSelectedIndex=index;\n      mIsInSelectTab=false;\n      return;\n    }\n    final int prev=mCurrentSelectedIndex;\n    final QMUITab prevModel=mTabAdapter.getItem(prev);\n    final QMUITabView prevView=listViews.get(prev);\n    final QMUITab nowModel=mTabAdapter.getItem(index);\n    final QMUITabView nowView=listViews.get(index);\n    if (noAnimation) {\n      dispatchTabUnselected(prev);\n      dispatchTabSelected(index);\n      prevView.setSelectFraction(0f);\n      nowView.setSelectFraction(1f);\n      if (getScrollX() > nowView.getLeft()) {\n        smoothScrollTo(nowView.getLeft(),0);\n      }\n else {\n        int realWidth=getWidth() - getPaddingRight() - getPaddingLeft();\n        if (getScrollX() + realWidth < nowView.getRight()) {\n          smoothScrollBy(nowView.getRight() - realWidth - getScrollX(),0);\n        }\n      }\n      mCurrentSelectedIndex=index;\n      mIsInSelectTab=false;\n      layoutIndicator(nowModel,true);\n      return;\n    }\n    final ValueAnimator animator=ValueAnimator.ofFloat(0f,1f);\n    animator.setInterpolator(QMUIInterpolatorStaticHolder.LINEAR_INTERPOLATOR);\n    animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){\n      @Override public void onAnimationUpdate(      ValueAnimator animation){\n        float animValue=(float)animation.getAnimatedValue();\n        prevView.setSelectFraction(1 - animValue);\n        nowView.setSelectFraction(animValue);\n        layoutIndicatorInTransition(prevModel,nowModel,animValue);\n      }\n    }\n);\n    animator.addListener(new Animator.AnimatorListener(){\n      @Override public void onAnimationStart(      Animator animation){\n        mSelectAnimator=animation;\n      }\n      @Override public void onAnimationEnd(      Animator animation){\n        mSelectAnimator=null;\n        prevView.setSelectFraction(0f);\n        nowView.setSelectFraction(1f);\n        dispatchTabSelected(index);\n        dispatchTabUnselected(prev);\n        mCurrentSelectedIndex=index;\n        if (mPendingSelectedIndex != NO_POSITION && mViewPagerScrollState == ViewPager.SCROLL_STATE_IDLE) {\n          selectTab(mPendingSelectedIndex,true,false);\n          mPendingSelectedIndex=NO_POSITION;\n        }\n      }\n      @Override public void onAnimationCancel(      Animator animation){\n        mSelectAnimator=null;\n        prevView.setSelectFraction(1f);\n        nowView.setSelectFraction(0f);\n        layoutIndicator(prevModel,true);\n      }\n      @Override public void onAnimationRepeat(      Animator animation){\n      }\n    }\n);\n    animator.setDuration(200);\n    animator.start();\n    mIsInSelectTab=false;\n  }\n  private void layoutIndicator(  QMUITab model,  boolean invalidate){\n    if (model == null || mIndicator == null) {\n      return;\n    }\n    mIndicator.updateInfo(model.contentLeft,model.contentWidth,QMUISkinHelper.getSkinColor(this,model.selectedColorAttr));\n    if (invalidate) {\n      mContentLayout.invalidate();\n    }\n  }\n  private void layoutIndicatorInTransition(  QMUITab preModel,  QMUITab targetModel,  float offsetPercent){\n    if (mIndicator == null) {\n      return;\n    }\n    final int leftDistance=targetModel.contentLeft - preModel.contentLeft;\n    final int widthDistance=targetModel.contentWidth - preModel.contentWidth;\n    final int targetLeft=(int)(preModel.contentLeft + leftDistance * offsetPercent);\n    final int targetWidth=(int)(preModel.contentWidth + widthDistance * offsetPercent);\n    int indicatorColor=QMUIColorHelper.computeColor(QMUISkinHelper.getSkinColor(this,preModel.selectedColorAttr),QMUISkinHelper.getSkinColor(this,targetModel.selectedColorAttr),offsetPercent);\n    mIndicator.updateInfo(targetLeft,targetWidth,indicatorColor);\n    mContentLayout.invalidate();\n  }\n  public void updateIndicatorPosition(  final int index,  float offsetPercent){\n    if (mSelectAnimator != null || mIsInSelectTab || offsetPercent == 0) {\n      return;\n    }\n    int targetIndex;\n    if (offsetPercent < 0) {\n      targetIndex=index - 1;\n      offsetPercent=-offsetPercent;\n    }\n else {\n      targetIndex=index + 1;\n    }\n    final List<QMUITabView> listViews=mTabAdapter.getViews();\n    if (listViews.size() <= index || listViews.size() <= targetIndex) {\n      return;\n    }\n    QMUITab preModel=mTabAdapter.getItem(index);\n    QMUITab targetModel=mTabAdapter.getItem(targetIndex);\n    QMUITabView preView=listViews.get(index);\n    QMUITabView targetView=listViews.get(targetIndex);\n    preView.setSelectFraction(1 - offsetPercent);\n    targetView.setSelectFraction(offsetPercent);\n    layoutIndicatorInTransition(preModel,targetModel,offsetPercent);\n  }\n  /** \n * 改变 Tab 的文案\n * @param index Tab 的 index\n * @param text  新文案\n */\n  public void updateTabText(  int index,  String text){\n    QMUITab model=mTabAdapter.getItem(index);\n    if (model == null) {\n      return;\n    }\n    model.setText(text);\n    notifyDataChanged();\n  }\n  /** \n * 整个 Tab 替换\n * @param index 需要被替换的 Tab 的 index\n * @param model 新的 Tab\n */\n  public void replaceTab(  int index,  QMUITab model){\n    try {\n      mTabAdapter.replaceItem(index,model);\n    }\n catch (    IllegalAccessException e) {\n      e.printStackTrace();\n    }\n  }\n  public void setOnTabClickListener(  OnTabClickListener onTabClickListener){\n    mOnTabClickListener=onTabClickListener;\n  }\n  void populateFromPagerAdapter(  boolean useAdapterTitle){\n    if (mPagerAdapter == null) {\n      if (useAdapterTitle) {\n        reset();\n      }\n      return;\n    }\n    final int adapterCount=mPagerAdapter.getCount();\n    if (useAdapterTitle) {\n      reset();\n      for (int i=0; i < adapterCount; i++) {\n        addTab(mTabBuilder.setText(mPagerAdapter.getPageTitle(i)).build());\n      }\n      notifyDataChanged();\n    }\n    if (mViewPager != null && adapterCount > 0) {\n      final int curItem=mViewPager.getCurrentItem();\n      selectTab(curItem,true,false);\n    }\n  }\n  @Override protected void onMeasure(  int widthMeasureSpec,  int heightMeasureSpec){\n    final int widthSize=MeasureSpec.getSize(widthMeasureSpec);\n    final int widthMode=MeasureSpec.getMode(widthMeasureSpec);\n    if (getChildCount() > 0) {\n      final View child=getChildAt(0);\n      int paddingHor=getPaddingLeft() + getPaddingRight();\n      child.measure(MeasureSpec.makeMeasureSpec(widthSize - paddingHor,MeasureSpec.EXACTLY),heightMeasureSpec);\n      if (widthMode == MeasureSpec.AT_MOST) {\n        setMeasuredDimension(Math.min(widthSize,child.getMeasuredWidth() + paddingHor),heightMeasureSpec);\n        return;\n      }\n    }\n    setMeasuredDimension(widthMeasureSpec,heightMeasureSpec);\n  }\n  void setPagerAdapter(  @Nullable final PagerAdapter adapter,  boolean useAdapterTitle,  final boolean addObserver){\n    if (mPagerAdapter != null && mPagerAdapterObserver != null) {\n      mPagerAdapter.unregisterDataSetObserver(mPagerAdapterObserver);\n    }\n    mPagerAdapter=adapter;\n    if (addObserver && adapter != null) {\n      if (mPagerAdapterObserver == null) {\n        mPagerAdapterObserver=new PagerAdapterObserver(useAdapterTitle);\n      }\n      adapter.registerDataSetObserver(mPagerAdapterObserver);\n    }\n    populateFromPagerAdapter(useAdapterTitle);\n  }\n  public int getSelectedIndex(){\n    return mCurrentSelectedIndex;\n  }\n  private int getTabCount(){\n    return mTabAdapter.getSize();\n  }\n  /** \n * get  {@link QMUITab} by index\n * @param index index\n * @return QMUITab\n */\n  public QMUITab getTab(  int index){\n    return mTabAdapter.getItem(index);\n  }\n  /** \n * show signCount/redPoint by index\n * @param index the index of tab\n * @param count if count > 0, show signCount; else if count == 0 show redPoint; else show nothing\n */\n  public void showSignCountView(  Context context,  int index,  int count){\n    QMUITab tab=mTabAdapter.getItem(index);\n    tab.setSignCount(count);\n    notifyDataChanged();\n  }\n  /** \n * clear signCount/redPoint by index\n * @param index the index of tab\n */\n  public void clearSignCountView(  int index){\n    QMUITab tab=mTabAdapter.getItem(index);\n    tab.clearSignCountOrRedPoint();\n    notifyDataChanged();\n  }\n  /** \n * get sign count by index\n * @param index the index of tab\n */\n  public int getSignCount(  int index){\n    QMUITab tab=mTabAdapter.getItem(index);\n    return tab.getSignCount();\n  }\n  /** \n * is redPoint showing ?\n * @param index the index of tab\n * @return true if redPoint is showing\n */\n  public boolean isRedPointShowing(  int index){\n    return mTabAdapter.getItem(index).isRedPointShowing();\n  }\n  @IntDef(value={MODE_SCROLLABLE,MODE_FIXED}) @Retention(RetentionPolicy.SOURCE) public @interface Mode {}\npublic interface OnTabClickListener {\n    /** \n * 当某个 Tab 被点击时会触发\n * @param index 被点击的 Tab 下标\n */\n    void onTabClick(    int index);\n  }\npublic interface OnTabSelectedListener {\n    /** \n * 当某个 Tab 被选中时会触发\n * @param index 被选中的 Tab 下标\n */\n    void onTabSelected(    int index);\n    /** \n * 当某个 Tab 被取消选中时会触发\n * @param index 被取消选中的 Tab 下标\n */\n    void onTabUnselected(    int index);\n    /** \n * 当某个 Tab 处于被选中状态下再次被点击时会触发\n * @param index 被再次点击的 Tab 下标\n */\n    void onTabReselected(    int index);\n    /** \n * 当某个 Tab 被双击时会触发\n * @param index 被双击的 Tab 下标\n */\n    void onDoubleTap(    int index);\n  }\npublic static class TabLayoutOnPageChangeListener implements ViewPager.OnPageChangeListener {\n    private final WeakReference<QMUITabSegment> mTabSegmentRef;\n    public TabLayoutOnPageChangeListener(    QMUITabSegment tabSegment){\n      mTabSegmentRef=new WeakReference<>(tabSegment);\n    }\n    @Override public void onPageScrollStateChanged(    final int state){\n      final QMUITabSegment tabSegment=mTabSegmentRef.get();\n      if (tabSegment != null) {\n        tabSegment.setViewPagerScrollState(state);\n      }\n    }\n    @Override public void onPageScrolled(    final int position,    final float positionOffset,    final int positionOffsetPixels){\n      final QMUITabSegment tabSegment=mTabSegmentRef.get();\n      if (tabSegment != null) {\n        tabSegment.updateIndicatorPosition(position,positionOffset);\n      }\n    }\n    @Override public void onPageSelected(    final int position){\n      final QMUITabSegment tabSegment=mTabSegmentRef.get();\n      if (tabSegment != null && tabSegment.mPendingSelectedIndex != NO_POSITION) {\n        tabSegment.mPendingSelectedIndex=position;\n        return;\n      }\n      if (tabSegment != null && tabSegment.getSelectedIndex() != position && position < tabSegment.getTabCount()) {\n        tabSegment.selectTab(position,true,false);\n      }\n    }\n  }\nprivate static class ViewPagerOnTabSelectedListener implements OnTabSelectedListener {\n    private final ViewPager mViewPager;\n    public ViewPagerOnTabSelectedListener(    ViewPager viewPager){\n      mViewPager=viewPager;\n    }\n    @Override public void onTabSelected(    int index){\n      mViewPager.setCurrentItem(index,false);\n    }\n    @Override public void onTabUnselected(    int index){\n    }\n    @Override public void onTabReselected(    int index){\n    }\n    @Override public void onDoubleTap(    int index){\n    }\n  }\nprivate class AdapterChangeListener implements ViewPager.OnAdapterChangeListener {\n    private boolean mAutoRefresh;\n    private final boolean mUseAdapterTitle;\n    AdapterChangeListener(    boolean useAdapterTitle){\n      mUseAdapterTitle=useAdapterTitle;\n    }\n    @Override public void onAdapterChanged(    @NonNull ViewPager viewPager,    @Nullable PagerAdapter oldAdapter,    @Nullable PagerAdapter newAdapter){\n      if (mViewPager == viewPager) {\n        setPagerAdapter(newAdapter,mUseAdapterTitle,mAutoRefresh);\n      }\n    }\n    void setAutoRefresh(    boolean autoRefresh){\n      mAutoRefresh=autoRefresh;\n    }\n  }\n  @Override protected void onLayout(  boolean changed,  int l,  int t,  int r,  int b){\n    super.onLayout(changed,l,t,r,b);\n    if (mCurrentSelectedIndex != NO_POSITION && mMode == MODE_SCROLLABLE) {\n      final QMUITabView view=mTabAdapter.getViews().get(mCurrentSelectedIndex);\n      if (getScrollX() > view.getLeft()) {\n        scrollTo(view.getLeft(),0);\n      }\n else {\n        int realWidth=getWidth() - getPaddingRight() - getPaddingLeft();\n        if (getScrollX() + realWidth < view.getRight()) {\n          scrollBy(view.getRight() - realWidth - getScrollX(),0);\n        }\n      }\n    }\n  }\nprivate class PagerAdapterObserver extends DataSetObserver {\n    private final boolean mUseAdapterTitle;\n    PagerAdapterObserver(    boolean useAdapterTitle){\n      mUseAdapterTitle=useAdapterTitle;\n    }\n    @Override public void onChanged(){\n      populateFromPagerAdapter(mUseAdapterTitle);\n    }\n    @Override public void onInvalidated(){\n      populateFromPagerAdapter(mUseAdapterTitle);\n    }\n  }\nprivate final class Container extends ViewGroup {\n    public Container(    Context context){\n      super(context);\n      setClipChildren(false);\n    }\n    @Override protected void onMeasure(    int widthMeasureSpec,    int heightMeasureSpec){\n      int widthSpecSize=MeasureSpec.getSize(widthMeasureSpec);\n      int heightSpecSize=MeasureSpec.getSize(heightMeasureSpec);\n      List<QMUITabView> childViews=mTabAdapter.getViews();\n      int size=childViews.size();\n      int i;\n      int visibleChild=0;\n      for (i=0; i < size; i++) {\n        View child=childViews.get(i);\n        if (child.getVisibility() == VISIBLE) {\n          visibleChild++;\n        }\n      }\n      if (size == 0 || visibleChild == 0) {\n        setMeasuredDimension(widthSpecSize,heightSpecSize);\n        return;\n      }\n      int childHeight=heightSpecSize - getPaddingTop() - getPaddingBottom();\n      int childWidthMeasureSpec, childHeightMeasureSpec, resultWidthSize=0;\n      if (mMode == MODE_FIXED) {\n        resultWidthSize=widthSpecSize;\n        int modeFixItemWidth=widthSpecSize / visibleChild;\n        for (i=0; i < size; i++) {\n          final View child=childViews.get(i);\n          if (child.getVisibility() != VISIBLE) {\n            continue;\n          }\n          childWidthMeasureSpec=MeasureSpec.makeMeasureSpec(modeFixItemWidth,MeasureSpec.EXACTLY);\n          childHeightMeasureSpec=MeasureSpec.makeMeasureSpec(childHeight,MeasureSpec.EXACTLY);\n          child.measure(childWidthMeasureSpec,childHeightMeasureSpec);\n          QMUITab tab=mTabAdapter.getItem(i);\n          tab.leftAddonMargin=0;\n          tab.rightAddonMargin=0;\n        }\n      }\n else {\n        float totalWeight=0;\n        for (i=0; i < size; i++) {\n          final View child=childViews.get(i);\n          if (child.getVisibility() != VISIBLE) {\n            continue;\n          }\n          childWidthMeasureSpec=MeasureSpec.makeMeasureSpec(widthSpecSize,MeasureSpec.AT_MOST);\n          childHeightMeasureSpec=MeasureSpec.makeMeasureSpec(childHeight,MeasureSpec.EXACTLY);\n          child.measure(childWidthMeasureSpec,childHeightMeasureSpec);\n          resultWidthSize+=child.getMeasuredWidth() + mItemSpaceInScrollMode;\n          QMUITab tab=mTabAdapter.getItem(i);\n          totalWeight+=tab.leftSpaceWeight + tab.rightSpaceWeight;\n          tab.leftAddonMargin=0;\n          tab.rightAddonMargin=0;\n        }\n        resultWidthSize-=mItemSpaceInScrollMode;\n        if (totalWeight > 0 && resultWidthSize < widthSpecSize) {\n          int remain=widthSpecSize - resultWidthSize;\n          resultWidthSize=widthSpecSize;\n          for (i=0; i < size; i++) {\n            final View child=childViews.get(i);\n            if (child.getVisibility() != VISIBLE) {\n              continue;\n            }\n            QMUITab tab=mTabAdapter.getItem(i);\n            tab.leftAddonMargin=(int)(remain * tab.leftSpaceWeight / totalWeight);\n            tab.rightAddonMargin=(int)(remain * tab.rightSpaceWeight / totalWeight);\n          }\n        }\n      }\n      setMeasuredDimension(resultWidthSize,heightSpecSize);\n    }\n    @Override protected void onLayout(    boolean changed,    int l,    int t,    int r,    int b){\n      List<QMUITabView> childViews=mTabAdapter.getViews();\n      int size=childViews.size();\n      int i;\n      int visibleChild=0;\n      for (i=0; i < size; i++) {\n        View child=childViews.get(i);\n        if (child.getVisibility() == VISIBLE) {\n          visibleChild++;\n        }\n      }\n      if (size == 0 || visibleChild == 0) {\n        return;\n      }\n      int usedLeft=getPaddingLeft();\n      for (i=0; i < size; i++) {\n        QMUITabView childView=childViews.get(i);\n        if (childView.getVisibility() != VISIBLE) {\n          continue;\n        }\n        final int childMeasureWidth=childView.getMeasuredWidth();\n        QMUITab model=mTabAdapter.getItem(i);\n        usedLeft+=model.leftAddonMargin;\n        childView.layout(usedLeft,getPaddingTop(),usedLeft + childMeasureWidth,b - t - getPaddingBottom());\n        int oldLeft, oldWidth, newLeft, newWidth;\n        oldLeft=model.contentLeft;\n        oldWidth=model.contentWidth;\n        if (mMode == MODE_FIXED && (mIndicator != null && mIndicator.isIndicatorWidthFollowContent())) {\n          newLeft=usedLeft + childView.getContentViewLeft();\n          newWidth=childView.getContentViewWidth();\n        }\n else {\n          newLeft=usedLeft;\n          newWidth=childMeasureWidth;\n        }\n        if (oldLeft != newLeft || oldWidth != newWidth) {\n          model.contentLeft=newLeft;\n          model.contentWidth=newWidth;\n        }\n        usedLeft=usedLeft + childMeasureWidth + model.rightAddonMargin+ (mMode == MODE_SCROLLABLE ? mItemSpaceInScrollMode : 0);\n      }\n      if (mCurrentSelectedIndex != NO_POSITION && mSelectAnimator == null && mViewPagerScrollState == ViewPager.SCROLL_STATE_IDLE) {\n        layoutIndicator(mTabAdapter.getItem(mCurrentSelectedIndex),false);\n      }\n    }\n    @Override protected void dispatchDraw(    Canvas canvas){\n      super.dispatchDraw(canvas);\n      if (mIndicator != null) {\n        mIndicator.draw(canvas,getPaddingTop(),getHeight() - getPaddingBottom());\n      }\n    }\n  }\n  @Override public void updateTopDivider(  int topInsetLeft,  int topInsetRight,  int topDividerHeight,  int topDividerColor){\n    mLayoutHelper.updateTopDivider(topInsetLeft,topInsetRight,topDividerHeight,topDividerColor);\n    invalidate();\n  }\n  @Override public void updateBottomDivider(  int bottomInsetLeft,  int bottomInsetRight,  int bottomDividerHeight,  int bottomDividerColor){\n    mLayoutHelper.updateBottomDivider(bottomInsetLeft,bottomInsetRight,bottomDividerHeight,bottomDividerColor);\n    invalidate();\n  }\n  @Override public void updateLeftDivider(  int leftInsetTop,  int leftInsetBottom,  int leftDividerWidth,  int leftDividerColor){\n    mLayoutHelper.updateLeftDivider(leftInsetTop,leftInsetBottom,leftDividerWidth,leftDividerColor);\n    invalidate();\n  }\n  @Override public void updateRightDivider(  int rightInsetTop,  int rightInsetBottom,  int rightDividerWidth,  int rightDividerColor){\n    mLayoutHelper.updateRightDivider(rightInsetTop,rightInsetBottom,rightDividerWidth,rightDividerColor);\n    invalidate();\n  }\n  @Override public void onlyShowTopDivider(  int topInsetLeft,  int topInsetRight,  int topDividerHeight,  int topDividerColor){\n    mLayoutHelper.onlyShowTopDivider(topInsetLeft,topInsetRight,topDividerHeight,topDividerColor);\n    invalidate();\n  }\n  @Override public void onlyShowBottomDivider(  int bottomInsetLeft,  int bottomInsetRight,  int bottomDividerHeight,  int bottomDividerColor){\n    mLayoutHelper.onlyShowBottomDivider(bottomInsetLeft,bottomInsetRight,bottomDividerHeight,bottomDividerColor);\n    invalidate();\n  }\n  @Override public void onlyShowLeftDivider(  int leftInsetTop,  int leftInsetBottom,  int leftDividerWidth,  int leftDividerColor){\n    mLayoutHelper.onlyShowLeftDivider(leftInsetTop,leftInsetBottom,leftDividerWidth,leftDividerColor);\n    invalidate();\n  }\n  @Override public void onlyShowRightDivider(  int rightInsetTop,  int rightInsetBottom,  int rightDividerWidth,  int rightDividerColor){\n    mLayoutHelper.onlyShowRightDivider(rightInsetTop,rightInsetBottom,rightDividerWidth,rightDividerColor);\n    invalidate();\n  }\n  @Override public void setTopDividerAlpha(  int dividerAlpha){\n    mLayoutHelper.setTopDividerAlpha(dividerAlpha);\n    invalidate();\n  }\n  @Override public void setBottomDividerAlpha(  int dividerAlpha){\n    mLayoutHelper.setBottomDividerAlpha(dividerAlpha);\n    invalidate();\n  }\n  @Override public void setLeftDividerAlpha(  int dividerAlpha){\n    mLayoutHelper.setLeftDividerAlpha(dividerAlpha);\n    invalidate();\n  }\n  @Override public void setRightDividerAlpha(  int dividerAlpha){\n    mLayoutHelper.setRightDividerAlpha(dividerAlpha);\n    invalidate();\n  }\n  @Override public void setRadiusAndShadow(  int radius,  int shadowElevation,  final float shadowAlpha){\n    mLayoutHelper.setRadiusAndShadow(radius,shadowElevation,shadowAlpha);\n  }\n  @Override public void setRadiusAndShadow(  int radius,  @QMUILayoutHelper.HideRadiusSide int hideRadiusSide,  int shadowElevation,  final float shadowAlpha){\n    mLayoutHelper.setRadiusAndShadow(radius,hideRadiusSide,shadowElevation,shadowAlpha);\n  }\n  @Override public void setRadiusAndShadow(  int radius,  int hideRadiusSide,  int shadowElevation,  int shadowColor,  float shadowAlpha){\n    mLayoutHelper.setRadiusAndShadow(radius,hideRadiusSide,shadowElevation,shadowColor,shadowAlpha);\n  }\n  @Override public void setRadius(  int radius){\n    mLayoutHelper.setRadius(radius);\n  }\n  @Override public void setRadius(  int radius,  @QMUILayoutHelper.HideRadiusSide int hideRadiusSide){\n    mLayoutHelper.setRadius(radius,hideRadiusSide);\n  }\n  @Override public int getRadius(){\n    return mLayoutHelper.getRadius();\n  }\n  @Override public void setOutlineInset(  int left,  int top,  int right,  int bottom){\n    mLayoutHelper.setOutlineInset(left,top,right,bottom);\n  }\n  @Override public void setHideRadiusSide(  int hideRadiusSide){\n    mLayoutHelper.setHideRadiusSide(hideRadiusSide);\n  }\n  @Override public int getHideRadiusSide(){\n    return mLayoutHelper.getHideRadiusSide();\n  }\n  @Override public void setBorderColor(  @ColorInt int borderColor){\n    mLayoutHelper.setBorderColor(borderColor);\n    invalidate();\n  }\n  @Override public void setBorderWidth(  int borderWidth){\n    mLayoutHelper.setBorderWidth(borderWidth);\n    invalidate();\n  }\n  @Override public void setShowBorderOnlyBeforeL(  boolean showBorderOnlyBeforeL){\n    mLayoutHelper.setShowBorderOnlyBeforeL(showBorderOnlyBeforeL);\n    invalidate();\n  }\n  @Override public boolean setWidthLimit(  int widthLimit){\n    if (mLayoutHelper.setWidthLimit(widthLimit)) {\n      requestLayout();\n      invalidate();\n    }\n    return true;\n  }\n  @Override public boolean setHeightLimit(  int heightLimit){\n    if (mLayoutHelper.setHeightLimit(heightLimit)) {\n      requestLayout();\n      invalidate();\n    }\n    return true;\n  }\n  @Override public void setUseThemeGeneralShadowElevation(){\n    mLayoutHelper.setUseThemeGeneralShadowElevation();\n  }\n  @Override public void setOutlineExcludePadding(  boolean outlineExcludePadding){\n    mLayoutHelper.setOutlineExcludePadding(outlineExcludePadding);\n  }\n  @Override public void setShadowElevation(  int elevation){\n    mLayoutHelper.setShadowElevation(elevation);\n  }\n  @Override public int getShadowElevation(){\n    return mLayoutHelper.getShadowElevation();\n  }\n  @Override public void setShadowAlpha(  float shadowAlpha){\n    mLayoutHelper.setShadowAlpha(shadowAlpha);\n  }\n  @Override public float getShadowAlpha(){\n    return mLayoutHelper.getShadowAlpha();\n  }\n  @Override public void setShadowColor(  int shadowColor){\n    mLayoutHelper.setShadowColor(shadowColor);\n  }\n  @Override public int getShadowColor(){\n    return mLayoutHelper.getShadowColor();\n  }\n  @Override public void setOuterNormalColor(  int color){\n    mLayoutHelper.setOuterNormalColor(color);\n  }\n  @Override public void updateBottomSeparatorColor(  int color){\n    mLayoutHelper.updateBottomSeparatorColor(color);\n  }\n  @Override public void updateLeftSeparatorColor(  int color){\n    mLayoutHelper.updateLeftSeparatorColor(color);\n  }\n  @Override public void updateRightSeparatorColor(  int color){\n    mLayoutHelper.updateRightSeparatorColor(color);\n  }\n  @Override public void updateTopSeparatorColor(  int color){\n    mLayoutHelper.updateTopSeparatorColor(color);\n  }\n  @Override protected void onDraw(  Canvas canvas){\n    mLayoutHelper.drawDividers(canvas,getWidth(),getHeight());\n    mLayoutHelper.dispatchRoundBorderDraw(canvas);\n    super.onDraw(canvas);\n  }\n  @Override public Map<String,Integer> getDefaultSkinAttrs(){\n    return mDefaultSkinAttrs;\n  }\n  @Override public void handle(  QMUISkinManager manager,  int skinIndex,  Resources.Theme theme,  Map<String,Integer> attrs){\n    layoutIndicator(mTabAdapter.getItem(mCurrentSelectedIndex),true);\n    manager.defaultHandleSkinAttrs(this,theme,attrs);\n  }\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_INTERFACE",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[63,1331], C[1,1]",
                "Detail": null,
                "Code": "/** \n * <p>用于横向多个 Tab 的布局，可以灵活配置 Tab</p> <ul> <li>可以用 xml 和 QMUITabSegment 提供的 set 方法统一配置文字颜色、icon 位置、是否要下划线等</li> <li>每个 Tab 都可以非常灵活的配置，如果没有提供相关配置，则使用 QMUITabSegment 提供的配置，具体参考  {@link QMUITab}</li> <li>可以通过  {@link #setupWithViewPager(ViewPager)} 与 {@link ViewPager} 绑定</li></ul> <p> <h3>使用case: </h3> <ul> <li> 如果  {@link ViewPager} 的 {@link PagerAdapter} 有覆写 {@link PagerAdapter#getPageTitle(int)} 方法, 那么直接使用 {@link #setupWithViewPager(ViewPager)} 方法与 {@link ViewPager} 绑定即可。QMUITabSegment 会将  {@link PagerAdapter#getPageTitle(int)} 返回的字符串作为 Tab 的文案</li> <li> 如果你希望自己设置 Tab 的文案或图片，那么通过 {@link #addTab(QMUITab)}添加 Tab: <code> QMUITabSegment mTabSegment = new QMUITabSegment((getContext()); // config mTabSegment QMUITabBuilder tabBuilder = mTabSegment.tabBuilder() mTabSegment.addTab(tabBuilder.setText(\"item 1\").build()); mTabSegment.addTab(tabBuilder.setText(\"item 2\").build()); mTabSegment.setupWithViewPager(viewpager, false); //第二个参数要为false,表示不从adapter拿数据 </code> </li> <li> 如果你想更改tab,则调用 {@link #updateTabText(int,String)} 或者 {@link #replaceTab(int,QMUITab)}<code> mTabSegment.updateTabText(1, \"update item content\"); mTabSegment.replaceTab(1, tabBuilder.setText(\"replace item\").build()); </code> </li> <li> 如果你想更换全部Tab,需要在addTab前调用 {@link #reset()}进行重置，addTab后调用 {@link #notifyDataChanged()} 将数据应用到View上：<code> mTabSegment.reset(); // update mTabSegment with new config QMUITabBuilder tabBuilder = mTabSegment.tabBuilder() mTabSegment.addTab(tabBuilder.setText(\"new item 1\").build()); mTabSegment.addTab(tabBuilder.setText(\"new item 1\").build()); mTabSegment.notifyDataChanged(); </code> </li> </ul>\n * @author cginechen\n * @date 2016-01-27\n */\npublic class QMUITabSegment extends HorizontalScrollView implements IQMUILayout, IQMUISkinHandlerView, IQMUISkinDefaultAttrProvider {\n  private static final String TAG=\"QMUITabSegment\";\n  public static final int MODE_SCROLLABLE=0;\n  public static final int MODE_FIXED=1;\n  private static final int NO_POSITION=-1;\n  private final ArrayList<OnTabSelectedListener> mSelectedListeners=new ArrayList<>();\n  private Container mContentLayout;\n  private int mCurrentSelectedIndex=NO_POSITION;\n  private int mPendingSelectedIndex=NO_POSITION;\n  private QMUITabIndicator mIndicator=null;\n  /** \n * TabSegmentMode\n */\n  @Mode private int mMode=MODE_FIXED;\n  /** \n * item gap in MODE_SCROLLABLE\n */\n  private int mItemSpaceInScrollMode;\n  /** \n * the scrollState of ViewPager\n */\n  private int mViewPagerScrollState=ViewPager.SCROLL_STATE_IDLE;\n  private QMUITabAdapter mTabAdapter;\n  private QMUITabBuilder mTabBuilder;\n  private Animator mSelectAnimator;\n  private OnTabClickListener mOnTabClickListener;\n  private ViewPager mViewPager;\n  private PagerAdapter mPagerAdapter;\n  private DataSetObserver mPagerAdapterObserver;\n  private ViewPager.OnPageChangeListener mOnPageChangeListener;\n  private OnTabSelectedListener mViewPagerSelectedListener;\n  private AdapterChangeListener mAdapterChangeListener;\n  private boolean mIsInSelectTab=false;\n  private QMUILayoutHelper mLayoutHelper;\n  private Map<String,Integer> mDefaultSkinAttrs=new HashMap<>();\n  public QMUITabSegment(  Context context){\n    this(context,null);\n  }\n  public QMUITabSegment(  Context context,  AttributeSet attrs){\n    this(context,attrs,R.attr.QMUITabSegmentStyle);\n  }\n  public QMUITabSegment(  Context context,  AttributeSet attrs,  int defStyleAttr){\n    super(context,attrs,defStyleAttr);\n    setWillNotDraw(false);\n    mLayoutHelper=new QMUILayoutHelper(context,attrs,defStyleAttr,this);\n    init(context,attrs,defStyleAttr);\n    setHorizontalScrollBarEnabled(false);\n    setClipToPadding(false);\n    setClipChildren(false);\n  }\n  private void init(  Context context,  AttributeSet attrs,  int defStyleAttr){\n    TypedArray array=context.obtainStyledAttributes(attrs,R.styleable.QMUITabSegment,defStyleAttr,0);\n    boolean hasIndicator=array.getBoolean(R.styleable.QMUITabSegment_qmui_tab_has_indicator,false);\n    int indicatorHeight=array.getDimensionPixelSize(R.styleable.QMUITabSegment_qmui_tab_indicator_height,getResources().getDimensionPixelSize(R.dimen.qmui_tab_segment_indicator_height));\n    boolean indicatorTop=array.getBoolean(R.styleable.QMUITabSegment_qmui_tab_indicator_top,false);\n    boolean indicatorWidthFollowContent=array.getBoolean(R.styleable.QMUITabSegment_qmui_tab_indicator_with_follow_content,false);\n    mIndicator=createTabIndicatorFromXmlInfo(hasIndicator,indicatorHeight,indicatorTop,indicatorWidthFollowContent);\n    int normalTextSize=array.getDimensionPixelSize(R.styleable.QMUITabSegment_android_textSize,getResources().getDimensionPixelSize(R.dimen.qmui_tab_segment_text_size));\n    normalTextSize=array.getDimensionPixelSize(R.styleable.QMUITabSegment_qmui_tab_normal_text_size,normalTextSize);\n    int selectedTextSize=normalTextSize;\n    selectedTextSize=array.getDimensionPixelSize(R.styleable.QMUITabSegment_qmui_tab_selected_text_size,selectedTextSize);\n    mTabBuilder=new QMUITabBuilder(context).setTextSize(normalTextSize,selectedTextSize).setIconPosition(array.getInt(R.styleable.QMUITabSegment_qmui_tab_icon_position,QMUITab.ICON_POSITION_LEFT));\n    mMode=array.getInt(R.styleable.QMUITabSegment_qmui_tab_mode,MODE_FIXED);\n    mItemSpaceInScrollMode=array.getDimensionPixelSize(R.styleable.QMUITabSegment_qmui_tab_space,QMUIDisplayHelper.dp2px(context,10));\n    array.recycle();\n    mContentLayout=new Container(context);\n    addView(mContentLayout,new FrameLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.MATCH_PARENT));\n    mTabAdapter=createTabAdapter(mContentLayout);\n    mDefaultSkinAttrs.put(QMUISkinValueBuilder.BOTTOM_SEPARATOR,R.attr.qmui_tab_separator_color);\n    mDefaultSkinAttrs.put(QMUISkinValueBuilder.TOP_SEPARATOR,R.attr.qmui_tab_separator_color);\n    mDefaultSkinAttrs.put(QMUISkinValueBuilder.BACKGROUND,R.attr.qmui_tab_bg);\n  }\n  protected QMUITabAdapter createTabAdapter(  ViewGroup tabParentView){\n    return new QMUITabAdapter(this,tabParentView);\n  }\n  protected QMUITabIndicator createTabIndicatorFromXmlInfo(  boolean hasIndicator,  int indicatorHeight,  boolean indicatorTop,  boolean indicatorWidthFollowContent){\n    if (!hasIndicator) {\n      return null;\n    }\n    return new QMUITabIndicator(indicatorHeight,indicatorTop,indicatorWidthFollowContent);\n  }\n  public QMUITabBuilder tabBuilder(){\n    return new QMUITabBuilder(mTabBuilder);\n  }\n  /** \n * replace with custom indicator\n * @param indicator if null, present there is not a indicator\n */\n  public void setIndicator(  @Nullable QMUITabIndicator indicator){\n    mIndicator=indicator;\n    mContentLayout.requestLayout();\n  }\n  public void setItemSpaceInScrollMode(  int itemSpaceInScrollMode){\n    mItemSpaceInScrollMode=itemSpaceInScrollMode;\n  }\n  /** \n * clear all tabs\n */\n  public void reset(){\n    mTabAdapter.clear();\n    mCurrentSelectedIndex=NO_POSITION;\n    if (mSelectAnimator != null) {\n      mSelectAnimator.cancel();\n      mSelectAnimator=null;\n    }\n  }\n  /** \n * add a tab to QMUITabSegment\n * @param tab QMUITab\n * @return return this to chain\n */\n  public QMUITabSegment addTab(  QMUITab tab){\n    mTabAdapter.addItem(tab);\n    return this;\n  }\n  /** \n * notify dataChanged event to QMUITabSegment\n */\n  public void notifyDataChanged(){\n    mTabAdapter.setup();\n    populateFromPagerAdapter(false);\n  }\n  public void addOnTabSelectedListener(  @NonNull OnTabSelectedListener listener){\n    if (!mSelectedListeners.contains(listener)) {\n      mSelectedListeners.add(listener);\n    }\n  }\n  public void removeOnTabSelectedListener(  @NonNull OnTabSelectedListener listener){\n    mSelectedListeners.remove(listener);\n  }\n  public void clearOnTabSelectedListeners(){\n    mSelectedListeners.clear();\n  }\n  public int getMode(){\n    return mMode;\n  }\n  public void setMode(  @Mode int mode){\n    if (mMode != mode) {\n      mMode=mode;\n      mContentLayout.invalidate();\n    }\n  }\n  void onClickTab(  int index){\n    if (mSelectAnimator != null || mViewPagerScrollState != ViewPager.SCROLL_STATE_IDLE) {\n      return;\n    }\n    QMUITab model=mTabAdapter.getItem(index);\n    if (model != null) {\n      selectTab(index,false,true);\n    }\n    if (mOnTabClickListener != null) {\n      mOnTabClickListener.onTabClick(index);\n    }\n  }\n  void onDoubleClick(  int index){\n    if (mSelectedListeners.isEmpty()) {\n      return;\n    }\n    QMUITab model=mTabAdapter.getItem(index);\n    if (model != null) {\n      dispatchTabDoubleTap(index);\n    }\n  }\n  public void setupWithViewPager(  @Nullable ViewPager viewPager){\n    setupWithViewPager(viewPager,true);\n  }\n  public void setupWithViewPager(  @Nullable ViewPager viewPager,  boolean useAdapterTitle){\n    setupWithViewPager(viewPager,useAdapterTitle,true);\n  }\n  /** \n * associate QMUITabSegment with a  {@link ViewPager}\n * @param viewPager       the ViewPager to associate\n * @param useAdapterTitle populate the tab with viewPager.adapter.getTitle\n * @param autoRefresh     refresh QMUITabSegment when viewPager.adapter changed.\n */\n  public void setupWithViewPager(  @Nullable final ViewPager viewPager,  boolean useAdapterTitle,  boolean autoRefresh){\n    if (mViewPager != null) {\n      if (mOnPageChangeListener != null) {\n        mViewPager.removeOnPageChangeListener(mOnPageChangeListener);\n      }\n      if (mAdapterChangeListener != null) {\n        mViewPager.removeOnAdapterChangeListener(mAdapterChangeListener);\n      }\n    }\n    if (mViewPagerSelectedListener != null) {\n      removeOnTabSelectedListener(mViewPagerSelectedListener);\n      mViewPagerSelectedListener=null;\n    }\n    if (viewPager != null) {\n      mViewPager=viewPager;\n      if (mOnPageChangeListener == null) {\n        mOnPageChangeListener=new TabLayoutOnPageChangeListener(this);\n      }\n      viewPager.addOnPageChangeListener(mOnPageChangeListener);\n      mViewPagerSelectedListener=new ViewPagerOnTabSelectedListener(viewPager);\n      addOnTabSelectedListener(mViewPagerSelectedListener);\n      final PagerAdapter adapter=viewPager.getAdapter();\n      if (adapter != null) {\n        setPagerAdapter(adapter,useAdapterTitle,autoRefresh);\n      }\n      if (mAdapterChangeListener == null) {\n        mAdapterChangeListener=new AdapterChangeListener(useAdapterTitle);\n      }\n      mAdapterChangeListener.setAutoRefresh(autoRefresh);\n      viewPager.addOnAdapterChangeListener(mAdapterChangeListener);\n    }\n else {\n      mViewPager=null;\n      setPagerAdapter(null,false,false);\n    }\n  }\n  private void dispatchTabSelected(  int index){\n    for (int i=mSelectedListeners.size() - 1; i >= 0; i--) {\n      mSelectedListeners.get(i).onTabSelected(index);\n    }\n  }\n  private void dispatchTabUnselected(  int index){\n    for (int i=mSelectedListeners.size() - 1; i >= 0; i--) {\n      mSelectedListeners.get(i).onTabUnselected(index);\n    }\n  }\n  private void dispatchTabReselected(  int index){\n    for (int i=mSelectedListeners.size() - 1; i >= 0; i--) {\n      mSelectedListeners.get(i).onTabReselected(index);\n    }\n  }\n  private void dispatchTabDoubleTap(  int index){\n    for (int i=mSelectedListeners.size() - 1; i >= 0; i--) {\n      mSelectedListeners.get(i).onDoubleTap(index);\n    }\n  }\n  private void setViewPagerScrollState(  int state){\n    mViewPagerScrollState=state;\n    if (mViewPagerScrollState == ViewPager.SCROLL_STATE_IDLE) {\n      if (mPendingSelectedIndex != NO_POSITION && mSelectAnimator == null) {\n        selectTab(mPendingSelectedIndex,true,false);\n        mPendingSelectedIndex=NO_POSITION;\n      }\n    }\n  }\n  public void selectTab(  int index){\n    selectTab(index,false,false);\n  }\n  public void selectTab(  final int index,  boolean noAnimation,  boolean fromTabClick){\n    if (mIsInSelectTab) {\n      return;\n    }\n    mIsInSelectTab=true;\n    List<QMUITabView> listViews=mTabAdapter.getViews();\n    if (listViews.size() != mTabAdapter.getSize()) {\n      mTabAdapter.setup();\n      listViews=mTabAdapter.getViews();\n    }\n    if (listViews.size() == 0 || listViews.size() <= index) {\n      mIsInSelectTab=false;\n      return;\n    }\n    if (mSelectAnimator != null || mViewPagerScrollState != ViewPager.SCROLL_STATE_IDLE) {\n      mPendingSelectedIndex=index;\n      mIsInSelectTab=false;\n      return;\n    }\n    if (mCurrentSelectedIndex == index) {\n      if (fromTabClick) {\n        dispatchTabReselected(index);\n      }\n      mIsInSelectTab=false;\n      mContentLayout.invalidate();\n      return;\n    }\n    if (mCurrentSelectedIndex > listViews.size()) {\n      Log.i(TAG,\"selectTab: current selected index is bigger than views size.\");\n      mCurrentSelectedIndex=NO_POSITION;\n    }\n    if (mCurrentSelectedIndex == NO_POSITION) {\n      QMUITab model=mTabAdapter.getItem(index);\n      layoutIndicator(model,true);\n      listViews.get(index).setSelectFraction(1f);\n      dispatchTabSelected(index);\n      mCurrentSelectedIndex=index;\n      mIsInSelectTab=false;\n      return;\n    }\n    final int prev=mCurrentSelectedIndex;\n    final QMUITab prevModel=mTabAdapter.getItem(prev);\n    final QMUITabView prevView=listViews.get(prev);\n    final QMUITab nowModel=mTabAdapter.getItem(index);\n    final QMUITabView nowView=listViews.get(index);\n    if (noAnimation) {\n      dispatchTabUnselected(prev);\n      dispatchTabSelected(index);\n      prevView.setSelectFraction(0f);\n      nowView.setSelectFraction(1f);\n      if (getScrollX() > nowView.getLeft()) {\n        smoothScrollTo(nowView.getLeft(),0);\n      }\n else {\n        int realWidth=getWidth() - getPaddingRight() - getPaddingLeft();\n        if (getScrollX() + realWidth < nowView.getRight()) {\n          smoothScrollBy(nowView.getRight() - realWidth - getScrollX(),0);\n        }\n      }\n      mCurrentSelectedIndex=index;\n      mIsInSelectTab=false;\n      layoutIndicator(nowModel,true);\n      return;\n    }\n    final ValueAnimator animator=ValueAnimator.ofFloat(0f,1f);\n    animator.setInterpolator(QMUIInterpolatorStaticHolder.LINEAR_INTERPOLATOR);\n    animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){\n      @Override public void onAnimationUpdate(      ValueAnimator animation){\n        float animValue=(float)animation.getAnimatedValue();\n        prevView.setSelectFraction(1 - animValue);\n        nowView.setSelectFraction(animValue);\n        layoutIndicatorInTransition(prevModel,nowModel,animValue);\n      }\n    }\n);\n    animator.addListener(new Animator.AnimatorListener(){\n      @Override public void onAnimationStart(      Animator animation){\n        mSelectAnimator=animation;\n      }\n      @Override public void onAnimationEnd(      Animator animation){\n        mSelectAnimator=null;\n        prevView.setSelectFraction(0f);\n        nowView.setSelectFraction(1f);\n        dispatchTabSelected(index);\n        dispatchTabUnselected(prev);\n        mCurrentSelectedIndex=index;\n        if (mPendingSelectedIndex != NO_POSITION && mViewPagerScrollState == ViewPager.SCROLL_STATE_IDLE) {\n          selectTab(mPendingSelectedIndex,true,false);\n          mPendingSelectedIndex=NO_POSITION;\n        }\n      }\n      @Override public void onAnimationCancel(      Animator animation){\n        mSelectAnimator=null;\n        prevView.setSelectFraction(1f);\n        nowView.setSelectFraction(0f);\n        layoutIndicator(prevModel,true);\n      }\n      @Override public void onAnimationRepeat(      Animator animation){\n      }\n    }\n);\n    animator.setDuration(200);\n    animator.start();\n    mIsInSelectTab=false;\n  }\n  private void layoutIndicator(  QMUITab model,  boolean invalidate){\n    if (model == null || mIndicator == null) {\n      return;\n    }\n    mIndicator.updateInfo(model.contentLeft,model.contentWidth,QMUISkinHelper.getSkinColor(this,model.selectedColorAttr));\n    if (invalidate) {\n      mContentLayout.invalidate();\n    }\n  }\n  private void layoutIndicatorInTransition(  QMUITab preModel,  QMUITab targetModel,  float offsetPercent){\n    if (mIndicator == null) {\n      return;\n    }\n    final int leftDistance=targetModel.contentLeft - preModel.contentLeft;\n    final int widthDistance=targetModel.contentWidth - preModel.contentWidth;\n    final int targetLeft=(int)(preModel.contentLeft + leftDistance * offsetPercent);\n    final int targetWidth=(int)(preModel.contentWidth + widthDistance * offsetPercent);\n    int indicatorColor=QMUIColorHelper.computeColor(QMUISkinHelper.getSkinColor(this,preModel.selectedColorAttr),QMUISkinHelper.getSkinColor(this,targetModel.selectedColorAttr),offsetPercent);\n    mIndicator.updateInfo(targetLeft,targetWidth,indicatorColor);\n    mContentLayout.invalidate();\n  }\n  public void updateIndicatorPosition(  final int index,  float offsetPercent){\n    if (mSelectAnimator != null || mIsInSelectTab || offsetPercent == 0) {\n      return;\n    }\n    int targetIndex;\n    if (offsetPercent < 0) {\n      targetIndex=index - 1;\n      offsetPercent=-offsetPercent;\n    }\n else {\n      targetIndex=index + 1;\n    }\n    final List<QMUITabView> listViews=mTabAdapter.getViews();\n    if (listViews.size() <= index || listViews.size() <= targetIndex) {\n      return;\n    }\n    QMUITab preModel=mTabAdapter.getItem(index);\n    QMUITab targetModel=mTabAdapter.getItem(targetIndex);\n    QMUITabView preView=listViews.get(index);\n    QMUITabView targetView=listViews.get(targetIndex);\n    preView.setSelectFraction(1 - offsetPercent);\n    targetView.setSelectFraction(offsetPercent);\n    layoutIndicatorInTransition(preModel,targetModel,offsetPercent);\n  }\n  /** \n * 改变 Tab 的文案\n * @param index Tab 的 index\n * @param text  新文案\n */\n  public void updateTabText(  int index,  String text){\n    QMUITab model=mTabAdapter.getItem(index);\n    if (model == null) {\n      return;\n    }\n    model.setText(text);\n    notifyDataChanged();\n  }\n  /** \n * 整个 Tab 替换\n * @param index 需要被替换的 Tab 的 index\n * @param model 新的 Tab\n */\n  public void replaceTab(  int index,  QMUITab model){\n    try {\n      mTabAdapter.replaceItem(index,model);\n    }\n catch (    IllegalAccessException e) {\n      e.printStackTrace();\n    }\n  }\n  public void setOnTabClickListener(  OnTabClickListener onTabClickListener){\n    mOnTabClickListener=onTabClickListener;\n  }\n  void populateFromPagerAdapter(  boolean useAdapterTitle){\n    if (mPagerAdapter == null) {\n      if (useAdapterTitle) {\n        reset();\n      }\n      return;\n    }\n    final int adapterCount=mPagerAdapter.getCount();\n    if (useAdapterTitle) {\n      reset();\n      for (int i=0; i < adapterCount; i++) {\n        addTab(mTabBuilder.setText(mPagerAdapter.getPageTitle(i)).build());\n      }\n      notifyDataChanged();\n    }\n    if (mViewPager != null && adapterCount > 0) {\n      final int curItem=mViewPager.getCurrentItem();\n      selectTab(curItem,true,false);\n    }\n  }\n  @Override protected void onMeasure(  int widthMeasureSpec,  int heightMeasureSpec){\n    final int widthSize=MeasureSpec.getSize(widthMeasureSpec);\n    final int widthMode=MeasureSpec.getMode(widthMeasureSpec);\n    if (getChildCount() > 0) {\n      final View child=getChildAt(0);\n      int paddingHor=getPaddingLeft() + getPaddingRight();\n      child.measure(MeasureSpec.makeMeasureSpec(widthSize - paddingHor,MeasureSpec.EXACTLY),heightMeasureSpec);\n      if (widthMode == MeasureSpec.AT_MOST) {\n        setMeasuredDimension(Math.min(widthSize,child.getMeasuredWidth() + paddingHor),heightMeasureSpec);\n        return;\n      }\n    }\n    setMeasuredDimension(widthMeasureSpec,heightMeasureSpec);\n  }\n  void setPagerAdapter(  @Nullable final PagerAdapter adapter,  boolean useAdapterTitle,  final boolean addObserver){\n    if (mPagerAdapter != null && mPagerAdapterObserver != null) {\n      mPagerAdapter.unregisterDataSetObserver(mPagerAdapterObserver);\n    }\n    mPagerAdapter=adapter;\n    if (addObserver && adapter != null) {\n      if (mPagerAdapterObserver == null) {\n        mPagerAdapterObserver=new PagerAdapterObserver(useAdapterTitle);\n      }\n      adapter.registerDataSetObserver(mPagerAdapterObserver);\n    }\n    populateFromPagerAdapter(useAdapterTitle);\n  }\n  public int getSelectedIndex(){\n    return mCurrentSelectedIndex;\n  }\n  private int getTabCount(){\n    return mTabAdapter.getSize();\n  }\n  /** \n * get  {@link QMUITab} by index\n * @param index index\n * @return QMUITab\n */\n  public QMUITab getTab(  int index){\n    return mTabAdapter.getItem(index);\n  }\n  /** \n * show signCount/redPoint by index\n * @param index the index of tab\n * @param count if count > 0, show signCount; else if count == 0 show redPoint; else show nothing\n */\n  public void showSignCountView(  Context context,  int index,  int count){\n    QMUITab tab=mTabAdapter.getItem(index);\n    tab.setSignCount(count);\n    notifyDataChanged();\n  }\n  /** \n * clear signCount/redPoint by index\n * @param index the index of tab\n */\n  public void clearSignCountView(  int index){\n    QMUITab tab=mTabAdapter.getItem(index);\n    tab.clearSignCountOrRedPoint();\n    notifyDataChanged();\n  }\n  /** \n * get sign count by index\n * @param index the index of tab\n */\n  public int getSignCount(  int index){\n    QMUITab tab=mTabAdapter.getItem(index);\n    return tab.getSignCount();\n  }\n  /** \n * is redPoint showing ?\n * @param index the index of tab\n * @return true if redPoint is showing\n */\n  public boolean isRedPointShowing(  int index){\n    return mTabAdapter.getItem(index).isRedPointShowing();\n  }\n  @IntDef(value={MODE_SCROLLABLE,MODE_FIXED}) @Retention(RetentionPolicy.SOURCE) public @interface Mode {}\npublic interface OnTabClickListener {\n    /** \n * 当某个 Tab 被点击时会触发\n * @param index 被点击的 Tab 下标\n */\n    void onTabClick(    int index);\n  }\npublic interface OnTabSelectedListener {\n    /** \n * 当某个 Tab 被选中时会触发\n * @param index 被选中的 Tab 下标\n */\n    void onTabSelected(    int index);\n    /** \n * 当某个 Tab 被取消选中时会触发\n * @param index 被取消选中的 Tab 下标\n */\n    void onTabUnselected(    int index);\n    /** \n * 当某个 Tab 处于被选中状态下再次被点击时会触发\n * @param index 被再次点击的 Tab 下标\n */\n    void onTabReselected(    int index);\n    /** \n * 当某个 Tab 被双击时会触发\n * @param index 被双击的 Tab 下标\n */\n    void onDoubleTap(    int index);\n  }\npublic static class TabLayoutOnPageChangeListener implements ViewPager.OnPageChangeListener {\n    private final WeakReference<QMUITabSegment> mTabSegmentRef;\n    public TabLayoutOnPageChangeListener(    QMUITabSegment tabSegment){\n      mTabSegmentRef=new WeakReference<>(tabSegment);\n    }\n    @Override public void onPageScrollStateChanged(    final int state){\n      final QMUITabSegment tabSegment=mTabSegmentRef.get();\n      if (tabSegment != null) {\n        tabSegment.setViewPagerScrollState(state);\n      }\n    }\n    @Override public void onPageScrolled(    final int position,    final float positionOffset,    final int positionOffsetPixels){\n      final QMUITabSegment tabSegment=mTabSegmentRef.get();\n      if (tabSegment != null) {\n        tabSegment.updateIndicatorPosition(position,positionOffset);\n      }\n    }\n    @Override public void onPageSelected(    final int position){\n      final QMUITabSegment tabSegment=mTabSegmentRef.get();\n      if (tabSegment != null && tabSegment.mPendingSelectedIndex != NO_POSITION) {\n        tabSegment.mPendingSelectedIndex=position;\n        return;\n      }\n      if (tabSegment != null && tabSegment.getSelectedIndex() != position && position < tabSegment.getTabCount()) {\n        tabSegment.selectTab(position,true,false);\n      }\n    }\n  }\nprivate static class ViewPagerOnTabSelectedListener implements OnTabSelectedListener {\n    private final ViewPager mViewPager;\n    public ViewPagerOnTabSelectedListener(    ViewPager viewPager){\n      mViewPager=viewPager;\n    }\n    @Override public void onTabSelected(    int index){\n      mViewPager.setCurrentItem(index,false);\n    }\n    @Override public void onTabUnselected(    int index){\n    }\n    @Override public void onTabReselected(    int index){\n    }\n    @Override public void onDoubleTap(    int index){\n    }\n  }\nprivate class AdapterChangeListener implements ViewPager.OnAdapterChangeListener {\n    private boolean mAutoRefresh;\n    private final boolean mUseAdapterTitle;\n    AdapterChangeListener(    boolean useAdapterTitle){\n      mUseAdapterTitle=useAdapterTitle;\n    }\n    @Override public void onAdapterChanged(    @NonNull ViewPager viewPager,    @Nullable PagerAdapter oldAdapter,    @Nullable PagerAdapter newAdapter){\n      if (mViewPager == viewPager) {\n        setPagerAdapter(newAdapter,mUseAdapterTitle,mAutoRefresh);\n      }\n    }\n    void setAutoRefresh(    boolean autoRefresh){\n      mAutoRefresh=autoRefresh;\n    }\n  }\n  @Override protected void onLayout(  boolean changed,  int l,  int t,  int r,  int b){\n    super.onLayout(changed,l,t,r,b);\n    if (mCurrentSelectedIndex != NO_POSITION && mMode == MODE_SCROLLABLE) {\n      final QMUITabView view=mTabAdapter.getViews().get(mCurrentSelectedIndex);\n      if (getScrollX() > view.getLeft()) {\n        scrollTo(view.getLeft(),0);\n      }\n else {\n        int realWidth=getWidth() - getPaddingRight() - getPaddingLeft();\n        if (getScrollX() + realWidth < view.getRight()) {\n          scrollBy(view.getRight() - realWidth - getScrollX(),0);\n        }\n      }\n    }\n  }\nprivate class PagerAdapterObserver extends DataSetObserver {\n    private final boolean mUseAdapterTitle;\n    PagerAdapterObserver(    boolean useAdapterTitle){\n      mUseAdapterTitle=useAdapterTitle;\n    }\n    @Override public void onChanged(){\n      populateFromPagerAdapter(mUseAdapterTitle);\n    }\n    @Override public void onInvalidated(){\n      populateFromPagerAdapter(mUseAdapterTitle);\n    }\n  }\nprivate final class Container extends ViewGroup {\n    public Container(    Context context){\n      super(context);\n      setClipChildren(false);\n    }\n    @Override protected void onMeasure(    int widthMeasureSpec,    int heightMeasureSpec){\n      int widthSpecSize=MeasureSpec.getSize(widthMeasureSpec);\n      int heightSpecSize=MeasureSpec.getSize(heightMeasureSpec);\n      List<QMUITabView> childViews=mTabAdapter.getViews();\n      int size=childViews.size();\n      int i;\n      int visibleChild=0;\n      for (i=0; i < size; i++) {\n        View child=childViews.get(i);\n        if (child.getVisibility() == VISIBLE) {\n          visibleChild++;\n        }\n      }\n      if (size == 0 || visibleChild == 0) {\n        setMeasuredDimension(widthSpecSize,heightSpecSize);\n        return;\n      }\n      int childHeight=heightSpecSize - getPaddingTop() - getPaddingBottom();\n      int childWidthMeasureSpec, childHeightMeasureSpec, resultWidthSize=0;\n      if (mMode == MODE_FIXED) {\n        resultWidthSize=widthSpecSize;\n        int modeFixItemWidth=widthSpecSize / visibleChild;\n        for (i=0; i < size; i++) {\n          final View child=childViews.get(i);\n          if (child.getVisibility() != VISIBLE) {\n            continue;\n          }\n          childWidthMeasureSpec=MeasureSpec.makeMeasureSpec(modeFixItemWidth,MeasureSpec.EXACTLY);\n          childHeightMeasureSpec=MeasureSpec.makeMeasureSpec(childHeight,MeasureSpec.EXACTLY);\n          child.measure(childWidthMeasureSpec,childHeightMeasureSpec);\n          QMUITab tab=mTabAdapter.getItem(i);\n          tab.leftAddonMargin=0;\n          tab.rightAddonMargin=0;\n        }\n      }\n else {\n        float totalWeight=0;\n        for (i=0; i < size; i++) {\n          final View child=childViews.get(i);\n          if (child.getVisibility() != VISIBLE) {\n            continue;\n          }\n          childWidthMeasureSpec=MeasureSpec.makeMeasureSpec(widthSpecSize,MeasureSpec.AT_MOST);\n          childHeightMeasureSpec=MeasureSpec.makeMeasureSpec(childHeight,MeasureSpec.EXACTLY);\n          child.measure(childWidthMeasureSpec,childHeightMeasureSpec);\n          resultWidthSize+=child.getMeasuredWidth() + mItemSpaceInScrollMode;\n          QMUITab tab=mTabAdapter.getItem(i);\n          totalWeight+=tab.leftSpaceWeight + tab.rightSpaceWeight;\n          tab.leftAddonMargin=0;\n          tab.rightAddonMargin=0;\n        }\n        resultWidthSize-=mItemSpaceInScrollMode;\n        if (totalWeight > 0 && resultWidthSize < widthSpecSize) {\n          int remain=widthSpecSize - resultWidthSize;\n          resultWidthSize=widthSpecSize;\n          for (i=0; i < size; i++) {\n            final View child=childViews.get(i);\n            if (child.getVisibility() != VISIBLE) {\n              continue;\n            }\n            QMUITab tab=mTabAdapter.getItem(i);\n            tab.leftAddonMargin=(int)(remain * tab.leftSpaceWeight / totalWeight);\n            tab.rightAddonMargin=(int)(remain * tab.rightSpaceWeight / totalWeight);\n          }\n        }\n      }\n      setMeasuredDimension(resultWidthSize,heightSpecSize);\n    }\n    @Override protected void onLayout(    boolean changed,    int l,    int t,    int r,    int b){\n      List<QMUITabView> childViews=mTabAdapter.getViews();\n      int size=childViews.size();\n      int i;\n      int visibleChild=0;\n      for (i=0; i < size; i++) {\n        View child=childViews.get(i);\n        if (child.getVisibility() == VISIBLE) {\n          visibleChild++;\n        }\n      }\n      if (size == 0 || visibleChild == 0) {\n        return;\n      }\n      int usedLeft=getPaddingLeft();\n      for (i=0; i < size; i++) {\n        QMUITabView childView=childViews.get(i);\n        if (childView.getVisibility() != VISIBLE) {\n          continue;\n        }\n        final int childMeasureWidth=childView.getMeasuredWidth();\n        QMUITab model=mTabAdapter.getItem(i);\n        usedLeft+=model.leftAddonMargin;\n        childView.layout(usedLeft,getPaddingTop(),usedLeft + childMeasureWidth,b - t - getPaddingBottom());\n        int oldLeft, oldWidth, newLeft, newWidth;\n        oldLeft=model.contentLeft;\n        oldWidth=model.contentWidth;\n        if (mMode == MODE_FIXED && (mIndicator != null && mIndicator.isIndicatorWidthFollowContent())) {\n          newLeft=usedLeft + childView.getContentViewLeft();\n          newWidth=childView.getContentViewWidth();\n        }\n else {\n          newLeft=usedLeft;\n          newWidth=childMeasureWidth;\n        }\n        if (oldLeft != newLeft || oldWidth != newWidth) {\n          model.contentLeft=newLeft;\n          model.contentWidth=newWidth;\n        }\n        usedLeft=usedLeft + childMeasureWidth + model.rightAddonMargin+ (mMode == MODE_SCROLLABLE ? mItemSpaceInScrollMode : 0);\n      }\n      if (mCurrentSelectedIndex != NO_POSITION && mSelectAnimator == null && mViewPagerScrollState == ViewPager.SCROLL_STATE_IDLE) {\n        layoutIndicator(mTabAdapter.getItem(mCurrentSelectedIndex),false);\n      }\n    }\n    @Override protected void dispatchDraw(    Canvas canvas){\n      super.dispatchDraw(canvas);\n      if (mIndicator != null) {\n        mIndicator.draw(canvas,getPaddingTop(),getHeight() - getPaddingBottom());\n      }\n    }\n  }\n  @Override public void updateTopDivider(  int topInsetLeft,  int topInsetRight,  int topDividerHeight,  int topDividerColor){\n    mLayoutHelper.updateTopDivider(topInsetLeft,topInsetRight,topDividerHeight,topDividerColor);\n    invalidate();\n  }\n  @Override public void updateBottomDivider(  int bottomInsetLeft,  int bottomInsetRight,  int bottomDividerHeight,  int bottomDividerColor){\n    mLayoutHelper.updateBottomDivider(bottomInsetLeft,bottomInsetRight,bottomDividerHeight,bottomDividerColor);\n    invalidate();\n  }\n  @Override public void updateLeftDivider(  int leftInsetTop,  int leftInsetBottom,  int leftDividerWidth,  int leftDividerColor){\n    mLayoutHelper.updateLeftDivider(leftInsetTop,leftInsetBottom,leftDividerWidth,leftDividerColor);\n    invalidate();\n  }\n  @Override public void updateRightDivider(  int rightInsetTop,  int rightInsetBottom,  int rightDividerWidth,  int rightDividerColor){\n    mLayoutHelper.updateRightDivider(rightInsetTop,rightInsetBottom,rightDividerWidth,rightDividerColor);\n    invalidate();\n  }\n  @Override public void onlyShowTopDivider(  int topInsetLeft,  int topInsetRight,  int topDividerHeight,  int topDividerColor){\n    mLayoutHelper.onlyShowTopDivider(topInsetLeft,topInsetRight,topDividerHeight,topDividerColor);\n    invalidate();\n  }\n  @Override public void onlyShowBottomDivider(  int bottomInsetLeft,  int bottomInsetRight,  int bottomDividerHeight,  int bottomDividerColor){\n    mLayoutHelper.onlyShowBottomDivider(bottomInsetLeft,bottomInsetRight,bottomDividerHeight,bottomDividerColor);\n    invalidate();\n  }\n  @Override public void onlyShowLeftDivider(  int leftInsetTop,  int leftInsetBottom,  int leftDividerWidth,  int leftDividerColor){\n    mLayoutHelper.onlyShowLeftDivider(leftInsetTop,leftInsetBottom,leftDividerWidth,leftDividerColor);\n    invalidate();\n  }\n  @Override public void onlyShowRightDivider(  int rightInsetTop,  int rightInsetBottom,  int rightDividerWidth,  int rightDividerColor){\n    mLayoutHelper.onlyShowRightDivider(rightInsetTop,rightInsetBottom,rightDividerWidth,rightDividerColor);\n    invalidate();\n  }\n  @Override public void setTopDividerAlpha(  int dividerAlpha){\n    mLayoutHelper.setTopDividerAlpha(dividerAlpha);\n    invalidate();\n  }\n  @Override public void setBottomDividerAlpha(  int dividerAlpha){\n    mLayoutHelper.setBottomDividerAlpha(dividerAlpha);\n    invalidate();\n  }\n  @Override public void setLeftDividerAlpha(  int dividerAlpha){\n    mLayoutHelper.setLeftDividerAlpha(dividerAlpha);\n    invalidate();\n  }\n  @Override public void setRightDividerAlpha(  int dividerAlpha){\n    mLayoutHelper.setRightDividerAlpha(dividerAlpha);\n    invalidate();\n  }\n  @Override public void setRadiusAndShadow(  int radius,  int shadowElevation,  final float shadowAlpha){\n    mLayoutHelper.setRadiusAndShadow(radius,shadowElevation,shadowAlpha);\n  }\n  @Override public void setRadiusAndShadow(  int radius,  @QMUILayoutHelper.HideRadiusSide int hideRadiusSide,  int shadowElevation,  final float shadowAlpha){\n    mLayoutHelper.setRadiusAndShadow(radius,hideRadiusSide,shadowElevation,shadowAlpha);\n  }\n  @Override public void setRadiusAndShadow(  int radius,  int hideRadiusSide,  int shadowElevation,  int shadowColor,  float shadowAlpha){\n    mLayoutHelper.setRadiusAndShadow(radius,hideRadiusSide,shadowElevation,shadowColor,shadowAlpha);\n  }\n  @Override public void setRadius(  int radius){\n    mLayoutHelper.setRadius(radius);\n  }\n  @Override public void setRadius(  int radius,  @QMUILayoutHelper.HideRadiusSide int hideRadiusSide){\n    mLayoutHelper.setRadius(radius,hideRadiusSide);\n  }\n  @Override public int getRadius(){\n    return mLayoutHelper.getRadius();\n  }\n  @Override public void setOutlineInset(  int left,  int top,  int right,  int bottom){\n    mLayoutHelper.setOutlineInset(left,top,right,bottom);\n  }\n  @Override public void setHideRadiusSide(  int hideRadiusSide){\n    mLayoutHelper.setHideRadiusSide(hideRadiusSide);\n  }\n  @Override public int getHideRadiusSide(){\n    return mLayoutHelper.getHideRadiusSide();\n  }\n  @Override public void setBorderColor(  @ColorInt int borderColor){\n    mLayoutHelper.setBorderColor(borderColor);\n    invalidate();\n  }\n  @Override public void setBorderWidth(  int borderWidth){\n    mLayoutHelper.setBorderWidth(borderWidth);\n    invalidate();\n  }\n  @Override public void setShowBorderOnlyBeforeL(  boolean showBorderOnlyBeforeL){\n    mLayoutHelper.setShowBorderOnlyBeforeL(showBorderOnlyBeforeL);\n    invalidate();\n  }\n  @Override public boolean setWidthLimit(  int widthLimit){\n    if (mLayoutHelper.setWidthLimit(widthLimit)) {\n      requestLayout();\n      invalidate();\n    }\n    return true;\n  }\n  @Override public boolean setHeightLimit(  int heightLimit){\n    if (mLayoutHelper.setHeightLimit(heightLimit)) {\n      requestLayout();\n      invalidate();\n    }\n    return true;\n  }\n  @Override public void setUseThemeGeneralShadowElevation(){\n    mLayoutHelper.setUseThemeGeneralShadowElevation();\n  }\n  @Override public void setOutlineExcludePadding(  boolean outlineExcludePadding){\n    mLayoutHelper.setOutlineExcludePadding(outlineExcludePadding);\n  }\n  @Override public void setShadowElevation(  int elevation){\n    mLayoutHelper.setShadowElevation(elevation);\n  }\n  @Override public int getShadowElevation(){\n    return mLayoutHelper.getShadowElevation();\n  }\n  @Override public void setShadowAlpha(  float shadowAlpha){\n    mLayoutHelper.setShadowAlpha(shadowAlpha);\n  }\n  @Override public float getShadowAlpha(){\n    return mLayoutHelper.getShadowAlpha();\n  }\n  @Override public void setShadowColor(  int shadowColor){\n    mLayoutHelper.setShadowColor(shadowColor);\n  }\n  @Override public int getShadowColor(){\n    return mLayoutHelper.getShadowColor();\n  }\n  @Override public void setOuterNormalColor(  int color){\n    mLayoutHelper.setOuterNormalColor(color);\n  }\n  @Override public void updateBottomSeparatorColor(  int color){\n    mLayoutHelper.updateBottomSeparatorColor(color);\n  }\n  @Override public void updateLeftSeparatorColor(  int color){\n    mLayoutHelper.updateLeftSeparatorColor(color);\n  }\n  @Override public void updateRightSeparatorColor(  int color){\n    mLayoutHelper.updateRightSeparatorColor(color);\n  }\n  @Override public void updateTopSeparatorColor(  int color){\n    mLayoutHelper.updateTopSeparatorColor(color);\n  }\n  @Override protected void onDraw(  Canvas canvas){\n    mLayoutHelper.drawDividers(canvas,getWidth(),getHeight());\n    mLayoutHelper.dispatchRoundBorderDraw(canvas);\n    super.onDraw(canvas);\n  }\n  @Override public Map<String,Integer> getDefaultSkinAttrs(){\n    return mDefaultSkinAttrs;\n  }\n  @Override public void handle(  QMUISkinManager manager,  int skinIndex,  Resources.Theme theme,  Map<String,Integer> attrs){\n    layoutIndicator(mTabAdapter.getItem(mCurrentSelectedIndex),true);\n    manager.defaultHandleSkinAttrs(this,theme,attrs);\n  }\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[22,22], C[1,37]",
                "Detail": null,
                "Code": "import android.content.res.Resources;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[22,22], C[1,37]",
                "Detail": null,
                "Code": "import android.content.res.Resources;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[37,37], C[1,51]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.IQMUISkinHandlerView;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[37,37], C[1,51]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.IQMUISkinHandlerView;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[38,38], C[1,45]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.QMUISkinHelper;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[38,38], C[1,45]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.QMUISkinHelper;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[39,39], C[1,46]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.QMUISkinManager;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[39,39], C[1,46]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.QMUISkinManager;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[40,40], C[1,51]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.QMUISkinValueBuilder;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[40,40], C[1,51]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.QMUISkinValueBuilder;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[41,41], C[1,71]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.defaultAttr.IQMUISkinDefaultAttrProvider;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[41,41], C[1,71]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.defaultAttr.IQMUISkinDefaultAttrProvider;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[50,50], C[1,25]",
                "Detail": null,
                "Code": "import java.util.HashMap;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[50,50], C[1,25]",
                "Detail": null,
                "Code": "import java.util.HashMap;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[52,52], C[1,21]",
                "Detail": null,
                "Code": "import java.util.Map;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[52,52], C[1,21]",
                "Detail": null,
                "Code": "import java.util.Map;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int).getColor(UNKNOWN, UNKNOWN)",
                "Local": "L[189,189], C[17,82]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_blue)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "CHANGED_IF_CONDITION",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.Container.onMeasure(int, int)",
                "Local": "L[978,980], C[59,21]",
                "Detail": null,
                "Code": "{\n  continue;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.Container.onMeasure(int, int)",
                "Local": "L[994,996], C[59,21]",
                "Detail": null,
                "Code": "{\n  continue;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.Container.onMeasure(int, int)",
                "Local": "L[1017,1019], C[63,25]",
                "Detail": null,
                "Code": "{\n  continue;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_MarkerAnnotation",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.getDefaultSkinAttrs()",
                "Local": "L[1321,1321], C[5,13]",
                "Detail": null,
                "Code": "@Override",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.getDefaultSkinAttrs()",
                "Local": "L[1322,1322], C[5,10]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ParameterizedType",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.getDefaultSkinAttrs()",
                "Local": "L[1322,1322], C[12,31]",
                "Detail": null,
                "Code": "Map<String,Integer>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int)",
                "Local": "L[186,187], C[31,82]",
                "Detail": null,
                "Code": "array.getColor(R.styleable.QMUITabSegment_qmui_tab_normal_color,ContextCompat.getColor(context,R.color.qmui_config_color_gray_5))",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_VARIABLE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.layoutIndicatorInTransition(QMUITab, QMUITab, float)",
                "Local": "L[589,592], C[9,31]",
                "Detail": null,
                "Code": "int indicatorColor=QMUIColorHelper.computeColor(QMUISkinHelper.getSkinColor(this,preModel.selectedColorAttr),QMUISkinHelper.getSkinColor(this,targetModel.selectedColorAttr),offsetPercent);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.layoutIndicatorInTransition(QMUITab, QMUITab, float)",
                "Local": "L[581,582], C[9,82]",
                "Detail": null,
                "Code": "int indicatorColor=QMUIColorHelper.computeColor(preModel.selectedColor,targetModel.selectedColor,offsetPercent);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "REMOVED_ClassInstanceCreation",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.init(Context, AttributeSet, int).setColor(UNKNOWN, UNKNOWN)",
                "Local": "L[198,198], C[23,49]",
                "Detail": null,
                "Code": "new QMUITabBuilder(context)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "METHOD_CALL_ARGUMENTS_CHANGE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.layoutIndicator(QMUITab, boolean).updateInfo(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[575,575], C[9,128]",
                "Detail": null,
                "Code": "mIndicator.updateInfo(model.contentLeft,model.contentWidth,QMUISkinHelper.getSkinColor(this,model.selectedColorAttr))",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.layoutIndicator(QMUITab, boolean).updateInfo(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[575,575], C[70,127]",
                "Detail": null,
                "Code": "QMUISkinHelper.getSkinColor(this,model.selectedColorAttr)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "ADDED_ParameterizedType",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabSegment.HashMap<>",
                "Local": "L[158,158], C[58,66]",
                "Detail": null,
                "Code": "HashMap<>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabSegment.java"
            },
            {
                "Metric": "METHOD_CALL_ARGUMENTS_CHANGE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.setSelectFraction(float).setSelectFraction(UNKNOWN, UNKNOWN)",
                "Local": "L[175,178], C[13,97]",
                "Detail": null,
                "Code": "tabIcon.setSelectFraction(fraction,QMUIColorHelper.computeColor(QMUISkinHelper.getSkinColor(this,mTab.normalColorAttr),QMUISkinHelper.getSkinColor(this,mTab.selectedColorAttr),fraction))",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>).getSkinColor(UNKNOWN, UNKNOWN)",
                "Local": "L[666,666], C[72,75]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>).setTextColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[665,665], C[21,99]",
                "Detail": null,
                "Code": "ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,mTab.normalColorAttr))",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>).setTextColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[666,666], C[21,101]",
                "Detail": null,
                "Code": "ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,mTab.selectedColorAttr))",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_BooleanLiteral",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>).setTextColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[667,667], C[21,24]",
                "Detail": null,
                "Code": "true",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.bind(QMUITab)",
                "Local": "L[125,126], C[9,65]",
                "Detail": null,
                "Code": "mCollapsingTextHelper.setTextColor(ColorStateList.valueOf(tab.normalColor),ColorStateList.valueOf(tab.selectedColor),false)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.setSelectFraction(float)",
                "Local": "L[174,179], C[30,9]",
                "Detail": null,
                "Code": "{\n  tabIcon.setSelectFraction(fraction,QMUIColorHelper.computeColor(QMUISkinHelper.getSkinColor(this,mTab.normalColorAttr),QMUISkinHelper.getSkinColor(this,mTab.selectedColorAttr),fraction));\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ParameterizedType",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>).SingleVariableDeclaration",
                "Local": "L[662,662], C[87,106]",
                "Detail": null,
                "Code": "Map<String,Integer>",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>).getSkinColor(UNKNOWN, UNKNOWN)",
                "Local": "L[665,665], C[72,75]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_INTERFACE",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[50,679], C[1,1]",
                "Detail": null,
                "Code": "public class QMUITabView extends FrameLayout implements IQMUISkinHandlerView {\n  private QMUITab mTab;\n  private QMUICollapsingTextHelper mCollapsingTextHelper;\n  private Interpolator mPositionInterpolator;\n  private GestureDetector mGestureDetector;\n  private Callback mCallback;\n  private float mCurrentIconLeft=0;\n  private float mCurrentIconTop=0;\n  private float mCurrentTextLeft=0;\n  private float mCurrentTextTop=0;\n  private float mCurrentIconWidth=0;\n  private float mCurrentIconHeight=0;\n  private float mCurrentTextWidth=0;\n  private float mCurrentTextHeight=0;\n  private float mNormalIconLeft=0;\n  private float mNormalIconTop=0;\n  private float mNormalTextLeft=0;\n  private float mNormalTextTop=0;\n  private float mSelectedIconLeft=0;\n  private float mSelectedIconTop=0;\n  private float mSelectedTextLeft=0;\n  private float mSelectedTextTop=0;\n  private TextView mSignCountView;\n  public QMUITabView(  @NonNull Context context){\n    super(context);\n    setWillNotDraw(false);\n    mCollapsingTextHelper=new QMUICollapsingTextHelper(this,1f);\n    mGestureDetector=new GestureDetector(getContext(),new GestureDetector.SimpleOnGestureListener(){\n      @Override public boolean onDoubleTap(      MotionEvent e){\n        if (mCallback != null) {\n          mCallback.onDoubleClick(QMUITabView.this);\n          return true;\n        }\n        return false;\n      }\n      @Override public boolean onSingleTapUp(      MotionEvent e){\n        if (mCallback != null) {\n          mCallback.onClick(QMUITabView.this);\n          return false;\n        }\n        return false;\n      }\n      @Override public boolean onDown(      MotionEvent e){\n        return mCallback != null;\n      }\n      @Override public void onLongPress(      MotionEvent e){\n        if (mCallback != null) {\n          mCallback.onLongClick(QMUITabView.this);\n        }\n      }\n    }\n);\n  }\n  public void setCallback(  Callback callback){\n    mCallback=callback;\n  }\n  public void setPositionInterpolator(  Interpolator positionInterpolator){\n    mPositionInterpolator=positionInterpolator;\n    mCollapsingTextHelper.setPositionInterpolator(positionInterpolator);\n  }\n  @Override public boolean onTouchEvent(  MotionEvent event){\n    return mGestureDetector.onTouchEvent(event) || super.onTouchEvent(event);\n  }\n  public void bind(  QMUITab tab){\n    mCollapsingTextHelper.setTextSize(tab.normalTextSize,tab.selectedTextSize,false);\n    mCollapsingTextHelper.setTextColor(ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,tab.normalColorAttr)),ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,tab.selectedColorAttr)),false);\n    mCollapsingTextHelper.setTypeface(tab.normalTypeface,tab.selectedTypeface,false);\n    int gravity=Gravity.LEFT | Gravity.TOP;\n    mCollapsingTextHelper.setGravity(gravity,gravity,false);\n    mCollapsingTextHelper.setText(tab.getText());\n    mTab=tab;\n    boolean hasRedPoint=mTab.signCount == QMUITab.RED_POINT_SIGN_COUNT;\n    boolean hasSignCount=mTab.signCount > 0;\n    if (hasRedPoint || hasSignCount) {\n      ensureSignCountView(getContext());\n      FrameLayout.LayoutParams signCountLp=(FrameLayout.LayoutParams)mSignCountView.getLayoutParams();\n      if (hasSignCount) {\n        mSignCountView.setText(QMUILangHelper.formatNumberToLimitedDigits(mTab.signCount,mTab.signCountDigits));\n        mSignCountView.setMinWidth(QMUIResHelper.getAttrDimen(getContext(),R.attr.qmui_tab_sign_count_view_minSize_with_text));\n        signCountLp.width=LayoutParams.WRAP_CONTENT;\n        signCountLp.height=QMUIResHelper.getAttrDimen(getContext(),R.attr.qmui_tab_sign_count_view_minSize_with_text);\n      }\n else {\n        mSignCountView.setText(null);\n        int redPointSize=QMUIResHelper.getAttrDimen(getContext(),R.attr.qmui_tab_sign_count_view_minSize);\n        signCountLp.width=redPointSize;\n        signCountLp.height=redPointSize;\n      }\n      mSignCountView.setLayoutParams(signCountLp);\n      mSignCountView.setVisibility(View.VISIBLE);\n    }\n else {\n      if (mSignCountView != null) {\n        mSignCountView.setVisibility(View.GONE);\n      }\n    }\n    requestLayout();\n  }\n  public void setSelectFraction(  float fraction){\n    fraction=QMUILangHelper.constrain(fraction,0f,1f);\n    QMUITabIcon tabIcon=mTab.getTabIcon();\n    if (tabIcon != null) {\n      tabIcon.setSelectFraction(fraction,QMUIColorHelper.computeColor(QMUISkinHelper.getSkinColor(this,mTab.normalColorAttr),QMUISkinHelper.getSkinColor(this,mTab.selectedColorAttr),fraction));\n    }\n    updateCurrentInfo(fraction);\n    mCollapsingTextHelper.setExpansionFraction(1 - fraction);\n    if (mSignCountView != null) {\n      Point point=calculateSignCountLayoutPosition();\n      int x=point.x, y=point.y;\n      if (point.x + mSignCountView.getMeasuredWidth() > getMeasuredWidth()) {\n        x=getMeasuredWidth() - mSignCountView.getMeasuredWidth();\n      }\n      if (point.y - mSignCountView.getMeasuredHeight() < 0) {\n        y=mSignCountView.getMeasuredHeight();\n      }\n      ViewCompat.offsetLeftAndRight(mSignCountView,x - mSignCountView.getLeft());\n      ViewCompat.offsetTopAndBottom(mSignCountView,y - mSignCountView.getBottom());\n    }\n  }\n  private void updateCurrentInfo(  float fraction){\n    mCurrentIconLeft=QMUICollapsingTextHelper.lerp(mNormalIconLeft,mSelectedIconLeft,fraction,mPositionInterpolator);\n    mCurrentIconTop=QMUICollapsingTextHelper.lerp(mNormalIconTop,mSelectedIconTop,fraction,mPositionInterpolator);\n    int normalIconWidth=mTab.getNormalTabIconWidth();\n    int normalIconHeight=mTab.getNormalTabIconHeight();\n    float selectedScale=mTab.getSelectedTabIconScale();\n    mCurrentIconWidth=QMUICollapsingTextHelper.lerp(normalIconWidth,normalIconWidth * selectedScale,fraction,mPositionInterpolator);\n    mCurrentIconHeight=QMUICollapsingTextHelper.lerp(normalIconHeight,normalIconHeight * selectedScale,fraction,mPositionInterpolator);\n    mCurrentTextLeft=QMUICollapsingTextHelper.lerp(mNormalTextLeft,mSelectedTextLeft,fraction,mPositionInterpolator);\n    mCurrentTextTop=QMUICollapsingTextHelper.lerp(mNormalTextTop,mSelectedTextTop,fraction,mPositionInterpolator);\n    float normalTextWidth=mCollapsingTextHelper.getCollapsedTextWidth();\n    float normalTextHeight=mCollapsingTextHelper.getCollapsedTextHeight();\n    float selectedTextWidth=mCollapsingTextHelper.getExpandedTextWidth();\n    float selectedTextHeight=mCollapsingTextHelper.getExpandedTextHeight();\n    mCurrentTextWidth=QMUICollapsingTextHelper.lerp(normalTextWidth,selectedTextWidth,fraction,mPositionInterpolator);\n    mCurrentTextHeight=QMUICollapsingTextHelper.lerp(normalTextHeight,selectedTextHeight,fraction,mPositionInterpolator);\n  }\n  public int getContentViewWidth(){\n    if (mTab == null) {\n      return 0;\n    }\n    float textWidth=mCollapsingTextHelper.getExpandedTextWidth();\n    if (mTab.getTabIcon() == null) {\n      return (int)(textWidth + 0.5);\n    }\n    int iconPosition=mTab.getIconPosition();\n    float iconWidth=mTab.getNormalTabIconWidth() * mTab.getSelectedTabIconScale();\n    if (iconPosition == QMUITab.ICON_POSITION_BOTTOM || iconPosition == QMUITab.ICON_POSITION_TOP) {\n      return (int)(Math.max(iconWidth,textWidth) + 0.5);\n    }\n    return (int)(iconWidth + textWidth + mTab.getIconTextGap()+ 0.5);\n  }\n  public int getContentViewLeft(){\n    if (mTab == null) {\n      return 0;\n    }\n    if (mTab.getTabIcon() == null) {\n      return (int)(mSelectedTextLeft + 0.5);\n    }\n    int iconPosition=mTab.getIconPosition();\n    if (iconPosition == QMUITab.ICON_POSITION_BOTTOM || iconPosition == QMUITab.ICON_POSITION_TOP) {\n      return (int)Math.min(mSelectedTextLeft,mSelectedIconLeft + 0.5);\n    }\n else     if (iconPosition == QMUITab.ICON_POSITION_LEFT) {\n      return (int)(mSelectedIconLeft + 0.5);\n    }\n else {\n      return (int)(mSelectedTextLeft + 0.5);\n    }\n  }\n  private TextView ensureSignCountView(  Context context){\n    if (mSignCountView == null) {\n      mSignCountView=createSignCountView(context);\n      FrameLayout.LayoutParams signCountLp;\n      if (mSignCountView.getLayoutParams() != null) {\n        signCountLp=new FrameLayout.LayoutParams(mSignCountView.getLayoutParams());\n      }\n else {\n        signCountLp=new FrameLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT);\n      }\n      addView(mSignCountView,signCountLp);\n    }\n    return mSignCountView;\n  }\n  protected TextView createSignCountView(  Context context){\n    return new TextView(context,null,R.attr.qmui_tab_sign_count_view);\n  }\n  @Override protected void onMeasure(  int widthMeasureSpec,  int heightMeasureSpec){\n    if (mTab == null) {\n      super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n      return;\n    }\n    int widthSize=MeasureSpec.getSize(widthMeasureSpec);\n    int heightSize=MeasureSpec.getSize(heightMeasureSpec);\n    int widthMode=MeasureSpec.getMode(widthMeasureSpec);\n    int heightMode=MeasureSpec.getMode(heightMeasureSpec);\n    onMeasureTab(widthSize,heightSize);\n    int useWidthMeasureSpec=widthMeasureSpec;\n    int useHeightMeasureSpec=heightMeasureSpec;\n    QMUITabIcon icon=mTab.getTabIcon();\n    int iconPosition=mTab.getIconPosition();\n    if (widthMode == MeasureSpec.AT_MOST) {\n      if (icon == null) {\n        widthSize=(int)mCollapsingTextHelper.getExpandedTextWidth();\n      }\n else       if (iconPosition == QMUITab.ICON_POSITION_BOTTOM || iconPosition == QMUITab.ICON_POSITION_TOP) {\n        widthSize=(int)Math.max(mTab.getNormalTabIconWidth() * mTab.getSelectedTabIconScale(),mCollapsingTextHelper.getExpandedTextWidth());\n      }\n else {\n        widthSize=(int)(mCollapsingTextHelper.getExpandedTextWidth() + mTab.getIconTextGap() + mTab.getNormalTabIconWidth() * mTab.getSelectedTabIconScale());\n      }\n      useWidthMeasureSpec=MeasureSpec.makeMeasureSpec(widthSize,MeasureSpec.EXACTLY);\n    }\n    if (heightMode == MeasureSpec.AT_MOST) {\n      if (icon == null) {\n        heightSize=(int)mCollapsingTextHelper.getExpandedTextHeight();\n      }\n else       if (iconPosition == QMUITab.ICON_POSITION_LEFT || iconPosition == QMUITab.ICON_POSITION_RIGHT) {\n        heightSize=(int)Math.max(mTab.getNormalTabIconHeight() * mTab.getSelectedTabIconScale(),mCollapsingTextHelper.getExpandedTextWidth());\n      }\n else {\n        heightSize=(int)(mCollapsingTextHelper.getExpandedTextHeight() + mTab.getIconTextGap() + mTab.getNormalTabIconHeight() * mTab.getSelectedTabIconScale());\n      }\n      useHeightMeasureSpec=MeasureSpec.makeMeasureSpec(heightSize,MeasureSpec.EXACTLY);\n    }\n    super.onMeasure(useWidthMeasureSpec,useHeightMeasureSpec);\n  }\n  protected void onMeasureTab(  int widthSize,  int heightSize){\n    int textWidth=widthSize, textHeight=heightSize;\n    QMUITabIcon icon=mTab.getTabIcon();\n    if (icon != null && !mTab.isAllowIconDrawOutside()) {\n      float iconWidth=mTab.getNormalTabIconWidth() * mTab.selectedTabIconScale;\n      float iconHeight=mTab.getNormalTabIconHeight() * mTab.selectedTabIconScale;\n      int iconPosition=mTab.iconPosition;\n      if (iconPosition == QMUITab.ICON_POSITION_TOP || iconPosition == QMUITab.ICON_POSITION_BOTTOM) {\n        textHeight-=iconHeight - mTab.getIconTextGap();\n      }\n else {\n        textWidth-=iconWidth - mTab.getIconTextGap();\n      }\n    }\n    mCollapsingTextHelper.setCollapsedBounds(0,0,textWidth,textHeight);\n    mCollapsingTextHelper.setExpandedBounds(0,0,textWidth,textHeight);\n    mCollapsingTextHelper.calculateBaseOffsets();\n  }\n  @Override protected final void onLayout(  boolean changed,  int left,  int top,  int right,  int bottom){\n    super.onLayout(changed,left,top,right,bottom);\n    onLayoutTab(right - left,bottom - top);\n    onLayoutSignCount(right - left,bottom - top);\n  }\n  protected void onLayoutSignCount(  int width,  int height){\n    if (mSignCountView != null && mTab != null) {\n      Point point=calculateSignCountLayoutPosition();\n      int x=point.x, y=point.y;\n      if (point.x + mSignCountView.getMeasuredWidth() > width) {\n        x=width - mSignCountView.getMeasuredWidth();\n      }\n      if (point.y - mSignCountView.getMeasuredHeight() < 0) {\n        y=mSignCountView.getMeasuredHeight();\n      }\n      mSignCountView.layout(x,y - mSignCountView.getMeasuredHeight(),x + mSignCountView.getMeasuredWidth(),y);\n    }\n  }\n  private Point calculateSignCountLayoutPosition(){\n    QMUITabIcon icon=mTab.getTabIcon();\n    int left, bottom;\n    int iconPosition=mTab.getIconPosition();\n    if (icon == null || iconPosition == QMUITab.ICON_POSITION_BOTTOM || iconPosition == QMUITab.ICON_POSITION_LEFT) {\n      left=(int)(mCurrentTextLeft + mCurrentTextWidth);\n      bottom=(int)(mCurrentTextTop);\n    }\n else {\n      left=(int)(mCurrentIconLeft + mCurrentIconWidth);\n      bottom=(int)(mCurrentIconTop);\n    }\n    Point point=new Point(left,bottom);\n    point.offset(mTab.signCountLeftMarginWithIconOrText,mTab.signCountBottomMarginWithIconOrText);\n    return point;\n  }\n  protected void onLayoutTab(  int width,  int height){\n    if (mTab == null) {\n      return;\n    }\n    mCollapsingTextHelper.calculateCurrentOffsets();\n    QMUITabIcon icon=mTab.getTabIcon();\n    float normalTextWidth=mCollapsingTextHelper.getCollapsedTextWidth();\n    float normalTextHeight=mCollapsingTextHelper.getCollapsedTextHeight();\n    float selectedTextWidth=mCollapsingTextHelper.getExpandedTextWidth();\n    float selectedTextHeight=mCollapsingTextHelper.getExpandedTextHeight();\n    if (icon == null) {\n      mNormalIconLeft=mNormalIconTop=mSelectedIconLeft=mSelectedIconTop=0;\nswitch (mTab.gravity & Gravity.VERTICAL_GRAVITY_MASK) {\ncase Gravity.BOTTOM:        mNormalTextTop=height - normalTextHeight;\n      mSelectedTextTop=height - selectedTextHeight;\n    break;\ncase Gravity.TOP:  mNormalTextTop=0;\nmSelectedTextTop=0;\nbreak;\ncase Gravity.CENTER_VERTICAL:default:mNormalTextTop=(height - normalTextHeight) / 2;\nmSelectedTextTop=(height - selectedTextHeight) / 2;\nbreak;\n}\nswitch (mTab.gravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.RIGHT:mNormalTextLeft=width - normalTextWidth;\nmSelectedTextLeft=width - selectedTextWidth;\nbreak;\ncase Gravity.LEFT:mNormalTextLeft=0;\nmSelectedTextLeft=0;\nbreak;\ncase Gravity.CENTER_HORIZONTAL:default:mNormalTextLeft=(width - normalTextWidth) / 2;\nmSelectedTextLeft=(width - selectedTextWidth) / 2;\nbreak;\n}\n}\n else {\nint gap=mTab.getIconTextGap();\nint iconPosition=mTab.iconPosition;\nfloat normalIconWidth=mTab.getNormalTabIconWidth();\nfloat normalIconHeight=mTab.getNormalTabIconHeight();\nfloat selectedIconWidth=normalIconWidth * mTab.getSelectedTabIconScale();\nfloat selectedIconHeight=normalIconHeight * mTab.getSelectedTabIconScale();\nfloat normalTotalWidth=normalTextWidth + gap + normalIconWidth;\nfloat normalTotalHeight=normalTextHeight + gap + normalIconHeight;\nfloat selectedTotalWidth=selectedTextWidth + gap + selectedIconWidth;\nfloat selectedTotalHeight=selectedTextHeight + gap + selectedIconHeight;\nif (iconPosition == QMUITab.ICON_POSITION_TOP || iconPosition == QMUITab.ICON_POSITION_BOTTOM) {\nswitch (mTab.gravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.RIGHT:mNormalIconLeft=width - normalIconWidth;\nmNormalTextLeft=width - normalTextWidth;\nmSelectedIconLeft=width - selectedIconWidth;\nmSelectedTextLeft=width - selectedTextWidth;\nbreak;\ncase Gravity.LEFT:mNormalIconLeft=0;\nmNormalTextLeft=0;\nmSelectedIconLeft=0;\nmSelectedTextLeft=0;\nbreak;\ncase Gravity.CENTER_HORIZONTAL:default:mNormalIconLeft=(width - normalIconWidth) / 2;\nmNormalTextLeft=(width - normalTextWidth) / 2;\nmSelectedIconLeft=(width - selectedIconWidth) / 2;\nmSelectedTextLeft=(width - selectedTextWidth) / 2;\nbreak;\n}\nswitch (mTab.gravity & Gravity.VERTICAL_GRAVITY_MASK) {\ncase Gravity.BOTTOM:if (iconPosition == QMUITab.ICON_POSITION_TOP) {\nmNormalTextTop=height - normalTextHeight;\nmSelectedTextTop=height - selectedTextHeight;\nmNormalIconTop=mNormalTextTop - gap - normalIconHeight;\nmSelectedIconTop=mSelectedTextTop - gap - selectedIconHeight;\n}\n else {\nmNormalIconTop=height - normalIconHeight;\nmSelectedIconTop=height - selectedIconHeight;\nmNormalTextTop=mNormalIconTop - gap - normalTextHeight;\nmSelectedTextTop=mSelectedIconTop - gap - selectedTextHeight;\n}\nbreak;\ncase Gravity.TOP:if (iconPosition == QMUITab.ICON_POSITION_TOP) {\nmNormalIconTop=0;\nmSelectedIconTop=0;\nmNormalTextTop=normalIconHeight + gap;\nmSelectedTextTop=selectedIconHeight + gap;\n}\n else {\nmNormalTextTop=0;\nmSelectedTextTop=0;\nmNormalIconTop=normalTextHeight + gap;\nmSelectedIconTop=selectedTextHeight + gap;\n}\nbreak;\ncase Gravity.CENTER_VERTICAL:default:if (iconPosition == QMUITab.ICON_POSITION_TOP) {\nif (normalTotalHeight >= height) {\nmNormalIconTop=height - normalTotalHeight;\n}\n else {\nmNormalIconTop=(height - normalTotalHeight) / 2;\n}\nmNormalTextTop=mNormalIconTop + gap + normalIconHeight;\nif (selectedTotalHeight >= height) {\nmSelectedIconTop=height - selectedTotalHeight;\n}\n else {\nmSelectedIconTop=(height - selectedTotalHeight) / 2;\n}\nmSelectedTextTop=mSelectedIconTop + gap + selectedIconHeight;\n}\n else {\nif (normalTotalHeight >= height) {\nmNormalTextTop=0;\n}\n else {\nmNormalTextTop=(height - normalTotalHeight) / 2;\n}\nmNormalIconTop=mNormalTextTop + gap + normalTextHeight;\nif (selectedTotalHeight >= height) {\nmNormalTextTop=0;\n}\n else {\nmNormalTextTop=(height - selectedTotalHeight) / 2;\n}\nmNormalIconTop=mNormalTextTop + gap + selectedTextHeight;\n}\nbreak;\n}\n}\n else {\nswitch (mTab.gravity & Gravity.VERTICAL_GRAVITY_MASK) {\ncase Gravity.BOTTOM:mNormalIconTop=height - normalIconHeight;\nmNormalTextTop=height - normalTextHeight;\nmSelectedIconTop=height - selectedIconHeight;\nmSelectedTextTop=height - selectedTextHeight;\nbreak;\ncase Gravity.TOP:mNormalIconTop=0;\nmNormalTextTop=0;\nmSelectedIconTop=0;\nmSelectedTextTop=0;\nbreak;\ncase Gravity.CENTER_VERTICAL:default:mNormalIconTop=(height - normalIconHeight) / 2;\nmNormalTextTop=(height - normalTextHeight) / 2;\nmSelectedIconTop=(height - selectedIconHeight) / 2;\nmSelectedTextTop=(height - selectedTextHeight) / 2;\nbreak;\n}\nswitch (mTab.gravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.RIGHT:if (iconPosition == QMUITab.ICON_POSITION_RIGHT) {\nmNormalTextLeft=width - normalTotalWidth;\nmSelectedTextLeft=width - selectedTotalWidth;\nmNormalIconLeft=width - normalIconWidth;\nmSelectedIconLeft=width - selectedIconWidth;\n}\n else {\nmNormalIconLeft=width - normalTotalWidth;\nmSelectedIconLeft=width - selectedTotalWidth;\nmNormalTextLeft=width - normalTextWidth;\nmSelectedTextLeft=width - selectedTextWidth;\n}\nbreak;\ncase Gravity.LEFT:if (iconPosition == QMUITab.ICON_POSITION_RIGHT) {\nmNormalTextLeft=0;\nmSelectedTextLeft=0;\nmNormalIconLeft=normalTextWidth + gap;\nmSelectedIconLeft=selectedTextWidth + gap;\n}\n else {\nmNormalIconLeft=0;\nmSelectedIconLeft=0;\nmNormalTextLeft=normalIconWidth + gap;\nmSelectedTextLeft=selectedIconWidth + gap;\n}\nbreak;\ncase Gravity.CENTER_HORIZONTAL:default:if (iconPosition == QMUITab.ICON_POSITION_RIGHT) {\nmNormalTextLeft=(width - normalTotalWidth) / 2;\nmSelectedTextLeft=(width - selectedTotalWidth) / 2;\nmNormalIconLeft=mNormalTextLeft + normalTextWidth + gap;\nmSelectedIconLeft=mSelectedTextLeft + selectedTextWidth + gap;\n}\n else {\nmNormalIconLeft=(width - normalTotalWidth) / 2;\nmSelectedIconLeft=(width - selectedTotalWidth) / 2;\nmNormalTextLeft=mNormalIconLeft + normalIconWidth + gap;\nmSelectedTextLeft=mSelectedIconLeft + selectedIconWidth + gap;\n}\nbreak;\n}\nif (iconPosition == QMUITab.ICON_POSITION_LEFT) {\nif (normalTotalWidth >= width) {\nmNormalIconLeft=width - normalTotalWidth;\n}\n else {\nmNormalIconLeft=(width - normalTotalWidth) / 2;\n}\nmNormalTextLeft=mNormalIconLeft + normalIconWidth + gap;\nif (selectedTotalWidth >= width) {\nmSelectedIconLeft=width - selectedTotalWidth;\n}\n else {\nmSelectedIconLeft=(width - selectedTotalWidth) / 2;\n}\nmSelectedTextLeft=mSelectedIconLeft + selectedIconWidth + gap;\n}\n else {\nif (normalTotalWidth >= width) {\nmNormalTextLeft=0;\n}\n else {\nmNormalTextLeft=(width - normalTotalWidth) / 2;\n}\nmNormalIconLeft=mNormalTextLeft + normalTextWidth + gap;\nif (selectedTotalWidth >= width) {\nmSelectedTextLeft=0;\n}\n else {\nmSelectedTextLeft=(width - selectedTotalWidth) / 2;\n}\nmSelectedIconLeft=mSelectedTextLeft + selectedTextWidth + gap;\n}\n}\n}\nupdateCurrentInfo(1 - mCollapsingTextHelper.getExpansionFraction());\n}\n@Override public final void draw(Canvas canvas){\nonDrawTab(canvas);\nsuper.draw(canvas);\n}\nprotected void onDrawTab(Canvas canvas){\nif (mTab == null) {\nreturn;\n}\nQMUITabIcon icon=mTab.getTabIcon();\nif (icon != null) {\ncanvas.save();\ncanvas.translate(mCurrentIconLeft,mCurrentIconTop);\nicon.setBounds(0,0,(int)mCurrentIconWidth,(int)mCurrentIconHeight);\nicon.draw(canvas);\ncanvas.restore();\n}\ncanvas.save();\ncanvas.translate(mCurrentTextLeft,mCurrentTextTop);\nmCollapsingTextHelper.draw(canvas);\ncanvas.restore();\n}\n@Override public void handle(QMUISkinManager manager,int skinIndex,Resources.Theme theme,Map<String,Integer> attrs){\nif (mTab != null) {\nmCollapsingTextHelper.setTextColor(ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,mTab.normalColorAttr)),ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,mTab.selectedColorAttr)),true);\ninvalidate();\n}\n}\npublic interface Callback {\nvoid onClick(QMUITabView view);\nvoid onDoubleClick(QMUITabView view);\nvoid onLongClick(QMUITabView view);\n}\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[21,21], C[1,37]",
                "Detail": null,
                "Code": "import android.content.res.Resources;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[21,21], C[1,37]",
                "Detail": null,
                "Code": "import android.content.res.Resources;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[34,34], C[1,51]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.IQMUISkinHandlerView;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[34,34], C[1,51]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.IQMUISkinHandlerView;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[35,35], C[1,45]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.QMUISkinHelper;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[35,35], C[1,45]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.QMUISkinHelper;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[36,36], C[1,46]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.QMUISkinManager;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[36,36], C[1,46]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.skin.QMUISkinManager;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IMPORT",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[42,42], C[1,21]",
                "Detail": null,
                "Code": "import java.util.Map;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ImportDeclaration",
                "Method": "com.qmuiteam.qmui.widget.tab.CompilationUnit",
                "Local": "L[42,42], C[1,21]",
                "Detail": null,
                "Code": "import java.util.Map;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>).valueOf(UNKNOWN)",
                "Local": "L[665,665], C[44,98]",
                "Detail": null,
                "Code": "QMUISkinHelper.getSkinColor(this,mTab.normalColorAttr)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.setSelectFraction(float).getSkinColor(UNKNOWN, UNKNOWN)",
                "Local": "L[177,177], C[57,60]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>)",
                "Local": "L[663,669], C[25,9]",
                "Detail": null,
                "Code": "{\n  mCollapsingTextHelper.setTextColor(ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,mTab.normalColorAttr)),ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,mTab.selectedColorAttr)),true);\n  invalidate();\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_MarkerAnnotation",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>)",
                "Local": "L[661,661], C[5,13]",
                "Detail": null,
                "Code": "@Override",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_Modifier",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>)",
                "Local": "L[662,662], C[5,10]",
                "Detail": null,
                "Code": "public",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.bind(QMUITab).valueOf(UNKNOWN)",
                "Local": "L[133,133], C[40,95]",
                "Detail": null,
                "Code": "QMUISkinHelper.getSkinColor(this,tab.selectedColorAttr)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.bind(QMUITab).setTextColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[125,125], C[44,82]",
                "Detail": null,
                "Code": "ColorStateList.valueOf(tab.normalColor)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.bind(QMUITab).setTextColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[126,126], C[17,57]",
                "Detail": null,
                "Code": "ColorStateList.valueOf(tab.selectedColor)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "REMOVED_BooleanLiteral",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.bind(QMUITab).setTextColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[126,126], C[60,64]",
                "Detail": null,
                "Code": "false",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.bind(QMUITab).setTextColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[132,132], C[17,94]",
                "Detail": null,
                "Code": "ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,tab.normalColorAttr))",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.bind(QMUITab).setTextColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[133,133], C[17,96]",
                "Detail": null,
                "Code": "ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,tab.selectedColorAttr))",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_BooleanLiteral",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.bind(QMUITab).setTextColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[134,134], C[17,21]",
                "Detail": null,
                "Code": "false",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_InfixExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>)",
                "Local": "L[663,663], C[12,23]",
                "Detail": null,
                "Code": "mTab != null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.bind(QMUITab).getSkinColor(UNKNOWN, UNKNOWN)",
                "Local": "L[133,133], C[68,71]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.bind(QMUITab).valueOf(UNKNOWN)",
                "Local": "L[132,132], C[40,93]",
                "Detail": null,
                "Code": "QMUISkinHelper.getSkinColor(this,tab.normalColorAttr)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[469,474], C[72,25]",
                "Detail": null,
                "Code": "{\n  mNormalTextTop=height - normalTextHeight;\n  mSelectedTextTop=height - selectedTextHeight;\n  mNormalIconTop=mNormalTextTop - gap - normalIconHeight;\n  mSelectedIconTop=mSelectedTextTop - gap - selectedIconHeight;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_ELSE_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[474,479], C[32,25]",
                "Detail": null,
                "Code": "{\n  mNormalIconTop=height - normalIconHeight;\n  mSelectedIconTop=height - selectedIconHeight;\n  mNormalTextTop=mNormalIconTop - gap - normalTextHeight;\n  mSelectedTextTop=mSelectedIconTop - gap - selectedTextHeight;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[469,474], C[72,25]",
                "Detail": null,
                "Code": "{\n  mNormalTextTop=height - normalTextHeight;\n  mSelectedTextTop=height - selectedTextHeight;\n  mNormalIconTop=mNormalTextTop - gap - normalIconHeight;\n  mSelectedIconTop=mSelectedTextTop - gap - selectedIconHeight;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_ELSE_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[474,479], C[32,25]",
                "Detail": null,
                "Code": "{\n  mNormalIconTop=height - normalIconHeight;\n  mSelectedIconTop=height - selectedIconHeight;\n  mNormalTextTop=mNormalIconTop - gap - normalTextHeight;\n  mSelectedTextTop=mSelectedIconTop - gap - selectedTextHeight;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[499,501], C[62,29]",
                "Detail": null,
                "Code": "{\n  mNormalIconTop=height - normalTotalHeight;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_ELSE_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[501,503], C[36,29]",
                "Detail": null,
                "Code": "{\n  mNormalIconTop=(height - normalTotalHeight) / 2;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[507,509], C[64,29]",
                "Detail": null,
                "Code": "{\n  mSelectedIconTop=height - selectedTotalHeight;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_ELSE_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[509,511], C[36,29]",
                "Detail": null,
                "Code": "{\n  mSelectedIconTop=(height - selectedTotalHeight) / 2;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[557,562], C[74,25]",
                "Detail": null,
                "Code": "{\n  mNormalTextLeft=width - normalTotalWidth;\n  mSelectedTextLeft=width - selectedTotalWidth;\n  mNormalIconLeft=width - normalIconWidth;\n  mSelectedIconLeft=width - selectedIconWidth;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_ELSE_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[562,567], C[32,25]",
                "Detail": null,
                "Code": "{\n  mNormalIconLeft=width - normalTotalWidth;\n  mSelectedIconLeft=width - selectedTotalWidth;\n  mNormalTextLeft=width - normalTextWidth;\n  mSelectedTextLeft=width - selectedTextWidth;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[557,562], C[74,25]",
                "Detail": null,
                "Code": "{\n  mNormalTextLeft=width - normalTotalWidth;\n  mSelectedTextLeft=width - selectedTotalWidth;\n  mNormalIconLeft=width - normalIconWidth;\n  mSelectedIconLeft=width - selectedIconWidth;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_ELSE_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[562,567], C[32,25]",
                "Detail": null,
                "Code": "{\n  mNormalIconLeft=width - normalTotalWidth;\n  mSelectedIconLeft=width - selectedTotalWidth;\n  mNormalTextLeft=width - normalTextWidth;\n  mSelectedTextLeft=width - selectedTextWidth;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[600,602], C[52,21]",
                "Detail": null,
                "Code": "{\n  mNormalIconLeft=width - normalTotalWidth;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_ELSE_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[602,604], C[28,21]",
                "Detail": null,
                "Code": "{\n  mNormalIconLeft=(width - normalTotalWidth) / 2;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_IF_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[608,610], C[54,21]",
                "Detail": null,
                "Code": "{\n  mSelectedIconLeft=width - selectedTotalWidth;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_EXISTING_ELSE_BLOCK",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[610,612], C[28,21]",
                "Detail": null,
                "Code": "{\n  mSelectedIconLeft=(width - selectedTotalWidth) / 2;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[482,487], C[72,25]",
                "Detail": null,
                "Code": "{\n  mNormalIconTop=0;\n  mSelectedIconTop=0;\n  mNormalTextTop=normalIconHeight + gap;\n  mSelectedTextTop=selectedIconHeight + gap;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[487,492], C[32,25]",
                "Detail": null,
                "Code": "{\n  mNormalTextTop=0;\n  mSelectedTextTop=0;\n  mNormalIconTop=normalTextHeight + gap;\n  mSelectedIconTop=selectedTextHeight + gap;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[497,513], C[72,25]",
                "Detail": null,
                "Code": "{\n  if (normalTotalHeight >= height) {\n    mNormalIconTop=height - normalTotalHeight;\n  }\n else {\n    mNormalIconTop=(height - normalTotalHeight) / 2;\n  }\n  mNormalTextTop=mNormalIconTop + gap + normalIconHeight;\n  if (selectedTotalHeight >= height) {\n    mSelectedIconTop=height - selectedTotalHeight;\n  }\n else {\n    mSelectedIconTop=(height - selectedTotalHeight) / 2;\n  }\n  mSelectedTextTop=mSelectedIconTop + gap + selectedIconHeight;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[513,529], C[32,25]",
                "Detail": null,
                "Code": "{\n  if (normalTotalHeight >= height) {\n    mNormalTextTop=0;\n  }\n else {\n    mNormalTextTop=(height - normalTotalHeight) / 2;\n  }\n  mNormalIconTop=mNormalTextTop + gap + normalTextHeight;\n  if (selectedTotalHeight >= height) {\n    mNormalTextTop=0;\n  }\n else {\n    mNormalTextTop=(height - selectedTotalHeight) / 2;\n  }\n  mNormalIconTop=mNormalTextTop + gap + selectedTextHeight;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[515,517], C[62,29]",
                "Detail": null,
                "Code": "{\n  mNormalTextTop=0;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[517,519], C[36,29]",
                "Detail": null,
                "Code": "{\n  mNormalTextTop=(height - normalTotalHeight) / 2;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[523,525], C[64,29]",
                "Detail": null,
                "Code": "{\n  mNormalTextTop=0;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[525,527], C[36,29]",
                "Detail": null,
                "Code": "{\n  mNormalTextTop=(height - selectedTotalHeight) / 2;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[570,575], C[74,25]",
                "Detail": null,
                "Code": "{\n  mNormalTextLeft=0;\n  mSelectedTextLeft=0;\n  mNormalIconLeft=normalTextWidth + gap;\n  mSelectedIconLeft=selectedTextWidth + gap;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[575,580], C[32,25]",
                "Detail": null,
                "Code": "{\n  mNormalIconLeft=0;\n  mSelectedIconLeft=0;\n  mNormalTextLeft=normalIconWidth + gap;\n  mSelectedTextLeft=selectedIconWidth + gap;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[584,589], C[74,25]",
                "Detail": null,
                "Code": "{\n  mNormalTextLeft=(width - normalTotalWidth) / 2;\n  mSelectedTextLeft=(width - selectedTotalWidth) / 2;\n  mNormalIconLeft=mNormalTextLeft + normalTextWidth + gap;\n  mSelectedIconLeft=mSelectedTextLeft + selectedTextWidth + gap;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[589,594], C[32,25]",
                "Detail": null,
                "Code": "{\n  mNormalIconLeft=(width - normalTotalWidth) / 2;\n  mSelectedIconLeft=(width - selectedTotalWidth) / 2;\n  mNormalTextLeft=mNormalIconLeft + normalIconWidth + gap;\n  mSelectedTextLeft=mSelectedIconLeft + selectedIconWidth + gap;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[616,618], C[52,21]",
                "Detail": null,
                "Code": "{\n  mNormalTextLeft=0;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[618,620], C[28,21]",
                "Detail": null,
                "Code": "{\n  mNormalTextLeft=(width - normalTotalWidth) / 2;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_IF_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[624,626], C[54,21]",
                "Detail": null,
                "Code": "{\n  mSelectedTextLeft=0;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.onLayoutTab(int, int)",
                "Local": "L[626,628], C[28,21]",
                "Detail": null,
                "Code": "{\n  mSelectedTextLeft=(width - selectedTotalWidth) / 2;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>)",
                "Local": "L[668,668], C[13,24]",
                "Detail": null,
                "Code": "invalidate()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.bind(QMUITab).getSkinColor(UNKNOWN, UNKNOWN)",
                "Local": "L[132,132], C[68,71]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "METHOD_CALL_ARGUMENTS_CHANGE",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.setSelectFraction(float).computeColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[176,178], C[21,96]",
                "Detail": null,
                "Code": "QMUIColorHelper.computeColor(QMUISkinHelper.getSkinColor(this,mTab.normalColorAttr),QMUISkinHelper.getSkinColor(this,mTab.selectedColorAttr),fraction)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.setSelectFraction(float).computeColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[177,177], C[29,83]",
                "Detail": null,
                "Code": "QMUISkinHelper.getSkinColor(this,mTab.normalColorAttr)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.setSelectFraction(float).computeColor(UNKNOWN, UNKNOWN, UNKNOWN)",
                "Local": "L[178,178], C[29,85]",
                "Detail": null,
                "Code": "QMUISkinHelper.getSkinColor(this,mTab.selectedColorAttr)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ThisExpression",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.setSelectFraction(float).getSkinColor(UNKNOWN, UNKNOWN)",
                "Local": "L[178,178], C[57,60]",
                "Detail": null,
                "Code": "this",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>).valueOf(UNKNOWN)",
                "Local": "L[666,666], C[44,100]",
                "Detail": null,
                "Code": "QMUISkinHelper.getSkinColor(this,mTab.selectedColorAttr)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_NullLiteral",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>)",
                "Local": "L[663,663], C[20,23]",
                "Detail": null,
                "Code": "null",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.bind(QMUITab)",
                "Local": "L[131,134], C[9,22]",
                "Detail": null,
                "Code": "mCollapsingTextHelper.setTextColor(ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,tab.normalColorAttr)),ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,tab.selectedColorAttr)),false)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView",
                "Local": "L[661,670], C[5,5]",
                "Detail": null,
                "Code": "@Override public void handle(QMUISkinManager manager,int skinIndex,Resources.Theme theme,Map<String,Integer> attrs){\n  if (mTab != null) {\n    mCollapsingTextHelper.setTextColor(ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,mTab.normalColorAttr)),ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,mTab.selectedColorAttr)),true);\n    invalidate();\n  }\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "CHANGED_IF_CONDITION",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.getContentViewLeft()",
                "Local": "L[245,247], C[40,9]",
                "Detail": null,
                "Code": "{\n  return (int)(mSelectedTextLeft + 0.5);\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_ELSE_STATEMENT",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.getContentViewLeft()",
                "Local": "L[253,255], C[16,9]",
                "Detail": null,
                "Code": "{\n  return (int)(mSelectedTextLeft + 0.5);\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmui.widget.tab.QMUITabView.handle(QMUISkinManager, int, Resources.Theme, Map<String,Integer>)",
                "Local": "L[664,667], C[13,25]",
                "Detail": null,
                "Code": "mCollapsingTextHelper.setTextColor(ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,mTab.normalColorAttr)),ColorStateList.valueOf(QMUISkinHelper.getSkinColor(this,mTab.selectedColorAttr)),true)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmui/src/main/java/com/qmuiteam/qmui/widget/tab/QMUITabView.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[274,274], C[51,118]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_gray_1)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[275,275], C[49,113]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_red)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[295,295], C[51,116]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_blue)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[296,296], C[49,113]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_red)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_VARIABLE",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[225,230], C[33,49]",
                "Detail": null,
                "Code": "QMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_blue).build();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_VARIABLE",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[231,236], C[33,49]",
                "Detail": null,
                "Code": "QMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[229,229], C[51,118]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_gray_1)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[230,230], C[49,114]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_blue)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[287,292], C[41,48]",
                "Detail": null,
                "Code": "component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_blue,R.attr.qmui_config_color_red).build()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[225,230], C[41,48]",
                "Detail": null,
                "Code": "component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_blue).build()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_VARIABLE",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[267,272], C[33,49]",
                "Detail": null,
                "Code": "QMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_VARIABLE",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[261,266], C[33,49]",
                "Detail": null,
                "Code": "QMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_blue,R.attr.qmui_config_color_red).build();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[267,267], C[51,116]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_blue)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[268,268], C[49,113]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_red)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[302,302], C[51,118]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_gray_1)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[303,303], C[49,113]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_red)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_ANONYMOUS_DECLARATION",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList()",
                "Local": "L[140,308], C[46,17]",
                "Detail": null,
                "Code": "new QMUIBottomSheet.BottomListSheetBuilder.OnSheetItemClickListener(){\n  @Override public void onClick(  QMUIBottomSheet dialog,  View itemView,  int position,  String tag){\n    dialog.dismiss();\n    Context context=getContext();\n    QMUITabBuilder tabBuilder=mTabSegment.tabBuilder().setGravity(Gravity.CENTER);\n    int indicatorHeight=QMUIDisplayHelper.dp2px(context,2);\nswitch (position) {\ncase 0:      mTabSegment.reset();\n    mTabSegment.setIndicator(null);\n  mTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 1:mTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 2:mTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,true,true));\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 3:mTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,false));\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 4:{\nmTabSegment.reset();\nmTabSegment.setIndicator(null);\ntabBuilder.setDynamicChangeIconColor(true);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 5:QMUITab tab=mTabSegment.getTab(0);\ntab.setSignCount(20);\nQMUITab tab1=mTabSegment.getTab(1);\ntab1.setRedPoint();\nbreak;\ncase 6:{\nmTabSegment.reset();\nmTabSegment.setIndicator(null);\ntabBuilder.setDynamicChangeIconColor(false);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 7:{\nmTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\ntabBuilder.setDynamicChangeIconColor(true);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_blue).build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 8:mTabSegment.updateTabText(0,\"动态更新文案\");\nbreak;\ncase 9:{\nQMUITab newTab=tabBuilder.setText(\"动态更新\").setNormalDrawable(ContextCompat.getDrawable(getContext(),R.mipmap.icon_tabbar_component)).setDynamicChangeIconColor(true).build();\nmTabSegment.replaceTab(0,newTab);\nbreak;\n}\ncase 10:{\nmTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\ntabBuilder.setDynamicChangeIconColor(true).setTextSize(QMUIDisplayHelper.sp2px(context,13),QMUIDisplayHelper.sp2px(context,15)).setSelectedIconScale(1.5f);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_blue,R.attr.qmui_config_color_red).build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 11:{\nmTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\ntabBuilder.setDynamicChangeIconColor(true).setTextSize(QMUIDisplayHelper.sp2px(context,13),QMUIDisplayHelper.sp2px(context,15)).setSelectedIconScale(1.5f).setGravity(Gravity.LEFT | Gravity.BOTTOM);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_blue,R.attr.qmui_config_color_red).build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ndefault:break;\n}\nmTabSegment.notifyDataChanged();\n}\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_ClassInstanceCreation",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList()",
                "Local": "L[140,308], C[46,17]",
                "Detail": null,
                "Code": "new QMUIBottomSheet.BottomListSheetBuilder.OnSheetItemClickListener(){\n  @Override public void onClick(  QMUIBottomSheet dialog,  View itemView,  int position,  String tag){\n    dialog.dismiss();\n    Context context=getContext();\n    QMUITabBuilder tabBuilder=mTabSegment.tabBuilder().setGravity(Gravity.CENTER);\n    int indicatorHeight=QMUIDisplayHelper.dp2px(context,2);\nswitch (position) {\ncase 0:      mTabSegment.reset();\n    mTabSegment.setIndicator(null);\n  mTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 1:mTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 2:mTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,true,true));\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 3:mTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,false));\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 4:{\nmTabSegment.reset();\nmTabSegment.setIndicator(null);\ntabBuilder.setDynamicChangeIconColor(true);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 5:QMUITab tab=mTabSegment.getTab(0);\ntab.setSignCount(20);\nQMUITab tab1=mTabSegment.getTab(1);\ntab1.setRedPoint();\nbreak;\ncase 6:{\nmTabSegment.reset();\nmTabSegment.setIndicator(null);\ntabBuilder.setDynamicChangeIconColor(false);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 7:{\nmTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\ntabBuilder.setDynamicChangeIconColor(true);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_blue).build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 8:mTabSegment.updateTabText(0,\"动态更新文案\");\nbreak;\ncase 9:{\nQMUITab newTab=tabBuilder.setText(\"动态更新\").setNormalDrawable(ContextCompat.getDrawable(getContext(),R.mipmap.icon_tabbar_component)).setDynamicChangeIconColor(true).build();\nmTabSegment.replaceTab(0,newTab);\nbreak;\n}\ncase 10:{\nmTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\ntabBuilder.setDynamicChangeIconColor(true).setTextSize(QMUIDisplayHelper.sp2px(context,13),QMUIDisplayHelper.sp2px(context,15)).setSelectedIconScale(1.5f);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_blue,R.attr.qmui_config_color_red).build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 11:{\nmTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\ntabBuilder.setDynamicChangeIconColor(true).setTextSize(QMUIDisplayHelper.sp2px(context,13),QMUIDisplayHelper.sp2px(context,15)).setSelectedIconScale(1.5f).setGravity(Gravity.LEFT | Gravity.BOTTOM);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_blue,R.attr.qmui_config_color_red).build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ndefault:break;\n}\nmTabSegment.notifyDataChanged();\n}\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_SWITCHSTATEMENT",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[148,305], C[25,25]",
                "Detail": null,
                "Code": "switch (position) {\ncase 0:  mTabSegment.reset();\nmTabSegment.setIndicator(null);\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 1:mTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 2:mTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,true,true));\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 3:mTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,false));\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 4:{\nmTabSegment.reset();\nmTabSegment.setIndicator(null);\ntabBuilder.setDynamicChangeIconColor(true);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 5:QMUITab tab=mTabSegment.getTab(0);\ntab.setSignCount(20);\nQMUITab tab1=mTabSegment.getTab(1);\ntab1.setRedPoint();\nbreak;\ncase 6:{\nmTabSegment.reset();\nmTabSegment.setIndicator(null);\ntabBuilder.setDynamicChangeIconColor(false);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 7:{\nmTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\ntabBuilder.setDynamicChangeIconColor(true);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_blue).build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 8:mTabSegment.updateTabText(0,\"动态更新文案\");\nbreak;\ncase 9:{\nQMUITab newTab=tabBuilder.setText(\"动态更新\").setNormalDrawable(ContextCompat.getDrawable(getContext(),R.mipmap.icon_tabbar_component)).setDynamicChangeIconColor(true).build();\nmTabSegment.replaceTab(0,newTab);\nbreak;\n}\ncase 10:{\nmTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\ntabBuilder.setDynamicChangeIconColor(true).setTextSize(QMUIDisplayHelper.sp2px(context,13),QMUIDisplayHelper.sp2px(context,15)).setSelectedIconScale(1.5f);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_blue,R.attr.qmui_config_color_red).build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 11:{\nmTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\ntabBuilder.setDynamicChangeIconColor(true).setTextSize(QMUIDisplayHelper.sp2px(context,13),QMUIDisplayHelper.sp2px(context,15)).setSelectedIconScale(1.5f).setGravity(Gravity.LEFT | Gravity.BOTTOM);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_blue,R.attr.qmui_config_color_red).build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ndefault:break;\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[293,298], C[41,48]",
                "Detail": null,
                "Code": "util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[231,236], C[41,48]",
                "Detail": null,
                "Code": "util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_AnonymousClassDeclaration",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().QMUIBottomSheet.BottomListSheetBuilder.OnSheetItemClickListener",
                "Local": "L[140,308], C[116,17]",
                "Detail": null,
                "Code": "{\n  @Override public void onClick(  QMUIBottomSheet dialog,  View itemView,  int position,  String tag){\n    dialog.dismiss();\n    Context context=getContext();\n    QMUITabBuilder tabBuilder=mTabSegment.tabBuilder().setGravity(Gravity.CENTER);\n    int indicatorHeight=QMUIDisplayHelper.dp2px(context,2);\nswitch (position) {\ncase 0:      mTabSegment.reset();\n    mTabSegment.setIndicator(null);\n  mTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 1:mTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 2:mTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,true,true));\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 3:mTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,false));\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_1_title)).build());\nmTabSegment.addTab(tabBuilder.setText(getString(R.string.tabSegment_item_2_title)).build());\nbreak;\ncase 4:{\nmTabSegment.reset();\nmTabSegment.setIndicator(null);\ntabBuilder.setDynamicChangeIconColor(true);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 5:QMUITab tab=mTabSegment.getTab(0);\ntab.setSignCount(20);\nQMUITab tab1=mTabSegment.getTab(1);\ntab1.setRedPoint();\nbreak;\ncase 6:{\nmTabSegment.reset();\nmTabSegment.setIndicator(null);\ntabBuilder.setDynamicChangeIconColor(false);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 7:{\nmTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\ntabBuilder.setDynamicChangeIconColor(true);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_blue).build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 8:mTabSegment.updateTabText(0,\"动态更新文案\");\nbreak;\ncase 9:{\nQMUITab newTab=tabBuilder.setText(\"动态更新\").setNormalDrawable(ContextCompat.getDrawable(getContext(),R.mipmap.icon_tabbar_component)).setDynamicChangeIconColor(true).build();\nmTabSegment.replaceTab(0,newTab);\nbreak;\n}\ncase 10:{\nmTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\ntabBuilder.setDynamicChangeIconColor(true).setTextSize(QMUIDisplayHelper.sp2px(context,13),QMUIDisplayHelper.sp2px(context,15)).setSelectedIconScale(1.5f);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_blue,R.attr.qmui_config_color_red).build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ncase 11:{\nmTabSegment.reset();\nmTabSegment.setIndicator(new QMUITabIndicator(indicatorHeight,false,true));\ntabBuilder.setDynamicChangeIconColor(true).setTextSize(QMUIDisplayHelper.sp2px(context,13),QMUIDisplayHelper.sp2px(context,15)).setSelectedIconScale(1.5f).setGravity(Gravity.LEFT | Gravity.BOTTOM);\nQMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_blue,R.attr.qmui_config_color_red).build();\nQMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\nmTabSegment.addTab(component);\nmTabSegment.addTab(util);\nbreak;\n}\ndefault:break;\n}\nmTabSegment.notifyDataChanged();\n}\n}\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[267,272], C[41,48]",
                "Detail": null,
                "Code": "util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_VAR_VALUE",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[261,266], C[41,48]",
                "Detail": null,
                "Code": "component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_blue,R.attr.qmui_config_color_red).build()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_VARIABLE",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[287,292], C[33,49]",
                "Detail": null,
                "Code": "QMUITab component=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_component_selected)).setText(\"Components\").setColorAttr(R.attr.qmui_config_color_blue,R.attr.qmui_config_color_red).build();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "CHANGED_VARIABLE",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[293,298], C[33,49]",
                "Detail": null,
                "Code": "QMUITab util=tabBuilder.setNormalDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util)).setSelectedDrawable(ContextCompat.getDrawable(context,R.mipmap.icon_tabbar_util_selected)).setText(\"Helper\").setColorAttr(R.attr.qmui_config_color_gray_1,R.attr.qmui_config_color_red).build();\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[236,236], C[51,118]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_gray_1)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.components.QDTabSegmentFixModeFragment.showBottomSheetList().onClick(QMUIBottomSheet, View, int, String)",
                "Local": "L[237,237], C[49,113]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(context,R.attr.qmui_config_color_red)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/components/QDTabSegmentFixModeFragment.java"
            },
            {
                "Metric": "REMOVED_IMPORT",
                "Method": "com.qmuiteam.qmuidemo.fragment.home.CompilationUnit",
                "Local": "L[25,25], C[1,44]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.util.QMUIResHelper;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/home/HomeFragment.java"
            },
            {
                "Metric": "REMOVED_ImportDeclaration",
                "Method": "com.qmuiteam.qmuidemo.fragment.home.CompilationUnit",
                "Local": "L[25,25], C[1,44]",
                "Detail": null,
                "Code": "import com.qmuiteam.qmui.util.QMUIResHelper;\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/home/HomeFragment.java"
            },
            {
                "Metric": "ADDED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.home.HomeFragment.initTabs()",
                "Local": "L[105,105], C[9,42]",
                "Detail": null,
                "Code": "builder.setSelectedIconScale(1.2f)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/home/HomeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.home.HomeFragment.initTabs()",
                "Local": "L[107,107], C[9,50]",
                "Detail": null,
                "Code": "builder.setColor(normalColor,selectColor)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/home/HomeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.home.HomeFragment.initTabs().getAttrColor(UNKNOWN, UNKNOWN)",
                "Local": "L[105,105], C[54,65]",
                "Detail": null,
                "Code": "getContext()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/home/HomeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.home.HomeFragment.initTabs()",
                "Local": "L[104,104], C[27,99]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(getContext(),R.attr.qmui_config_color_gray_6)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/home/HomeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.home.HomeFragment.initTabs().getAttrColor(UNKNOWN, UNKNOWN)",
                "Local": "L[104,104], C[54,65]",
                "Detail": null,
                "Code": "getContext()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/home/HomeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.home.HomeFragment.initTabs()",
                "Local": "L[105,105], C[27,97]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(getContext(),R.attr.qmui_config_color_blue)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/home/HomeFragment.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "com.qmuiteam.qmuidemo.fragment.home.HomeFragment.initTabs()",
                "Local": "L[104,104], C[9,100]",
                "Detail": null,
                "Code": "int normalColor=QMUIResHelper.getAttrColor(getContext(),R.attr.qmui_config_color_gray_6);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/home/HomeFragment.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "com.qmuiteam.qmuidemo.fragment.home.HomeFragment.initTabs()",
                "Local": "L[105,105], C[9,98]",
                "Detail": null,
                "Code": "int selectColor=QMUIResHelper.getAttrColor(getContext(),R.attr.qmui_config_color_blue);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/home/HomeFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.util.QDNotchHelperFragment.initTabs()",
                "Local": "L[113,113], C[27,99]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(getContext(),R.attr.qmui_config_color_gray_6)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/util/QDNotchHelperFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.util.QDNotchHelperFragment.initTabs().getAttrColor(UNKNOWN, UNKNOWN)",
                "Local": "L[114,114], C[54,65]",
                "Detail": null,
                "Code": "getContext()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/util/QDNotchHelperFragment.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "com.qmuiteam.qmuidemo.fragment.util.QDNotchHelperFragment.initTabs()",
                "Local": "L[113,113], C[9,100]",
                "Detail": null,
                "Code": "int normalColor=QMUIResHelper.getAttrColor(getContext(),R.attr.qmui_config_color_gray_6);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/util/QDNotchHelperFragment.java"
            },
            {
                "Metric": "REMOVED_VARIABLE",
                "Method": "com.qmuiteam.qmuidemo.fragment.util.QDNotchHelperFragment.initTabs()",
                "Local": "L[114,114], C[9,98]",
                "Detail": null,
                "Code": "int selectColor=QMUIResHelper.getAttrColor(getContext(),R.attr.qmui_config_color_blue);\n",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/util/QDNotchHelperFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.util.QDNotchHelperFragment.initTabs()",
                "Local": "L[114,114], C[27,97]",
                "Detail": null,
                "Code": "QMUIResHelper.getAttrColor(getContext(),R.attr.qmui_config_color_blue)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/util/QDNotchHelperFragment.java"
            },
            {
                "Metric": "METHOD_CALL_ARGUMENTS_CHANGE",
                "Method": "com.qmuiteam.qmuidemo.fragment.util.QDNotchHelperFragment.initTabs().setColorAttr(UNKNOWN, UNKNOWN)",
                "Local": "L[114,114], C[9,92]",
                "Detail": null,
                "Code": "builder.setColorAttr(R.attr.qmui_config_color_gray_6,R.attr.qmui_config_color_blue)",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/util/QDNotchHelperFragment.java"
            },
            {
                "Metric": "REMOVED_METHOD_CALL",
                "Method": "com.qmuiteam.qmuidemo.fragment.util.QDNotchHelperFragment.initTabs().getAttrColor(UNKNOWN, UNKNOWN)",
                "Local": "L[113,113], C[54,65]",
                "Detail": null,
                "Code": "getContext()",
                "relationType": "NOT_RELATED",
                "distance": 99,
                "file": "qmuidemo/src/main/java/com/qmuiteam/qmuidemo/fragment/util/QDNotchHelperFragment.java"
            }
        ],
        "metadata": {
            "type": "Rename Method",
            "description": "Rename Method public addTheme(index int, styleRes int) : void renamed to public addSkin(index int, styleRes int) : void in class com.qmuiteam.qmui.skin.QMUISkinManager",
            "leftSideLocations": [
                {
                    "filePath": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java",
                    "startLine": 160,
                    "endLine": 171,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "original method declaration",
                    "codeElement": "public addTheme(index int, styleRes int) : void"
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "qmui/src/main/java/com/qmuiteam/qmui/skin/QMUISkinManager.java",
                    "startLine": 160,
                    "endLine": 174,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "renamed method declaration",
                    "codeElement": "public addSkin(index int, styleRes int) : void"
                }
            ]
        }
    }
]